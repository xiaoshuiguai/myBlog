Connected to Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 
Connected as gkpt60@10.16.3.179/hiatmpdb

SQL> 
SQL> ---------------------------------------6.0 psa start----------------------------------
SQL> --------------------------------------------------------------创建表格------------------------------------------------------------------------------
SQL> -- Create table
SQL> create table PSA_CASE
  2  (
  3    id         VARCHAR2(60) not null,
  4    status     VARCHAR2(60),
  5    case_time  VARCHAR2(60),
  6    case_type  VARCHAR2(60),
  7    big_dept   VARCHAR2(60),
  8    mid_dept   VARCHAR2(60),
  9    policeid   VARCHAR2(60),
 10    policename VARCHAR2(60)
 11  )
 12  tablespace HIATMPTS
 13    pctfree 10
 14    initrans 1
 15    maxtrans 255
 16    storage
 17    (
 18      initial 64K
 19      next 8K
 20      minextents 1
 21      maxextents unlimited
 22    )
 23  nologging;
Table created
SQL> -- Create table
SQL> create table PSA_CASE_EXCEPTION
  2  (
  3    id           VARCHAR2(60) not null,
  4    case_id      VARCHAR2(60),
  5    exception_id VARCHAR2(60)
  6  )
  7  tablespace HIATMPTS
  8    pctfree 10
  9    initrans 1
 10    maxtrans 255
 11    storage
 12    (
 13      initial 64K
 14      next 1M
 15      minextents 1
 16      maxextents unlimited
 17    )
 18  nologging;
Table created
SQL> -- Add comments to the columns
SQL> comment on column PSA_CASE_EXCEPTION.case_id
  2    is '案件id';
Comment added
SQL> comment on column PSA_CASE_EXCEPTION.exception_id
  2    is '异常id';
Comment added
SQL> -- Create table
SQL> create table PSA_CASE_SOU_RELATION
  2  (
  3    id          VARCHAR2(60) not null,
  4    case_id     VARCHAR2(60),
  5    third_table VARCHAR2(2560),
  6    source_id   VARCHAR2(60),
  7    source_json CLOB,
  8    create_time DATE default sysdate
  9  )
 10  tablespace HIATMPTS
 11    pctfree 10
 12    initrans 1
 13    maxtrans 255
 14    storage
 15    (
 16      initial 64K
 17      next 8K
 18      minextents 1
 19      maxextents unlimited
 20    )
 21  nologging;
Table created
SQL> -- Add comments to the columns
SQL> comment on column PSA_CASE_SOU_RELATION.id
  2    is '主键';
Comment added
SQL> comment on column PSA_CASE_SOU_RELATION.case_id
  2    is '案件id';
Comment added
SQL> comment on column PSA_CASE_SOU_RELATION.third_table
  2    is '第三方表';
Comment added
SQL> comment on column PSA_CASE_SOU_RELATION.source_id
  2    is '第三方表id';
Comment added
SQL> comment on column PSA_CASE_SOU_RELATION.source_json
  2    is '原始数据json';
Comment added
SQL> comment on column PSA_CASE_SOU_RELATION.create_time
  2    is '创建时间';
Comment added
SQL> -- Create/Recreate primary, unique and foreign key constraints
SQL> alter table PSA_CASE_SOU_RELATION
  2    add constraint PSA_CASE_SOU_RELATION_PK primary key (ID)
  3    using index
  4    tablespace HIATMPTS
  5    pctfree 10
  6    initrans 2
  7    maxtrans 255
  8    storage
  9    (
 10      initial 64K
 11      next 1M
 12      minextents 1
 13      maxextents unlimited
 14    );
Table altered
SQL>   -- Create table
SQL> create table PSA_COLLIDE_SQL
  2  (
  3    id        VARCHAR2(60) not null,
  4    fields    VARCHAR2(2000) not null,
  5    tablename VARCHAR2(2000) not null,
  6    condition VARCHAR2(2000) not null
  7  )
  8  tablespace HIATMPTS
  9    pctfree 10
 10    initrans 1
 11    maxtrans 255
 12    storage
 13    (
 14      initial 64K
 15      next 8K
 16      minextents 1
 17      maxextents unlimited
 18    )
 19  nologging;
Table created
SQL> -- Add comments to the table
SQL> comment on table PSA_COLLIDE_SQL
  2    is '碰撞字段查询sql信息表';
Comment added
SQL> -- Add comments to the columns
SQL> comment on column PSA_COLLIDE_SQL.fields
  2    is '查询字段';
Comment added
SQL> comment on column PSA_COLLIDE_SQL.tablename
  2    is '表名，包含join语句';
Comment added
SQL> comment on column PSA_COLLIDE_SQL.condition
  2    is '查询条件';
Comment added
SQL> -- Create/Recreate primary, unique and foreign key constraints
SQL> alter table PSA_COLLIDE_SQL
  2    add constraint PK_CSQL primary key (ID)
  3    using index
  4    tablespace hiatmpts
  5    pctfree 10
  6    initrans 2
  7    maxtrans 255
  8    storage
  9    (
 10      initial 64K
 11      next 1M
 12      minextents 1
 13      maxextents unlimited
 14    );
Table altered
SQL>   -- Create table
SQL> create table PSA_DATA_COLLECT_LOG
  2  (
  3    id              VARCHAR2(60) not null,
  4    third_system    VARCHAR2(60),
  5    begin_time      DATE,
  6    end_time        DATE,
  7    result          VARCHAR2(60),
  8    data_begin_time DATE,
  9    data_end_time   DATE
 10  )
 11  tablespace HIATMPTS
 12    pctfree 10
 13    initrans 1
 14    maxtrans 255
 15    storage
 16    (
 17      initial 64K
 18      next 8K
 19      minextents 1
 20      maxextents unlimited
 21    )
 22  nologging;
Table created
SQL> -- Add comments to the columns
SQL> comment on column PSA_DATA_COLLECT_LOG.third_system
  2    is '第三方系统表';
Comment added
SQL> comment on column PSA_DATA_COLLECT_LOG.begin_time
  2    is '执行时间';
Comment added
SQL> comment on column PSA_DATA_COLLECT_LOG.end_time
  2    is '执行结束时间';
Comment added
SQL> comment on column PSA_DATA_COLLECT_LOG.result
  2    is '执行结果，0进行中，1成功，2失败';
Comment added
SQL>   -- Create table
SQL> create table PSA_DEPARTMENT_CONFIG
  2  (
  3    id               VARCHAR2(60),
  4    parentdepartment VARCHAR2(60),
  5    code             VARCHAR2(60),
  6    sort             VARCHAR2(60) default 0,
  7    dept_level       VARCHAR2(60) default 0,
  8    dept_user        VARCHAR2(60),
  9    deptname         VARCHAR2(100)
 10  )
 11  tablespace HIATMPTS
 12    pctfree 10
 13    initrans 1
 14    maxtrans 255
 15    storage
 16    (
 17      initial 64K
 18      next 8K
 19      minextents 1
 20      maxextents unlimited
 21    )
 22  nologging;
Table created
SQL> -- Add comments to the columns
SQL> comment on column PSA_DEPARTMENT_CONFIG.parentdepartment
  2    is '上级部门';
Comment added
SQL> comment on column PSA_DEPARTMENT_CONFIG.code
  2    is '部门编号';
Comment added
SQL> comment on column PSA_DEPARTMENT_CONFIG.sort
  2    is '大队部门显示顺序';
Comment added
SQL> comment on column PSA_DEPARTMENT_CONFIG.dept_level
  2    is '部门级别 默认0    市区大队 1 高速大队 2  区市大队 3
  3  ';
Comment added
SQL> comment on column PSA_DEPARTMENT_CONFIG.deptname
  2    is '部门名称';
Comment added
SQL>   -- Create table
SQL> create table PSA_EXC_VALUE_RELATION
  2  (
  3    id         VARCHAR2(60) not null,
  4    monitor_id VARCHAR2(60) not null,
  5    remark     VARCHAR2(1024) not null
  6  )
  7  tablespace HIATMPTS
  8    pctfree 10
  9    initrans 1
 10    maxtrans 255
 11    storage
 12    (
 13      initial 64K
 14      next 1M
 15      minextents 1
 16      maxextents unlimited
 17    )
 18  nologging;
Table created
SQL> -- Create/Recreate indexes
SQL> create index INDEX_EXC_VALUE on PSA_EXC_VALUE_RELATION (MONITOR_ID)
  2    tablespace HIATMPTS
  3    pctfree 10
  4    initrans 2
  5    maxtrans 255
  6    storage
  7    (
  8      initial 64K
  9      next 1M
 10      minextents 1
 11      maxextents unlimited
 12    );
Index created
SQL> -- Create/Recreate primary, unique and foreign key constraints
SQL> alter table PSA_EXC_VALUE_RELATION
  2    add constraint PK_EXC_VALUE primary key (ID)
  3    using index
  4    tablespace HIATMPTS
  5    pctfree 10
  6    initrans 2
  7    maxtrans 255
  8    storage
  9    (
 10      initial 64K
 11      next 1M
 12      minextents 1
 13      maxextents unlimited
 14    );
Table altered
SQL>   -- Create table
SQL> create table PSA_ILLEGAL_TYPE
  2  (
  3    id        VARCHAR2(30) not null,
  4    typeid    VARCHAR2(30),
  5    typename  VARCHAR2(500),
  6    viocode   VARCHAR2(4000),
  7    monitorid VARCHAR2(30)
  8  )
  9  tablespace HIATMPTS
 10    pctfree 10
 11    initrans 1
 12    maxtrans 255
 13    storage
 14    (
 15      initial 64K
 16      next 8K
 17      minextents 1
 18      maxextents unlimited
 19    );
Table created
SQL> -- Add comments to the table
SQL> comment on table PSA_ILLEGAL_TYPE
  2    is '违法分类表（违法分析用）';
Comment added
SQL> -- Add comments to the columns
SQL> comment on column PSA_ILLEGAL_TYPE.typeid
  2    is '分类代码';
Comment added
SQL> comment on column PSA_ILLEGAL_TYPE.typename
  2    is '分类名称';
Comment added
SQL> comment on column PSA_ILLEGAL_TYPE.viocode
  2    is '违法代码，逗号隔开';
Comment added
SQL> comment on column PSA_ILLEGAL_TYPE.monitorid
  2    is '监管项编号';
Comment added
SQL> -- Create/Recreate primary, unique and foreign key constraints
SQL> alter table PSA_ILLEGAL_TYPE
  2    add constraint PK_VIOTYPE primary key (ID)
  3    using index
  4    tablespace HIATMPTS
  5    pctfree 10
  6    initrans 2
  7    maxtrans 255
  8    storage
  9    (
 10      initial 64K
 11      next 1M
 12      minextents 1
 13      maxextents unlimited
 14    );
Table altered
SQL>   -- Create table
SQL> create table PSA_MONITOR_CONFIG
  2  (
  3    id         VARCHAR2(60) not null,
  4    updated_by VARCHAR2(60) not null,
  5    status     VARCHAR2(2) not null,
  6    start_time DATE not null,
  7    cease_time DATE
  8  )
  9  tablespace HIATMPTS
 10    pctfree 10
 11    initrans 1
 12    maxtrans 255
 13    storage
 14    (
 15      initial 64K
 16      next 8K
 17      minextents 1
 18      maxextents unlimited
 19    )
 20  nologging;
Table created
SQL> -- Add comments to the table
SQL> comment on table PSA_MONITOR_CONFIG
  2    is '监管点配置表';
Comment added
SQL> -- Add comments to the columns
SQL> comment on column PSA_MONITOR_CONFIG.status
  2    is '状态  0 start 1 stop';
Comment added
SQL> comment on column PSA_MONITOR_CONFIG.start_time
  2    is '启动时间';
Comment added
SQL> comment on column PSA_MONITOR_CONFIG.cease_time
  2    is '停止时间';
Comment added
SQL>   -- Create table
SQL> create table PSA_MONITOR_CONFIG_DETAIL
  2  (
  3    id                VARCHAR2(60) not null,
  4    monitor_config_id VARCHAR2(60) not null,
  5    weight            VARCHAR2(60) not null,
  6    monitor_id        VARCHAR2(60) not null,
  7    orderid           VARCHAR2(2)
  8  )
  9  tablespace HIATMPTS
 10    pctfree 10
 11    initrans 1
 12    maxtrans 255
 13    storage
 14    (
 15      initial 64K
 16      next 1M
 17      minextents 1
 18      maxextents unlimited
 19    )
 20  nologging;
Table created
SQL> -- Add comments to the table
SQL> comment on table PSA_MONITOR_CONFIG_DETAIL
  2    is '监管项配置详情表';
Comment added
SQL> -- Add comments to the columns
SQL> comment on column PSA_MONITOR_CONFIG_DETAIL.monitor_config_id
  2    is '配置编号';
Comment added
SQL> comment on column PSA_MONITOR_CONFIG_DETAIL.weight
  2    is '权重';
Comment added
SQL> comment on column PSA_MONITOR_CONFIG_DETAIL.monitor_id
  2    is '监管项/点编号';
Comment added
SQL> comment on column PSA_MONITOR_CONFIG_DETAIL.orderid
  2    is '首页专项分析模块监管项的显示顺序';
Comment added
SQL>   -- Create table
SQL> create table PSA_MONITOR_EXCEPTION
  2  (
  3    id                 VARCHAR2(60) not null,
  4    monitor_config_id  VARCHAR2(60),
  5    dese               VARCHAR2(256),
  6    monitor_id         VARCHAR2(60),
  7    compute_date       DATE,
  8    police             VARCHAR2(60),
  9    exc_value          VARCHAR2(60),
 10    department         VARCHAR2(60),
 11    person_responsible VARCHAR2(60),
 12    person_card        VARCHAR2(20),
 13    exc_time           DATE,
 14    address            VARCHAR2(60),
 15    car_no             VARCHAR2(60),
 16    value1             VARCHAR2(255),
 17    value2             VARCHAR2(60),
 18    value3             VARCHAR2(60),
 19    value4             VARCHAR2(60),
 20    value5             VARCHAR2(60),
 21    value6             VARCHAR2(60),
 22    value7             VARCHAR2(60),
 23    value8             VARCHAR2(60),
 24    value9             VARCHAR2(60),
 25    value10            VARCHAR2(60),
 26    case_id            VARCHAR2(60)
 27  )
 28  tablespace HIATMPTS
 29    pctfree 10
 30    initrans 1
 31    maxtrans 255
 32    storage
 33    (
 34      initial 64K
 35      next 8K
 36      minextents 1
 37      maxextents unlimited
 38    )
 39  nologging;
Table created
SQL> -- Add comments to the table
SQL> comment on table PSA_MONITOR_EXCEPTION
  2    is '预警信息表';
Comment added
SQL> -- Add comments to the columns
SQL> comment on column PSA_MONITOR_EXCEPTION.monitor_config_id
  2    is '监管项配置编号';
Comment added
SQL> comment on column PSA_MONITOR_EXCEPTION.dese
  2    is '异常描述';
Comment added
SQL> comment on column PSA_MONITOR_EXCEPTION.monitor_id
  2    is '监管点编号';
Comment added
SQL> comment on column PSA_MONITOR_EXCEPTION.compute_date
  2    is '预警时间';
Comment added
SQL> comment on column PSA_MONITOR_EXCEPTION.police
  2    is '警员编号';
Comment added
SQL> comment on column PSA_MONITOR_EXCEPTION.exc_value
  2    is '案件时间';
Comment added
SQL> comment on column PSA_MONITOR_EXCEPTION.department
  2    is '办案人员部门ID';
Comment added
SQL> comment on column PSA_MONITOR_EXCEPTION.person_responsible
  2    is '当事人';
Comment added
SQL> comment on column PSA_MONITOR_EXCEPTION.person_card
  2    is '身份证号';
Comment added
SQL> comment on column PSA_MONITOR_EXCEPTION.exc_time
  2    is '异常发生时间';
Comment added
SQL> comment on column PSA_MONITOR_EXCEPTION.address
  2    is '违法地点';
Comment added
SQL> comment on column PSA_MONITOR_EXCEPTION.car_no
  2    is '车牌号码';
Comment added
SQL> comment on column PSA_MONITOR_EXCEPTION.value1
  2    is '值1';
Comment added
SQL> comment on column PSA_MONITOR_EXCEPTION.value2
  2    is '值2';
Comment added
SQL> comment on column PSA_MONITOR_EXCEPTION.value3
  2    is '值3';
Comment added
SQL> comment on column PSA_MONITOR_EXCEPTION.value4
  2    is '值4';
Comment added
SQL> comment on column PSA_MONITOR_EXCEPTION.value5
  2    is '值5';
Comment added
SQL> comment on column PSA_MONITOR_EXCEPTION.value6
  2    is '值6';
Comment added
SQL> comment on column PSA_MONITOR_EXCEPTION.value7
  2    is '值7';
Comment added
SQL> comment on column PSA_MONITOR_EXCEPTION.value8
  2    is '值8';
Comment added
SQL> comment on column PSA_MONITOR_EXCEPTION.value9
  2    is '值9';
Comment added
SQL> comment on column PSA_MONITOR_EXCEPTION.value10
  2    is '值10';
Comment added
SQL> comment on column PSA_MONITOR_EXCEPTION.case_id
  2    is '案件id';
Comment added
SQL>   -- Create table
SQL> create table PSA_MONITOR_EXCEPTION_SOURCE
  2  (
  3    id           VARCHAR2(60) not null,
  4    exception_id VARCHAR2(60) not null,
  5    third_table  VARCHAR2(60) not null,
  6    source_id    VARCHAR2(256) not null,
  7    source       BLOB not null
  8  )
  9  tablespace HIATMPTS
 10    pctfree 10
 11    initrans 1
 12    maxtrans 255
 13  nologging;
Table created
SQL> -- Add comments to the table
SQL> comment on table PSA_MONITOR_EXCEPTION_SOURCE
  2    is '预警与案件关联表';
Comment added
SQL> -- Add comments to the columns
SQL> comment on column PSA_MONITOR_EXCEPTION_SOURCE.exception_id
  2    is '预警编号';
Comment added
SQL> comment on column PSA_MONITOR_EXCEPTION_SOURCE.third_table
  2    is '第三方表编号';
Comment added
SQL> comment on column PSA_MONITOR_EXCEPTION_SOURCE.source_id
  2    is '原表主键对应值';
Comment added
SQL> comment on column PSA_MONITOR_EXCEPTION_SOURCE.source
  2    is '源数据';
Comment added
SQL>   -- Create table
SQL> create table PSA_MONITOR_FIELD_RELATION
  2  (
  3    monitorid VARCHAR2(60) not null,
  4    fieldid   VARCHAR2(60) not null,
  5    colnum    NUMBER,
  6    id        VARCHAR2(60) not null
  7  )
  8  tablespace HIATMPTS
  9    pctfree 10
 10    initrans 1
 11    maxtrans 255
 12    storage
 13    (
 14      initial 64K
 15      next 8K
 16      minextents 1
 17      maxextents unlimited
 18    )
 19  nologging;
Table created
SQL> -- Add comments to the table
SQL> comment on table PSA_MONITOR_FIELD_RELATION
  2    is '监管点预警字段关联表';
Comment added
SQL> -- Add comments to the columns
SQL> comment on column PSA_MONITOR_FIELD_RELATION.monitorid
  2    is '监管点编号';
Comment added
SQL> comment on column PSA_MONITOR_FIELD_RELATION.fieldid
  2    is '展示字段，详见PSA_WARNING_FIELD表';
Comment added
SQL> comment on column PSA_MONITOR_FIELD_RELATION.colnum
  2    is '所在列序号';
Comment added
SQL> -- Create/Recreate indexes
SQL> create index INDEX_FIELDRALATION on PSA_MONITOR_FIELD_RELATION (MONITORID)
  2    tablespace HIATMPTS
  3    pctfree 10
  4    initrans 2
  5    maxtrans 255
  6    storage
  7    (
  8      initial 64K
  9      next 1M
 10      minextents 1
 11      maxextents unlimited
 12    );
Index created
SQL> -- Create/Recreate primary, unique and foreign key constraints
SQL> alter table PSA_MONITOR_FIELD_RELATION
  2    add constraint PK_MFR primary key (ID)
  3    using index
  4    tablespace HIATMPTS
  5    pctfree 10
  6    initrans 2
  7    maxtrans 255
  8    storage
  9    (
 10      initial 64K
 11      next 1M
 12      minextents 1
 13      maxextents unlimited
 14    );
Table altered
SQL>   -- Create table
SQL> create table PSA_MONITOR_INFO
  2  (
  3    id            VARCHAR2(60) not null,
  4    parent_id     VARCHAR2(60) not null,
  5    type          VARCHAR2(60) not null,
  6    monitor_name  VARCHAR2(60) not null,
  7    status        VARCHAR2(60) default 0 not null,
  8    monitor_level VARCHAR2(60),
  9    path_name     VARCHAR2(100),
 10    remark1       BLOB
 11  )
 12  tablespace HIATMPTS
 13    pctfree 10
 14    initrans 1
 15    maxtrans 255
 16    storage
 17    (
 18      initial 64K
 19      next 8K
 20      minextents 1
 21      maxextents unlimited
 22    )
 23  nologging;
Table created
SQL> -- Add comments to the table
SQL> comment on table PSA_MONITOR_INFO
  2    is '监管项/点信息';
Comment added
SQL> -- Add comments to the columns
SQL> comment on column PSA_MONITOR_INFO.parent_id
  2    is '父节点';
Comment added
SQL> comment on column PSA_MONITOR_INFO.type
  2    is '1流程风险，2其他风险';
Comment added
SQL> comment on column PSA_MONITOR_INFO.monitor_name
  2    is '名称';
Comment added
SQL> comment on column PSA_MONITOR_INFO.status
  2    is '0正常，1开发中，2测试中，3数据未接入';
Comment added
SQL> comment on column PSA_MONITOR_INFO.monitor_level
  2    is '1监管项 2 监管点';
Comment added
SQL> comment on column PSA_MONITOR_INFO.path_name
  2    is '监管项对应业务路由';
Comment added
SQL> comment on column PSA_MONITOR_INFO.remark1
  2    is '描述';
Comment added
SQL>   -- Create table
SQL> create table PSA_MONITOR_PARAM_CONFIG
  2  (
  3    id             VARCHAR2(60) default sys_guid() not null,
  4    monitor_id     VARCHAR2(60),
  5    param_code     VARCHAR2(60) not null,
  6    param_type     VARCHAR2(60),
  7    param_value    VARCHAR2(500) not null,
  8    param_sub_code VARCHAR2(60),
  9    description    VARCHAR2(100)
 10  )
 11  tablespace HIATMPTS
 12    pctfree 10
 13    initrans 1
 14    maxtrans 255
 15    storage
 16    (
 17      initial 64K
 18      next 8K
 19      minextents 1
 20      maxextents unlimited
 21    )
 22  nologging;
Table created
SQL> -- Add comments to the table
SQL> comment on table PSA_MONITOR_PARAM_CONFIG
  2    is '监管点参数配置表';
Comment added
SQL> -- Add comments to the columns
SQL> comment on column PSA_MONITOR_PARAM_CONFIG.param_sub_code
  2    is '参数子编码';
Comment added
SQL> comment on column PSA_MONITOR_PARAM_CONFIG.description
  2    is '参数描述';
Comment added
SQL> -- Create/Recreate primary, unique and foreign key constraints
SQL> alter table PSA_MONITOR_PARAM_CONFIG
  2    add constraint PK_MONITOR_PARAM primary key (ID)
  3    using index
  4    tablespace HIATMPTS
  5    pctfree 10
  6    initrans 2
  7    maxtrans 255
  8    storage
  9    (
 10      initial 64K
 11      next 1M
 12      minextents 1
 13      maxextents unlimited
 14    );
Table altered
SQL>   -- Create table
SQL> create table PSA_SYSTEM_CONFIG
  2  (
  3    id          VARCHAR2(60) default sys_guid() not null,
  4    sys_name    VARCHAR2(60),
  5    status      VARCHAR2(2) default '0',
  6    create_time DATE,
  7    update_time DATE,
  8    parent_id   VARCHAR2(60),
  9    sys_level   VARCHAR2(2) default '0',
 10    remark      VARCHAR2(1024)
 11  )
 12  tablespace HIATMPTS
 13    pctfree 10
 14    initrans 1
 15    maxtrans 255
 16    storage
 17    (
 18      initial 64K
 19      next 8K
 20      minextents 1
 21      maxextents unlimited
 22    )
 23  nologging;
Table created
SQL> -- Add comments to the table
SQL> comment on table PSA_SYSTEM_CONFIG
  2    is '第三方系统表';
Comment added
SQL> -- Add comments to the columns
SQL> comment on column PSA_SYSTEM_CONFIG.id
  2    is 'id';
Comment added
SQL> comment on column PSA_SYSTEM_CONFIG.sys_name
  2    is '名称';
Comment added
SQL> comment on column PSA_SYSTEM_CONFIG.status
  2    is '状态';
Comment added
SQL> comment on column PSA_SYSTEM_CONFIG.create_time
  2    is '创建时间';
Comment added
SQL> comment on column PSA_SYSTEM_CONFIG.update_time
  2    is '修改时间';
Comment added
SQL> comment on column PSA_SYSTEM_CONFIG.parent_id
  2    is '上级';
Comment added
SQL> comment on column PSA_SYSTEM_CONFIG.sys_level
  2    is '类别，0 系统  1 表';
Comment added
SQL>   -- Create table
SQL> create table PSA_WARNING_FIELD
  2  (
  3    fieldid      VARCHAR2(60) not null,
  4    fieldname    VARCHAR2(60) not null,
  5    iscollide    VARCHAR2(2),
  6    displaywidth INTEGER,
  7    sqlid        VARCHAR2(30),
  8    id           VARCHAR2(60) not null
  9  )
 10  tablespace HIATMPTS
 11    pctfree 10
 12    initrans 1
 13    maxtrans 255
 14    storage
 15    (
 16      initial 64K
 17      next 8K
 18      minextents 1
 19      maxextents unlimited
 20    )
 21  nologging;
Table created
SQL> -- Add comments to the table
SQL> comment on table PSA_WARNING_FIELD
  2    is '预警信息展示字段表';
Comment added
SQL> -- Add comments to the columns
SQL> comment on column PSA_WARNING_FIELD.fieldid
  2    is '字段英文';
Comment added
SQL> comment on column PSA_WARNING_FIELD.fieldname
  2    is '字段中午说明';
Comment added
SQL> comment on column PSA_WARNING_FIELD.iscollide
  2    is '是否碰撞字段，N否Y是';
Comment added
SQL> comment on column PSA_WARNING_FIELD.displaywidth
  2    is '前台设置宽度';
Comment added
SQL> comment on column PSA_WARNING_FIELD.sqlid
  2    is 'PSA_COLLIDE_SQL表id';
Comment added
SQL> -- Create/Recreate primary, unique and foreign key constraints
SQL> alter table PSA_WARNING_FIELD
  2    add constraint PK_WF primary key (FIELDID)
  3    using index
  4    tablespace HIATMPTS
  5    pctfree 10
  6    initrans 2
  7    maxtrans 255
  8    storage
  9    (
 10      initial 64K
 11      next 1M
 12      minextents 1
 13      maxextents unlimited
 14    );
Table altered
SQL>   -- Create table
SQL> create table PSA_MONITOR_EXECUTE_CONFIG
  2  (
  3    id          VARCHAR2(60) default sys_guid() not null,
  4    class_name  VARCHAR2(255) not null,
  5    monitor_id  VARCHAR2(60) not null,
  6    del_flag    VARCHAR2(2) not null,
  7    create_time DATE not null,
  8    update_time DATE not null,
  9    remark      VARCHAR2(255),
 10    exe_type    VARCHAR2(2)
 11  )
 12  tablespace HIATMPTS
 13    pctfree 10
 14    initrans 1
 15    maxtrans 255
 16    storage
 17    (
 18      initial 64K
 19      next 8K
 20      minextents 1
 21      maxextents unlimited
 22    )
 23  nologging;
Table created
SQL> -- Add comments to the table
SQL> comment on table PSA_MONITOR_EXECUTE_CONFIG
  2    is '适配器执行配置表';
Comment added
SQL> -- Add comments to the columns
SQL> comment on column PSA_MONITOR_EXECUTE_CONFIG.id
  2    is '主键';
Comment added
SQL> comment on column PSA_MONITOR_EXECUTE_CONFIG.class_name
  2    is '执行类';
Comment added
SQL> comment on column PSA_MONITOR_EXECUTE_CONFIG.monitor_id
  2    is '监管点编号';
Comment added
SQL> comment on column PSA_MONITOR_EXECUTE_CONFIG.del_flag
  2    is '是否删除 0未删除,1已删除';
Comment added
SQL> comment on column PSA_MONITOR_EXECUTE_CONFIG.create_time
  2    is '添加时间';
Comment added
SQL> comment on column PSA_MONITOR_EXECUTE_CONFIG.update_time
  2    is '修改时间';
Comment added
SQL> comment on column PSA_MONITOR_EXECUTE_CONFIG.remark
  2    is '备注';
Comment added
SQL> comment on column PSA_MONITOR_EXECUTE_CONFIG.exe_type
  2    is '执行类别，0 数据碰撞 1是数据抽取';
Comment added
SQL>   -- Create table
SQL> create table PSA_MONITOR_EXECUTE_LOG
  2  (
  3    id               VARCHAR2(60) not null,
  4    monitor_id       VARCHAR2(60) not null,
  5    begin_time       DATE not null,
  6    end_time         DATE not null,
  7    result           VARCHAR2(60),
  8    create_time      DATE,
  9    execute_end_time DATE
 10  )
 11  tablespace HIATMPTS
 12    pctfree 10
 13    initrans 1
 14    maxtrans 255
 15    storage
 16    (
 17      initial 64K
 18      next 8K
 19      minextents 1
 20      maxextents unlimited
 21    )
 22  nologging;
Table created
SQL> -- Add comments to the table
SQL> comment on table PSA_MONITOR_EXECUTE_LOG
  2    is '监管执行日志表';
Comment added
SQL> -- Add comments to the columns
SQL> comment on column PSA_MONITOR_EXECUTE_LOG.monitor_id
  2    is '监管点编号';
Comment added
SQL> comment on column PSA_MONITOR_EXECUTE_LOG.begin_time
  2    is '数据碰撞范围开始时间';
Comment added
SQL> comment on column PSA_MONITOR_EXECUTE_LOG.end_time
  2    is '数据碰撞范围结束时间';
Comment added
SQL> comment on column PSA_MONITOR_EXECUTE_LOG.result
  2    is '执行结果，0进行中，1成功，2失败';
Comment added
SQL> comment on column PSA_MONITOR_EXECUTE_LOG.create_time
  2    is '执行开始时间';
Comment added
SQL> comment on column PSA_MONITOR_EXECUTE_LOG.execute_end_time
  2    is '执行结束时间';
Comment added
SQL> -- Create/Recreate primary, unique and foreign key constraints
SQL> alter table PSA_MONITOR_EXECUTE_LOG
  2    add constraint PSA_MONITOR_EXECUTE_LOG_PK primary key (ID)
  3    using index
  4    tablespace HIATMPTS
  5    pctfree 10
  6    initrans 2
  7    maxtrans 255
  8    storage
  9    (
 10      initial 64K
 11      next 1M
 12      minextents 1
 13      maxextents unlimited
 14    );
Table altered
SQL>   -- Create table
SQL> create table PSA_MONITOR_EXE_PLAN_CONFIG
  2  (
  3    id         VARCHAR2(60) not null,
  4    monitor_id VARCHAR2(60) not null,
  5    frequency  VARCHAR2(60) not null,
  6    fre_type   VARCHAR2(60),
  7    limitcount VARCHAR2(100)
  8  )
  9  tablespace HIATMPTS
 10    pctfree 10
 11    initrans 1
 12    maxtrans 255
 13    storage
 14    (
 15      initial 64K
 16      next 1M
 17      minextents 1
 18      maxextents unlimited
 19    )
 20  nologging;
Table created
SQL> -- Add comments to the table
SQL> comment on table PSA_MONITOR_EXE_PLAN_CONFIG
  2    is '监管点执行频次表';
Comment added
SQL> -- Add comments to the columns
SQL> comment on column PSA_MONITOR_EXE_PLAN_CONFIG.monitor_id
  2    is '监管点编号';
Comment added
SQL> comment on column PSA_MONITOR_EXE_PLAN_CONFIG.frequency
  2    is '执行频率';
Comment added
SQL> comment on column PSA_MONITOR_EXE_PLAN_CONFIG.fre_type
  2    is '执行类型 0 是碰撞，1是抽取';
Comment added
SQL> comment on column PSA_MONITOR_EXE_PLAN_CONFIG.limitcount
  2    is '抽取时间范围参数';
Comment added
SQL> -- Create table
SQL> create table PSA_MONITOR_THIRD_SYS_CONFIG
  2  (
  3    id           VARCHAR2(60) not null,
  4    monitor_id   VARCHAR2(60),
  5    third_system VARCHAR2(60)
  6  )
  7  tablespace HIATMPTS
  8    pctfree 10
  9    initrans 1
 10    maxtrans 255
 11    storage
 12    (
 13      initial 64K
 14      next 1M
 15      minextents 1
 16      maxextents unlimited
 17    )
 18  nologging;
Table created
SQL> -- Add comments to the table
SQL> comment on table PSA_MONITOR_THIRD_SYS_CONFIG
  2    is '监管点三方系统关联表';
Comment added
SQL> -- Create table
SQL> create table IN_VEHICLE_IMAGE
  2  (
  3    id            VARCHAR2(32) not null,
  4    name          VARCHAR2(50),
  5    img_path      VARCHAR2(100),
  6    content       BLOB,
  7    save_flag     NUMBER(2),
  8    img_size      NUMBER(8),
  9    suffix        VARCHAR2(8),
 10    create_time   DATE,
 11    openid        VARCHAR2(100),
 12    in_vehicle_id VARCHAR2(32),
 13    img_type      VARCHAR2(20),
 14    order_no      NUMBER(2),
 15    case_id       VARCHAR2(32),
 16    create_user   VARCHAR2(32)
 17  )
 18  tablespace HIATMPTS
 19    pctfree 10
 20    initrans 1
 21    maxtrans 255
 22    storage
 23    (
 24      initial 64K
 25      next 1M
 26      minextents 1
 27      maxextents unlimited
 28    );
Table created
SQL> -- Add comments to the table
SQL> comment on table IN_VEHICLE_IMAGE
  2    is '涉案车辆图片表';
Comment added
SQL> -- Create/Recreate primary, unique and foreign key constraints
SQL> alter table IN_VEHICLE_IMAGE
  2    add constraint IN_VEHICLE_IMAGE_PK primary key (ID)
  3    using index
  4    tablespace HIATMPTS
  5    pctfree 10
  6    initrans 2
  7    maxtrans 255
  8    storage
  9    (
 10      initial 64K
 11      next 1M
 12      minextents 1
 13      maxextents unlimited
 14    );
Table altered
SQL>    ------------------------------------------------------------function---------------------------------------------
SQL>   create or replace function is_vehicle_number(p_vehicle_number in varchar2) return number
  2  
  3    is
  4  
  5      v_result number;
  6  
  7      v_express varchar2(600);
  8  
  9    begin
 10  
 11      -- 默认0，表示不正确
 12  
 13      v_result := 0;
 14  
 15  
 16  
 17      if length(p_vehicle_number) = 7 then
 18  
 19        v_express := '^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-Z0-9]{4}[A-Z0-9挂学警港澳]{1}$';
 20  
 21  
 22  
 23        if regexp_like(p_vehicle_number, v_express) then
 24  
 25          v_result := 1;
 26  
 27        end if;
 28  
 29      end if;
 30  
 31  
 32  
 33      if length(p_vehicle_number) = 8 then
 34  
 35        v_express := '^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-Z0-9]{5}[A-Z0-9挂学警港澳]{1}$';
 36  
 37  
 38  
 39        if regexp_like(p_vehicle_number, v_express) then
 40  
 41          v_result := 1;
 42  
 43        end if;
 44  
 45      end if;
 46  
 47  
 48  
 49      return v_result;
 50  
 51    end;
 52  /
Function created
SQL> -----------A2--------------------
SQL> -- Create/Recreate indexes
SQL> create index INDEX_ILLEGAL_VIOCODE on PSA_ILLEGAL_TYPE (viocode);
Index created
SQL> create index INDEX_ILLEGAL_illegalid on PSA_ILLEGAL_TYPE (typeid);
Index created
SQL> create index index_illegal_monitorid on PSA_ILLEGAL_TYPE (monitorid);
Index created
SQL> alter table PSA_DEPARTMENT_CONFIG
  2    add constraint pk_dept_config primary key (CODE);
Table altered
SQL> -- Add/modify columns
SQL> alter table IN_VEHICLE_IMAGE add gxsj date;
Table altered
SQL> -- Add comments to the columns
SQL> comment on column IN_VEHICLE_IMAGE.gxsj
  2    is '更新时间';
Comment added
SQL> create or replace function Isnumber(P_column in varchar2) return number
  2  is
  3   l_t number;
  4  begin
  5    l_t := to_number(P_column) ;
  6       return 1;
  7    exception when others then
  8       return 0;
  9  end;
 10  /
Function created
SQL> ------------A3------------
SQL> -- Add/modify columns
SQL> alter table PSA_MONITOR_PARAM_CONFIG modify description VARCHAR2(300);
Table altered
SQL> commit;
Commit complete
SQL> -- Add comments to the columns
SQL> comment on column PSA_CASE.id
  2    is '案件编号';
Comment added
SQL> comment on column PSA_CASE.status
  2    is '案件状态，文字描述，对应各业务流程';
Comment added
SQL> comment on column PSA_CASE.case_time
  2    is '案件发生时间';
Comment added
SQL> comment on column PSA_CASE.case_type
  2    is '案件类型';
Comment added
SQL> comment on column PSA_CASE.big_dept
  2    is '大队部门id';
Comment added
SQL> comment on column PSA_CASE.mid_dept
  2    is '中队部门id';
Comment added
SQL> comment on column PSA_CASE.policeid
  2    is '警员id';
Comment added
SQL> comment on column PSA_CASE.policename
  2    is '警员名称';
Comment added
SQL>  commit;
Commit complete
SQL>   -- Add comments to the table
SQL> comment on table PSA_EXC_VALUE_RELATION
  2    is '异常值对应表';
Comment added
SQL> -- Add comments to the columns
SQL> comment on column PSA_EXC_VALUE_RELATION.monitor_id
  2    is '监管点id';
Comment added
SQL> comment on column PSA_EXC_VALUE_RELATION.remark
  2    is '对应异常值说明，异常表中value1等字段对应字段说明';
Comment added
SQL>    commit;
Commit complete
SQL>    create or replace function is_vehicle_number(p_vehicle_number in varchar2) return number
  2  
  3    is
  4  
  5      v_result number;
  6  
  7      v_express varchar2(600);
  8  
  9    begin
 10  
 11      -- 默认0，表示不正确
 12  
 13      v_result := 0;
 14  
 15  -- 普通车处理（包括警车和军车）
 16  
 17      if length(p_vehicle_number) = 7 then
 18  
 19        v_express := '^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9挂学警港澳使领]{1}$';
 20  
 21        if regexp_like(p_vehicle_number, v_express) then
 22  
 23          v_result := 1;
 24  
 25        end if;
 26  
 27      end if;
 28  
 29  
 30      if length(p_vehicle_number) = 8 then
 31  
 32   -- 新能源车处理（分为小型能源车和大型能源车）
 33  
 34      --小型能源车
 35  
 36        v_express := '^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[DF]{1}[[A-HJ-NP-Z0-9]{1}[0-9]{4}$';
 37  
 38        if regexp_like(p_vehicle_number, v_express) then
 39  
 40          v_result := 1;
 41  
 42        end if;
 43  
 44        --大型能源车
 45  
 46        v_express := '^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[0-9]{5}[DF]{1}$';
 47  
 48        if regexp_like(p_vehicle_number, v_express) then
 49  
 50          v_result := 1;
 51  
 52        end if;
 53  
 54   -- 武警车处理
 55  
 56        v_express := '^[W]{1}[J]{1}[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼]{1}[0-9]{4}[0-9XBTSHJD]{1}$';
 57  
 58        if regexp_like(p_vehicle_number, v_express) then
 59  
 60          v_result := 1;
 61  
 62        end if;
 63  
 64      end if;
 65  
 66      return v_result;
 67  
 68    end;
 69  /
Function created
SQL> -------A4-----------
SQL> --修改case_time为date类型
SQL> --truncate table psa_case;
SQL> --commit;
SQL> alter table psa_case modify case_time date;
Table altered
SQL> alter table PSA_MONITOR_EXCEPTION modify ADDRESS varchar2(200);
Table altered
SQL> alter table PSA_MONITOR_EXCEPTION modify value1 varchar2(200);
Table altered
SQL> alter table PSA_MONITOR_EXCEPTION modify value2 varchar2(200);
Table altered
SQL> alter table PSA_MONITOR_EXCEPTION modify value3 varchar2(200);
Table altered
SQL> alter table PSA_MONITOR_EXCEPTION modify value4 varchar2(200);
Table altered
SQL> alter table PSA_MONITOR_EXCEPTION modify value5 varchar2(200);
Table altered
SQL> alter table PSA_MONITOR_EXCEPTION modify value6 varchar2(200);
Table altered
SQL> alter table PSA_MONITOR_EXCEPTION modify value7 varchar2(200);
Table altered
SQL> alter table PSA_MONITOR_EXCEPTION modify value8 varchar2(200);
Table altered
SQL> alter table PSA_MONITOR_EXCEPTION modify value9 varchar2(200);
Table altered
SQL> alter table PSA_MONITOR_EXCEPTION modify value10 varchar2(200);
Table altered
SQL> -- Create/Recreate indexes
SQL> create index PK_CASETABLE on PSA_CASE_SOU_RELATION (CASE_ID, THIRD_TABLE)
  2    pctfree 10
  3    initrans 2
  4    maxtrans 255
  5    storage
  6    (
  7      initial 64K
  8      next 1M
  9      minextents 1
 10      maxextents unlimited
 11    );
Index created
SQL> create index PK_CASETABLESOURCE on PSA_CASE_SOU_RELATION (CASE_ID, THIRD_TABLE, SOURCE_ID)
  2    pctfree 10
  3    initrans 2
  4    maxtrans 255
  5    storage
  6    (
  7      initial 64K
  8      next 1M
  9      minextents 1
 10      maxextents unlimited
 11    );
Index created
SQL> -- Create table
SQL> create table POLICE_XFK
  2  (
  3    POLICEID     VARCHAR2(32) not null,
  4    POLICENAME   NVARCHAR2(32) not null,
  5    DEPTID       VARCHAR2(12) not null
  6  );
Table created
SQL> -- Add comments to the table
SQL> comment on table POLICE_XFK
  2    is '下发库警员表';
Comment added
SQL> -- Add comments to the columns
SQL> comment on column POLICE_XFK.POLICEID
  2    is '用户代号';
Comment added
SQL> comment on column POLICE_XFK.POLICENAME
  2    is '姓名';
Comment added
SQL> comment on column POLICE_XFK.DEPTID
  2    is '管理部门';
Comment added
SQL> -- Create/Recreate primary, unique and foreign key constraints
SQL> alter table POLICE_XFK
  2    add constraint PK_POLICE_XFK_POLICEID primary key (POLICEID)
  3    using index
  4    pctfree 10
  5    initrans 2
  6    maxtrans 255
  7    storage
  8    (
  9      initial 160K
 10      next 1M
 11      minextents 1
 12      maxextents unlimited
 13    );
Table altered
SQL> --下发库和管控库数据
SQL> create or replace view police_data as
  2  select distinct policeid,policename,deptid  from (
  3           select p.policeid, p.policename, p.depid as deptid
  4             from POLICE p
  5             join department d on p.DEPID = d.CDEPARTMENTID
  6             join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
  7                                               pdc.code = d.parentdepartment)
  8            where p.auditstate = '1'
  9              and p.is_effective = '1'
 10              and p.isclosed = '1'
 11              and p.policeid != '999999'
 12           union all
 13           select px.policeid, px.policename, px.deptid as deptid
 14             from POLICE_xfk px
 15             join department d on px.deptid = d.CDEPARTMENTID
 16             join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
 17                                               pdc.code = d.parentdepartment)
 18           );
create or replace view police_data as
select distinct policeid,policename,deptid  from (
         select p.policeid, p.policename, p.depid as deptid
           from POLICE p
           join department d on p.DEPID = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
          where p.auditstate = '1'
            and p.is_effective = '1'
            and p.isclosed = '1'
            and p.policeid != '999999'
         union all
         select px.policeid, px.policename, px.deptid as deptid
           from POLICE_xfk px
           join department d on px.deptid = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
         )
ORA-00942: 表或视图不存在
SQL> /
create or replace view police_data as
select distinct policeid,policename,deptid  from (
         select p.policeid, p.policename, p.depid as deptid
           from POLICE p
           join department d on p.DEPID = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
          where p.auditstate = '1'
            and p.is_effective = '1'
            and p.isclosed = '1'
            and p.policeid != '999999'
         union all
         select px.policeid, px.policename, px.deptid as deptid
           from POLICE_xfk px
           join department d on px.deptid = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
         )
ORA-00942: 表或视图不存在
SQL> --警员id及对应警员数量
SQL> create or replace view police_id_data as
  2  select count(*) cnt, policeid
  3     from (
  4            select distinct policeid,policename,deptid  from (
  5           select p.policeid, p.policename, p.depid as deptid
  6             from POLICE p
  7             join department d on p.DEPID = d.CDEPARTMENTID
  8             join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
  9                                               pdc.code = d.parentdepartment)
 10            where p.auditstate = '1'
 11              and p.is_effective = '1'
 12              and p.isclosed = '1'
 13              and p.policeid != '999999'
 14           union all
 15           select px.policeid, px.policename, px.deptid as deptid
 16             from POLICE_xfk px
 17             join department d on px.deptid = d.CDEPARTMENTID
 18             join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
 19                                               pdc.code = d.parentdepartment))
 20                                               ) t
 21    group by t.policeid;
create or replace view police_id_data as
select count(*) cnt, policeid
   from (
          select distinct policeid,policename,deptid  from (
         select p.policeid, p.policename, p.depid as deptid
           from POLICE p
           join department d on p.DEPID = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
          where p.auditstate = '1'
            and p.is_effective = '1'
            and p.isclosed = '1'
            and p.policeid != '999999'
         union all
         select px.policeid, px.policename, px.deptid as deptid
           from POLICE_xfk px
           join department d on px.deptid = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment))
                                             ) t
  group by t.policeid
ORA-00942: 表或视图不存在
SQL> /
create or replace view police_id_data as
select count(*) cnt, policeid
   from (
          select distinct policeid,policename,deptid  from (
         select p.policeid, p.policename, p.depid as deptid
           from POLICE p
           join department d on p.DEPID = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
          where p.auditstate = '1'
            and p.is_effective = '1'
            and p.isclosed = '1'
            and p.policeid != '999999'
         union all
         select px.policeid, px.policename, px.deptid as deptid
           from POLICE_xfk px
           join department d on px.deptid = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment))
                                             ) t
  group by t.policeid
ORA-00942: 表或视图不存在
SQL> --警员姓名及对应警员数量
SQL> create or replace view police_name_data as
  2  select count(*) cnt, policename
  3     from (
  4            select distinct policeid,policename,deptid  from (
  5           select p.policeid, p.policename, p.depid as deptid
  6             from POLICE p
  7             join department d on p.DEPID = d.CDEPARTMENTID
  8             join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
  9                                               pdc.code = d.parentdepartment)
 10            where p.auditstate = '1'
 11              and p.is_effective = '1'
 12              and p.isclosed = '1'
 13              and p.policeid != '999999'
 14           union all
 15           select px.policeid, px.policename, px.deptid as deptid
 16             from POLICE_xfk px
 17             join department d on px.deptid = d.CDEPARTMENTID
 18             join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
 19                                               pdc.code = d.parentdepartment)
 20           )
 21           ) t
 22    group by t.policename;
create or replace view police_name_data as
select count(*) cnt, policename
   from (
          select distinct policeid,policename,deptid  from (
         select p.policeid, p.policename, p.depid as deptid
           from POLICE p
           join department d on p.DEPID = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
          where p.auditstate = '1'
            and p.is_effective = '1'
            and p.isclosed = '1'
            and p.policeid != '999999'
         union all
         select px.policeid, px.policename, px.deptid as deptid
           from POLICE_xfk px
           join department d on px.deptid = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
         )
         ) t
  group by t.policename
ORA-00942: 表或视图不存在
SQL> /
create or replace view police_name_data as
select count(*) cnt, policename
   from (
          select distinct policeid,policename,deptid  from (
         select p.policeid, p.policename, p.depid as deptid
           from POLICE p
           join department d on p.DEPID = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
          where p.auditstate = '1'
            and p.is_effective = '1'
            and p.isclosed = '1'
            and p.policeid != '999999'
         union all
         select px.policeid, px.policename, px.deptid as deptid
           from POLICE_xfk px
           join department d on px.deptid = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
         )
         ) t
  group by t.policename
ORA-00942: 表或视图不存在
SQL>   create or replace function is_vehicle_number(p_vehicle_number in varchar2) return number
  2  
  3    is
  4  
  5      v_result number;
  6  
  7      v_express varchar2(600);
  8  
  9    begin
 10  
 11      -- 默认0，表示不正确
 12  
 13      v_result := 0;
 14  
 15  -- 普通车处理（包括警车和军车）
 16  
 17      if length(p_vehicle_number) = 7 then
 18  
 19        v_express := '^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9挂学警港澳使领]{1}$';
 20  
 21        if regexp_like(p_vehicle_number, v_express) then
 22  
 23          v_result := 1;
 24  
 25        end if;
 26  
 27        -- 总部武警车
 28  
 29         v_express := '^[W]{1}[J]{1}[0-9]{2}[0-9XBTSHJD]{3}$';
 30  
 31        if regexp_like(p_vehicle_number, v_express) then
 32  
 33          v_result := 1;
 34  
 35        end if;
 36       end if;
 37  
 38      if length(p_vehicle_number) = 8 then
 39  
 40   -- 新能源车处理（分为小型能源车和大型能源车）
 41  
 42      --小型能源车
 43  
 44        v_express := '^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[DF]{1}[[A-HJ-NP-Z0-9]{1}[0-9]{4}$';
 45  
 46        if regexp_like(p_vehicle_number, v_express) then
 47  
 48          v_result := 1;
 49  
 50        end if;
 51  
 52        --大型能源车
 53  
 54        v_express := '^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[0-9]{5}[DF]{1}$';
 55  
 56        if regexp_like(p_vehicle_number, v_express) then
 57  
 58          v_result := 1;
 59  
 60        end if;
 61  
 62    -- 地方武警车处理
 63  
 64        v_express := '^[W]{1}[J]{1}[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼]{1}[0-9]{2}[0-9XBTSHJD]{3}$';
 65  
 66        if regexp_like(p_vehicle_number, v_express) then
 67  
 68          v_result := 1;
 69  
 70        end if;
 71  
 72      end if;
 73  
 74      return v_result;
 75  
 76    end;
 77  /
Function created
SQL> ------------A5-------------
SQL> -- Create/Recreate indexes
SQL> create index index_exc_id on PSA_MONITOR_EXCEPTION (id);
Index created
SQL> create index index_exc_cptime on PSA_MONITOR_EXCEPTION (compute_date);
Index created
SQL> create index index_exc_monitor on PSA_MONITOR_EXCEPTION (monitor_id);
Index created
SQL> create index index_exc_dept on PSA_MONITOR_EXCEPTION (department);
Index created
SQL> -- Create/Recreate indexes
SQL> create index index_monitor on PSA_MONITOR_INFO (parent_id, type, status, monitor_level);
Index created
SQL> -- Create/Recreate primary, unique and foreign key constraints
SQL> alter table PSA_MONITOR_INFO
  2    add constraint pk_monitor primary key (ID);
Table altered
SQL> create index INDEX_DEPTLEVEL on PSA_DEPARTMENT_CONFIG (DEPT_LEVEL,PARENTDEPARTMENT,SORT)
SQL> alter table PSA_CASE
  2    add constraint pk_case primary key (ID);
Table altered
SQL> alter table psa_monitor_exception modify value10 long;
Table altered
SQL> alter table psa_monitor_exception modify value10 clob;
Table altered
SQL> alter table psa_monitor_exception add value11 VARCHAR2(200);
Table altered
SQL> alter table psa_case add updateFlag char(1);
Table altered
SQL> alter table psa_case modify updateFlag default '0';
Table altered
SQL> comment on column psa_case.updateFlag is '0 不需要更新 1：需要更新';
Comment added
SQL> create or replace function completehphm(hphm in varchar,hpzl in varchar) return varchar2 is
  2    Result varchar2(20);
  3  
  4  begin
  5    if hpzl = '15' then
  6      if instr(hphm,'挂')<=0 then
  7        Result := hphm || '挂';
  8        return(Result);
  9      end if;
 10    end if;
 11  
 12    if hpzl = '16' then
 13      if instr(hphm,'学')<=0 then
 14        Result := hphm || '学';
 15        return(Result);
 16      end if;
 17    end if;
 18  
 19    if hpzl = '23' then
 20      if instr(hphm,'警')<=0 then
 21        Result := hphm || '警';
 22        return(Result);
 23      end if;
 24    end if;
 25  
 26    if hpzl = '26' then
 27      if instr(hphm,'港')<=0 then
 28        Result := hphm || '港';
 29        return(Result);
 30      end if;
 31    end if;
 32  
 33    if hpzl = '27' then
 34      if instr(hphm,'澳')<=0 then
 35        Result := hphm || '澳';
 36        return(Result);
 37      end if;
 38    end if;
 39  
 40    if hpzl = '03' then
 41      if instr(hphm,'使')<=0 then
 42        Result := hphm || '使';
 43        return(Result);
 44      end if;
 45    end if;
 46  
 47    if hpzl = '04' then
 48      if instr(hphm,'领')<=0 then
 49        Result := hphm || '领';
 50        return(Result);
 51      end if;
 52    end if;
 53    Result:= hphm;
 54  return(Result);
 55  end completehphm;
 56  /
Function created
SQL> ------------------A6--------------------
SQL> alter table PSA_MONITOR_EXCEPTION modify PERSON_RESPONSIBLE VARCHAR2(200);
Table altered
SQL> create or replace view police_data as
  2  select distinct policeid,policename,deptid  from (
  3           select p.policeid, replace(replace(p.policename,' ',''),'　','') as policename, p.depid as deptid
  4             from POLICE p
  5             join department d on p.DEPID = d.CDEPARTMENTID
  6             join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
  7                                               pdc.code = d.parentdepartment)
  8            where p.auditstate = '1'
  9              and p.is_effective = '1'
 10              and p.isclosed = '1'
 11              and p.policeid != '999999'
 12           union all
 13           select px.policeid, replace(replace(px.policename,' ',''),'　','') as policename, px.deptid as deptid
 14             from POLICE_xfk px
 15             join department d on px.deptid = d.CDEPARTMENTID
 16             join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
 17                                               pdc.code = d.parentdepartment)
 18           );
create or replace view police_data as
select distinct policeid,policename,deptid  from (
         select p.policeid, replace(replace(p.policename,' ',''),'　','') as policename, p.depid as deptid
           from POLICE p
           join department d on p.DEPID = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
          where p.auditstate = '1'
            and p.is_effective = '1'
            and p.isclosed = '1'
            and p.policeid != '999999'
         union all
         select px.policeid, replace(replace(px.policename,' ',''),'　','') as policename, px.deptid as deptid
           from POLICE_xfk px
           join department d on px.deptid = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
         )
ORA-00942: 表或视图不存在
SQL> /
create or replace view police_data as
select distinct policeid,policename,deptid  from (
         select p.policeid, replace(replace(p.policename,' ',''),'　','') as policename, p.depid as deptid
           from POLICE p
           join department d on p.DEPID = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
          where p.auditstate = '1'
            and p.is_effective = '1'
            and p.isclosed = '1'
            and p.policeid != '999999'
         union all
         select px.policeid, replace(replace(px.policename,' ',''),'　','') as policename, px.deptid as deptid
           from POLICE_xfk px
           join department d on px.deptid = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
         )
ORA-00942: 表或视图不存在
SQL> create or replace function completehphm(hphm in varchar,hpzl in varchar) return varchar2 is
  2    Result varchar2(60);
  3  
  4  begin
  5    if hpzl = '15' then
  6      if instr(hphm,'挂')<=0 then
  7        Result := hphm || '挂';
  8        return(Result);
  9      end if;
 10    end if;
 11  
 12    if hpzl = '16' then
 13      if instr(hphm,'学')<=0 then
 14        Result := hphm || '学';
 15        return(Result);
 16      end if;
 17    end if;
 18  
 19    if hpzl = '23' then
 20      if instr(hphm,'警')<=0 then
 21        Result := hphm || '警';
 22        return(Result);
 23      end if;
 24    end if;
 25  
 26    if hpzl = '26' then
 27      if instr(hphm,'港')<=0 then
 28        Result := hphm || '港';
 29        return(Result);
 30      end if;
 31    end if;
 32  
 33    if hpzl = '27' then
 34      if instr(hphm,'澳')<=0 then
 35        Result := hphm || '澳';
 36        return(Result);
 37      end if;
 38    end if;
 39  
 40    if hpzl = '03' then
 41      if instr(hphm,'使')<=0 then
 42        Result := hphm || '使';
 43        return(Result);
 44      end if;
 45    end if;
 46  
 47    if hpzl = '04' then
 48      if instr(hphm,'领')<=0 then
 49        Result := hphm || '领';
 50        return(Result);
 51      end if;
 52    end if;
 53    Result:= hphm;
 54  return(Result);
 55  end completehphm;
 56  /
Function created
SQL> create or replace function is_vehicle_number(pp_vehicle_number in varchar2) return number
  2  
  3    is
  4  
  5      v_result number;
  6  
  7      v_express varchar2(600);
  8  
  9      v_hphm varchar2(20);
 10  
 11      p_vehicle_number varchar2(60);
 12  
 13    begin
 14  
 15      -- 默认0，表示不正确
 16  
 17      v_result := 0;
 18  
 19      p_vehicle_number := trim(pp_vehicle_number);
 20  
 21  --挂车
 22      if instr(p_vehicle_number,'挂') > 0 then
 23  
 24        if length(p_vehicle_number) >= 6 and length(p_vehicle_number) <= 7 then
 25  
 26          v_hphm := replace(p_vehicle_number,'挂','');
 27  
 28          v_express := '^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{3,4}$';
 29  
 30          if regexp_like(v_hphm, v_express) then
 31  
 32            v_result := 1;
 33  
 34          end if;
 35  
 36        end if;
 37  
 38        if length(p_vehicle_number) = 8 then
 39  
 40            v_hphm := replace(p_vehicle_number,'挂','');
 41  
 42            v_express := '^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{5}$';
 43  
 44            if regexp_like(v_hphm, v_express) then
 45  
 46              v_result := 1;
 47  
 48            end if;
 49  
 50        end if;
 51  
 52        if length(p_vehicle_number) > 8 then
 53  
 54            v_result := 1;
 55  
 56        end if;
 57  
 58      end if;
 59  
 60  
 61  -- 普通车处理（包括警车和军车）
 62  
 63      if length(p_vehicle_number) >= 6 and length(p_vehicle_number) <= 7 then
 64  
 65        v_express := '^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9挂学警港澳使领]{0,1}$';
 66  
 67        if regexp_like(p_vehicle_number, v_express) then
 68  
 69          v_result := 1;
 70  
 71        end if;
 72  -- 总部武警车
 73  
 74         v_express := '^[W]{1}[J]{1}[0-9]{2}[0-9XBTSHJD]{3}$';
 75  
 76        if regexp_like(p_vehicle_number, v_express) then
 77  
 78          v_result := 1;
 79  
 80        end if;
 81  
 82      end if;
 83  
 84  
 85      if length(p_vehicle_number) = 8 then
 86  
 87   -- 新能源车处理（分为小型能源车和大型能源车）
 88  
 89      --小型能源车
 90  
 91        v_express := '^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[DF]{1}[[A-HJ-NP-Z0-9]{1}[0-9]{4}$';
 92  
 93        if regexp_like(p_vehicle_number, v_express) then
 94  
 95          v_result := 1;
 96  
 97        end if;
 98  
 99        --大型能源车
100  
101        v_express := '^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[0-9]{5}[DF]{1}$';
102  
103        if regexp_like(p_vehicle_number, v_express) then
104  
105          v_result := 1;
106  
107        end if;
108  
109    -- 地方武警车处理
110  
111        v_express := '^[W]{1}[J]{1}[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼]{1}[0-9]{2}[0-9XBTSHJD]{3}$';
112  
113        if regexp_like(p_vehicle_number, v_express) then
114  
115          v_result := 1;
116  
117        end if;
118  
119      end if;
120  
121      return v_result;
122  
123    end;
124  /
Function created
SQL> ----------A7------------
SQL>  create index INDEX_EXC_police on PSA_MONITOR_EXCEPTION (police);
Index created
SQL> alter  table PSA_MONITOR_EXCEPTION modify VALUE1 VARCHAR2(2000);
Table altered
SQL> alter  table PSA_MONITOR_EXCEPTION modify VALUE2 VARCHAR2(2000);
Table altered
SQL> alter  table PSA_MONITOR_EXCEPTION modify VALUE3 VARCHAR2(2000);
Table altered
SQL> alter  table PSA_MONITOR_EXCEPTION modify VALUE4 VARCHAR2(2000);
Table altered
SQL> alter  table PSA_MONITOR_EXCEPTION modify VALUE5 VARCHAR2(2000);
Table altered
SQL> alter  table PSA_MONITOR_EXCEPTION modify VALUE6 VARCHAR2(2000);
Table altered
SQL> alter  table PSA_MONITOR_EXCEPTION modify VALUE7 VARCHAR2(2000);
Table altered
SQL> alter  table PSA_MONITOR_EXCEPTION modify VALUE8 VARCHAR2(2000);
Table altered
SQL> alter  table PSA_MONITOR_EXCEPTION modify VALUE9 VARCHAR2(2000);
Table altered
SQL> alter  table PSA_MONITOR_EXCEPTION modify VALUE11 VARCHAR2(2000);
Table altered
SQL> alter  table PSA_MONITOR_EXCEPTION modify ADDRESS VARCHAR2(2000);
Table altered
SQL> alter  table PSA_MONITOR_EXE_PLAN_CONFIG add FULL_FLAG VARCHAR2(1);
Table altered
SQL> comment on column PSA_MONITOR_EXE_PLAN_CONFIG.FULL_FLAG is '0:增量抽取 1:全量抽取';
Comment added
SQL> create or replace view police_data as
  2  select distinct policeid,policename,deptid  from (
  3           select p.policeid, replace(replace(p.policename,' ',''),'　','') as policename, p.depid as deptid
  4             from POLICE p
  5             join department d on p.DEPID = d.CDEPARTMENTID
  6             join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
  7                                               pdc.code = d.parentdepartment)
  8            where p.auditstate = '1'
  9              and p.is_effective = '1'
 10              and p.isclosed = '1'
 11              and p.policeid != '999999'
 12           union all
 13           select px.policeid, replace(replace(px.policename,' ',''),'　','') as policename, px.deptid as deptid
 14             from POLICE_xfk px
 15             join department d on px.deptid = d.CDEPARTMENTID
 16             join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
 17                                               pdc.code = d.parentdepartment)
 18           );
create or replace view police_data as
select distinct policeid,policename,deptid  from (
         select p.policeid, replace(replace(p.policename,' ',''),'　','') as policename, p.depid as deptid
           from POLICE p
           join department d on p.DEPID = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
          where p.auditstate = '1'
            and p.is_effective = '1'
            and p.isclosed = '1'
            and p.policeid != '999999'
         union all
         select px.policeid, replace(replace(px.policename,' ',''),'　','') as policename, px.deptid as deptid
           from POLICE_xfk px
           join department d on px.deptid = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
         )
ORA-00942: 表或视图不存在
SQL> /
create or replace view police_data as
select distinct policeid,policename,deptid  from (
         select p.policeid, replace(replace(p.policename,' ',''),'　','') as policename, p.depid as deptid
           from POLICE p
           join department d on p.DEPID = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
          where p.auditstate = '1'
            and p.is_effective = '1'
            and p.isclosed = '1'
            and p.policeid != '999999'
         union all
         select px.policeid, replace(replace(px.policename,' ',''),'　','') as policename, px.deptid as deptid
           from POLICE_xfk px
           join department d on px.deptid = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
         )
ORA-00942: 表或视图不存在
SQL> create or replace view police_id_data as
  2  select count(*) cnt, policeid
  3     from (
  4            select distinct policeid,policename,deptid  from (
  5           select p.policeid, replace(replace(p.policename,' ',''),'　','') as policename, p.depid as deptid
  6             from POLICE p
  7             join department d on p.DEPID = d.CDEPARTMENTID
  8             join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
  9                                               pdc.code = d.parentdepartment)
 10            where p.auditstate = '1'
 11              and p.is_effective = '1'
 12              and p.isclosed = '1'
 13              and p.policeid != '999999'
 14           union all
 15           select px.policeid, replace(replace(px.policename,' ',''),'　','') as policename, px.deptid as deptid
 16             from POLICE_xfk px
 17             join department d on px.deptid = d.CDEPARTMENTID
 18             join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
 19                                               pdc.code = d.parentdepartment))
 20                                               ) t
 21  group by t.policeid;
create or replace view police_id_data as
select count(*) cnt, policeid
   from (
          select distinct policeid,policename,deptid  from (
         select p.policeid, replace(replace(p.policename,' ',''),'　','') as policename, p.depid as deptid
           from POLICE p
           join department d on p.DEPID = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
          where p.auditstate = '1'
            and p.is_effective = '1'
            and p.isclosed = '1'
            and p.policeid != '999999'
         union all
         select px.policeid, replace(replace(px.policename,' ',''),'　','') as policename, px.deptid as deptid
           from POLICE_xfk px
           join department d on px.deptid = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment))
                                             ) t
group by t.policeid
ORA-00942: 表或视图不存在
SQL> /
create or replace view police_id_data as
select count(*) cnt, policeid
   from (
          select distinct policeid,policename,deptid  from (
         select p.policeid, replace(replace(p.policename,' ',''),'　','') as policename, p.depid as deptid
           from POLICE p
           join department d on p.DEPID = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
          where p.auditstate = '1'
            and p.is_effective = '1'
            and p.isclosed = '1'
            and p.policeid != '999999'
         union all
         select px.policeid, replace(replace(px.policename,' ',''),'　','') as policename, px.deptid as deptid
           from POLICE_xfk px
           join department d on px.deptid = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment))
                                             ) t
group by t.policeid
ORA-00942: 表或视图不存在
SQL> create or replace view police_name_data as
  2  select count(*) cnt, policename
  3     from (
  4            select distinct policeid,policename,deptid  from (
  5           select p.policeid, replace(replace(p.policename,' ',''),'　','') as policename, p.depid as deptid
  6             from POLICE p
  7             join department d on p.DEPID = d.CDEPARTMENTID
  8             join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
  9                                               pdc.code = d.parentdepartment)
 10            where p.auditstate = '1'
 11              and p.is_effective = '1'
 12              and p.isclosed = '1'
 13              and p.policeid != '999999'
 14           union all
 15           select px.policeid, replace(replace(px.policename,' ',''),'　','') as policename, px.deptid as deptid
 16             from POLICE_xfk px
 17             join department d on px.deptid = d.CDEPARTMENTID
 18             join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
 19                                               pdc.code = d.parentdepartment)
 20           )
 21           ) t
 22  group by t.policename;
create or replace view police_name_data as
select count(*) cnt, policename
   from (
          select distinct policeid,policename,deptid  from (
         select p.policeid, replace(replace(p.policename,' ',''),'　','') as policename, p.depid as deptid
           from POLICE p
           join department d on p.DEPID = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
          where p.auditstate = '1'
            and p.is_effective = '1'
            and p.isclosed = '1'
            and p.policeid != '999999'
         union all
         select px.policeid, replace(replace(px.policename,' ',''),'　','') as policename, px.deptid as deptid
           from POLICE_xfk px
           join department d on px.deptid = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
         )
         ) t
group by t.policename
ORA-00942: 表或视图不存在
SQL> /
create or replace view police_name_data as
select count(*) cnt, policename
   from (
          select distinct policeid,policename,deptid  from (
         select p.policeid, replace(replace(p.policename,' ',''),'　','') as policename, p.depid as deptid
           from POLICE p
           join department d on p.DEPID = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
          where p.auditstate = '1'
            and p.is_effective = '1'
            and p.isclosed = '1'
            and p.policeid != '999999'
         union all
         select px.policeid, replace(replace(px.policename,' ',''),'　','') as policename, px.deptid as deptid
           from POLICE_xfk px
           join department d on px.deptid = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
         )
         ) t
group by t.policename
ORA-00942: 表或视图不存在
SQL> create or replace view police_data_all as
  2  select distinct policeid,policename,deptid  from (
  3           select p.policeid, replace(replace(p.policename,' ',''),'　','') as policename, p.depid as deptid
  4             from POLICE p
  5             join department d on p.DEPID = d.CDEPARTMENTID
  6            where p.auditstate = '1'
  7              and p.is_effective = '1'
  8              and p.isclosed = '1'
  9              and p.policeid != '999999'
 10           union all
 11           select px.policeid, replace(replace(px.policename,' ',''),'　','') as policename, px.deptid as deptid
 12             from POLICE_xfk px
 13             join department d on px.deptid = d.CDEPARTMENTID);
create or replace view police_data_all as
select distinct policeid,policename,deptid  from (
         select p.policeid, replace(replace(p.policename,' ',''),'　','') as policename, p.depid as deptid
           from POLICE p
           join department d on p.DEPID = d.CDEPARTMENTID
          where p.auditstate = '1'
            and p.is_effective = '1'
            and p.isclosed = '1'
            and p.policeid != '999999'
         union all
         select px.policeid, replace(replace(px.policename,' ',''),'　','') as policename, px.deptid as deptid
           from POLICE_xfk px
           join department d on px.deptid = d.CDEPARTMENTID)
ORA-00942: 表或视图不存在
SQL> /
create or replace view police_data_all as
select distinct policeid,policename,deptid  from (
         select p.policeid, replace(replace(p.policename,' ',''),'　','') as policename, p.depid as deptid
           from POLICE p
           join department d on p.DEPID = d.CDEPARTMENTID
          where p.auditstate = '1'
            and p.is_effective = '1'
            and p.isclosed = '1'
            and p.policeid != '999999'
         union all
         select px.policeid, replace(replace(px.policename,' ',''),'　','') as policename, px.deptid as deptid
           from POLICE_xfk px
           join department d on px.deptid = d.CDEPARTMENTID)
ORA-00942: 表或视图不存在
SQL> create or replace view police_id_data_all as
  2  select count(*) cnt, policeid
  3     from (
  4            select distinct policeid,policename,deptid  from (
  5           select p.policeid, replace(replace(p.policename,' ',''),'　','') as policename, p.depid as deptid
  6             from POLICE p
  7             join department d on p.DEPID = d.CDEPARTMENTID
  8            where p.auditstate = '1'
  9              and p.is_effective = '1'
 10              and p.isclosed = '1'
 11              and p.policeid != '999999'
 12           union all
 13           select px.policeid, replace(replace(px.policename,' ',''),'　','') as policename, px.deptid as deptid
 14             from POLICE_xfk px
 15             join department d on px.deptid = d.CDEPARTMENTID
 16             )
 17           ) t
 18  group by t.policeid;
create or replace view police_id_data_all as
select count(*) cnt, policeid
   from (
          select distinct policeid,policename,deptid  from (
         select p.policeid, replace(replace(p.policename,' ',''),'　','') as policename, p.depid as deptid
           from POLICE p
           join department d on p.DEPID = d.CDEPARTMENTID
          where p.auditstate = '1'
            and p.is_effective = '1'
            and p.isclosed = '1'
            and p.policeid != '999999'
         union all
         select px.policeid, replace(replace(px.policename,' ',''),'　','') as policename, px.deptid as deptid
           from POLICE_xfk px
           join department d on px.deptid = d.CDEPARTMENTID
           )
         ) t
group by t.policeid
ORA-00942: 表或视图不存在
SQL> /
create or replace view police_id_data_all as
select count(*) cnt, policeid
   from (
          select distinct policeid,policename,deptid  from (
         select p.policeid, replace(replace(p.policename,' ',''),'　','') as policename, p.depid as deptid
           from POLICE p
           join department d on p.DEPID = d.CDEPARTMENTID
          where p.auditstate = '1'
            and p.is_effective = '1'
            and p.isclosed = '1'
            and p.policeid != '999999'
         union all
         select px.policeid, replace(replace(px.policename,' ',''),'　','') as policename, px.deptid as deptid
           from POLICE_xfk px
           join department d on px.deptid = d.CDEPARTMENTID
           )
         ) t
group by t.policeid
ORA-00942: 表或视图不存在
SQL> create or replace view police_name_data_all as
  2  select count(*) cnt, policename
  3     from (
  4            select distinct policeid,policename,deptid  from (
  5           select p.policeid, replace(replace(p.policename,' ',''),'　','') as policename, p.depid as deptid
  6             from POLICE p
  7             join department d on p.DEPID = d.CDEPARTMENTID
  8            where p.auditstate = '1'
  9              and p.is_effective = '1'
 10              and p.isclosed = '1'
 11              and p.policeid != '999999'
 12           union all
 13           select px.policeid, replace(replace(px.policename,' ',''),'　','') as policename, px.deptid as deptid
 14             from POLICE_xfk px
 15             join department d on px.deptid = d.CDEPARTMENTID
 16           )
 17           ) t
 18  group by t.policename;
create or replace view police_name_data_all as
select count(*) cnt, policename
   from (
          select distinct policeid,policename,deptid  from (
         select p.policeid, replace(replace(p.policename,' ',''),'　','') as policename, p.depid as deptid
           from POLICE p
           join department d on p.DEPID = d.CDEPARTMENTID
          where p.auditstate = '1'
            and p.is_effective = '1'
            and p.isclosed = '1'
            and p.policeid != '999999'
         union all
         select px.policeid, replace(replace(px.policename,' ',''),'　','') as policename, px.deptid as deptid
           from POLICE_xfk px
           join department d on px.deptid = d.CDEPARTMENTID
         )
         ) t
group by t.policename
ORA-00942: 表或视图不存在
SQL> /
create or replace view police_name_data_all as
select count(*) cnt, policename
   from (
          select distinct policeid,policename,deptid  from (
         select p.policeid, replace(replace(p.policename,' ',''),'　','') as policename, p.depid as deptid
           from POLICE p
           join department d on p.DEPID = d.CDEPARTMENTID
          where p.auditstate = '1'
            and p.is_effective = '1'
            and p.isclosed = '1'
            and p.policeid != '999999'
         union all
         select px.policeid, replace(replace(px.policename,' ',''),'　','') as policename, px.deptid as deptid
           from POLICE_xfk px
           join department d on px.deptid = d.CDEPARTMENTID
         )
         ) t
group by t.policename
ORA-00942: 表或视图不存在
SQL> ---------A8-------------
SQL> create or replace function trans_vehicle_hpzl
  2  (p_vehicle_hpzl in varchar2,
  3  p_xfk_hpzl in varchar2
  4  )
  5  return varchar2
  6  
  7    is
  8  
  9      v_result varchar2(5);
 10  
 11    begin
 12  
 13      -- 默认0，表示不匹配
 14  
 15      v_result := '';
 16  
 17  -- 挂车处理
 18  
 19      if p_xfk_hpzl = '01' or p_xfk_hpzl = '51'  then
 20          v_result := '01';
 21      elsif p_xfk_hpzl = '02' or p_xfk_hpzl = '52' then
 22          v_result := '02';
 23      elsif p_xfk_hpzl = '07' then
 24           if p_vehicle_hpzl = '07A'  then
 25              v_result := '07A';
 26           else
 27              v_result := '07B';
 28           end if;
 29      elsif p_xfk_hpzl = '15' then
 30           v_result := '15';
 31      elsif p_xfk_hpzl is not null then
 32            v_result := 'A9';
 33      end if;
 34  
 35      return v_result;
 36  
 37    end;
 38  /
Function created
SQL> --------------A9------------
SQL> create index PK_TABLE on PSA_CASE_SOU_RELATION (THIRD_TABLE);
Index created
SQL> create index PK_SOURCEID on PSA_CASE_SOU_RELATION (SOURCE_ID);
Index created
SQL> create index index_configid on PSA_MONITOR_CONFIG_DETAIL (monitor_config_id);
Index created
SQL> alter table PSA_MONITOR_CONFIG_DETAIL
  2    add constraint pk_config_detail primary key (ID);
Table altered
SQL>  alter table PSA_CASE_EXCEPTION
  2    add constraint pk_case_exception primary key (ID);
Table altered
SQL> --B2
SQL> create index index_orderid on PSA_MONITOR_CONFIG_DETAIL (orderid);
Index created
SQL> create index iNDEX_monitorid on PSA_MONITOR_CONFIG_DETAIL (monitor_id);
Index created
SQL> create index index_parentid on PSA_MONITOR_INFO (PARENT_ID);
Index created
SQL> -----------B3------------------
SQL> --18个大队的警员数据
SQL> create or replace view police_data as
  2  select distinct policeid,policename,deptid  from (
  3           select p.policeid, replace(replace(p.policename,' ',''),'　','') as policename, p.depid as deptid
  4             from POLICE p
  5             join department d on p.DEPID = d.CDEPARTMENTID
  6             join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
  7                                               pdc.code = d.parentdepartment)
  8             left join POLICE_xfk px on p.policeid = px.policeid
  9            where p.auditstate = '1'
 10              and p.is_effective = '1'
 11              and p.isclosed = '1'
 12              and p.policeid != '999999'
 13              and px.policeid is null
 14           union all
 15           select px.policeid, replace(replace(px.policename,' ',''),'　','') as policename, px.deptid as deptid
 16             from POLICE_xfk px
 17             join department d on px.deptid = d.CDEPARTMENTID
 18             join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
 19                                               pdc.code = d.parentdepartment)
 20  );
create or replace view police_data as
select distinct policeid,policename,deptid  from (
         select p.policeid, replace(replace(p.policename,' ',''),'　','') as policename, p.depid as deptid
           from POLICE p
           join department d on p.DEPID = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
           left join POLICE_xfk px on p.policeid = px.policeid
          where p.auditstate = '1'
            and p.is_effective = '1'
            and p.isclosed = '1'
            and p.policeid != '999999'
            and px.policeid is null
         union all
         select px.policeid, replace(replace(px.policename,' ',''),'　','') as policename, px.deptid as deptid
           from POLICE_xfk px
           join department d on px.deptid = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
)
ORA-00942: 表或视图不存在
SQL> /
create or replace view police_data as
select distinct policeid,policename,deptid  from (
         select p.policeid, replace(replace(p.policename,' ',''),'　','') as policename, p.depid as deptid
           from POLICE p
           join department d on p.DEPID = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
           left join POLICE_xfk px on p.policeid = px.policeid
          where p.auditstate = '1'
            and p.is_effective = '1'
            and p.isclosed = '1'
            and p.policeid != '999999'
            and px.policeid is null
         union all
         select px.policeid, replace(replace(px.policename,' ',''),'　','') as policename, px.deptid as deptid
           from POLICE_xfk px
           join department d on px.deptid = d.CDEPARTMENTID
           join psa_department_config pdc on (pdc.code = d.CDEPARTMENTID or
                                             pdc.code = d.parentdepartment)
)
ORA-00942: 表或视图不存在
SQL> ----18个大队的警员id统计数据（判断警号是否存在于18个大队用）
SQL> create or replace view police_id_data as
  2  select count(*) cnt, policeid
  3     from police_data t
  4    group by t.policeid;
create or replace view police_id_data as
select count(*) cnt, policeid
   from police_data t
  group by t.policeid
ORA-00942: 表或视图不存在
SQL> /
create or replace view police_id_data as
select count(*) cnt, policeid
   from police_data t
  group by t.policeid
ORA-00942: 表或视图不存在
SQL> ----18个大队的警员姓名统计数据（判断警员姓名是否存在于18个大队用）
SQL> create or replace view police_name_data as
  2  select count(*) cnt, policename
  3     from police_data t
  4    group by t.policename;
create or replace view police_name_data as
select count(*) cnt, policename
   from police_data t
  group by t.policename
ORA-00942: 表或视图不存在
SQL> /
create or replace view police_name_data as
select count(*) cnt, policename
   from police_data t
  group by t.policename
ORA-00942: 表或视图不存在
SQL> --所有大队的警员数据
SQL> create or replace view police_data_all as
  2  select distinct policeid,policename,deptid  from (
  3           select p.policeid, replace(replace(p.policename,' ',''),'　','') as policename, p.depid as deptid
  4             from POLICE p
  5             join department d on p.DEPID = d.CDEPARTMENTID
  6        left join POLICE_xfk px on p.policeid = px.policeid
  7            where p.auditstate = '1'
  8              and p.is_effective = '1'
  9              and p.isclosed = '1'
 10              and p.policeid != '999999'
 11              and px.policeid is null
 12           union all
 13           select px.policeid, replace(replace(px.policename,' ',''),'　','') as policename, px.deptid as deptid
 14             from POLICE_xfk px
 15             join department d on px.deptid = d.CDEPARTMENTID
 16  );
create or replace view police_data_all as
select distinct policeid,policename,deptid  from (
         select p.policeid, replace(replace(p.policename,' ',''),'　','') as policename, p.depid as deptid
           from POLICE p
           join department d on p.DEPID = d.CDEPARTMENTID
      left join POLICE_xfk px on p.policeid = px.policeid
          where p.auditstate = '1'
            and p.is_effective = '1'
            and p.isclosed = '1'
            and p.policeid != '999999'
            and px.policeid is null
         union all
         select px.policeid, replace(replace(px.policename,' ',''),'　','') as policename, px.deptid as deptid
           from POLICE_xfk px
           join department d on px.deptid = d.CDEPARTMENTID
)
ORA-00942: 表或视图不存在
SQL> /
create or replace view police_data_all as
select distinct policeid,policename,deptid  from (
         select p.policeid, replace(replace(p.policename,' ',''),'　','') as policename, p.depid as deptid
           from POLICE p
           join department d on p.DEPID = d.CDEPARTMENTID
      left join POLICE_xfk px on p.policeid = px.policeid
          where p.auditstate = '1'
            and p.is_effective = '1'
            and p.isclosed = '1'
            and p.policeid != '999999'
            and px.policeid is null
         union all
         select px.policeid, replace(replace(px.policename,' ',''),'　','') as policename, px.deptid as deptid
           from POLICE_xfk px
           join department d on px.deptid = d.CDEPARTMENTID
)
ORA-00942: 表或视图不存在
SQL> --所有大队的警号统计数据（判断警号是否重复用）
SQL> create or replace view police_id_data_all as
  2  select count(*) cnt, policeid
  3     from police_data_all t
  4    group by t.policeid;
create or replace view police_id_data_all as
select count(*) cnt, policeid
   from police_data_all t
  group by t.policeid
ORA-00942: 表或视图不存在
SQL> /
create or replace view police_id_data_all as
select count(*) cnt, policeid
   from police_data_all t
  group by t.policeid
ORA-00942: 表或视图不存在
SQL> --所有大队的警员姓名统计数据（判断警员姓名是否重复用）
SQL> create or replace view police_name_data_all as
  2  select count(*) cnt, policename
  3     from police_data_all t
  4    group by t.policename;
create or replace view police_name_data_all as
select count(*) cnt, policename
   from police_data_all t
  group by t.policename
ORA-00942: 表或视图不存在
SQL> /
create or replace view police_name_data_all as
select count(*) cnt, policename
   from police_data_all t
  group by t.policename
ORA-00942: 表或视图不存在
SQL> ----------------B4------------
SQL> alter table PSA_MONITOR_EXCEPTION modify PERSON_CARD VARCHAR2(100);
Table altered
SQL> -----------------------------赋权限，需修改第三方账号名--------------------------
SQL> GRANT SELECT ON police to hiatmp3rd;
GRANT SELECT ON police to hiatmp3rd
ORA-00942: 表或视图不存在
SQL> GRANT SELECT ON psa_data_collect_log to hiatmp3rd;
Grant succeeded
SQL> GRANT INSERT ON psa_data_collect_log to hiatmp3rd;
Grant succeeded
SQL> GRANT SELECT ON psa_department_config to hiatmp3rd;
Grant succeeded
SQL> GRANT SELECT ON psa_monitor_execute_config to hiatmp3rd;
Grant succeeded
SQL> GRANT SELECT ON psa_monitor_exe_plan_config to hiatmp3rd;
Grant succeeded
SQL> GRANT SELECT ON psa_monitor_param_config to hiatmp3rd;
Grant succeeded
SQL> GRANT update ON psa_data_collect_log to hiatmp3rd;
Grant succeeded
SQL> GRANT delete ON psa_data_collect_log to hiatmp3rd;
Grant succeeded
SQL> ------------------------------------6.0 psa end-----------------------------
SQL> ------------------------------------6.0 psd start-----------------------------
SQL> --↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓警情处置6.0psd-增量脚本A1  张国庆2020.2.12 Start-----------------------
SQL> -- Create table
SQL> create table PSD_ALGORITHM_PARAMS
  2  (
  3    paramcode    NVARCHAR2(32) not null,
  4    paramname    NVARCHAR2(100) not null,
  5    paramvalue   NVARCHAR2(2000) not null,
  6    paramcontent NVARCHAR2(250)
  7  )
  8  tablespace HIATMPTS
  9    pctfree 10
 10    initrans 1
 11    maxtrans 255
 12    storage
 13    (
 14      initial 16K
 15      next 8K
 16      minextents 1
 17      maxextents unlimited
 18    );
Table created
SQL> -- Add comments to the table
SQL> comment on table PSD_ALGORITHM_PARAMS
  2    is '警情处置算法参数配置表';
Comment added
SQL> -- Create/Recreate primary, unique and foreign key constraints
SQL> alter table PSD_ALGORITHM_PARAMS
  2    add constraint PSD_ALGO_PARAMS_KEY primary key (PARAMCODE)
  3    using index
  4    tablespace HIATMPTS
  5    pctfree 10
  6    initrans 2
  7    maxtrans 255
  8    storage
  9    (
 10      initial 64K
 11      next 1M
 12      minextents 1
 13      maxextents unlimited
 14    );
Table altered
SQL> -- Create table
SQL> create table PSD_AREAINDEX_SPEED_RELATION
  2  (
  3    id       VARCHAR2(32) default sys_guid() not null,
  4    minindex VARCHAR2(2) not null,
  5    maxindex VARCHAR2(2) not null,
  6    cartype  VARCHAR2(2) not null,
  7    speed    VARCHAR2(10)
  8  )
  9  tablespace HIATMPTS
 10    pctfree 10
 11    initrans 1
 12    maxtrans 255
 13    storage
 14    (
 15      initial 16K
 16      next 8K
 17      minextents 1
 18      maxextents unlimited
 19    );
Table created
SQL> -- Add comments to the table
SQL> comment on table PSD_AREAINDEX_SPEED_RELATION
  2    is '区域指数和速度对照关系表';
Comment added
SQL> -- Add comments to the columns
SQL> comment on column PSD_AREAINDEX_SPEED_RELATION.id
  2    is '数据主键';
Comment added
SQL> comment on column PSD_AREAINDEX_SPEED_RELATION.minindex
  2    is '交通指数下限';
Comment added
SQL> comment on column PSD_AREAINDEX_SPEED_RELATION.maxindex
  2    is '交通指数上限';
Comment added
SQL> comment on column PSD_AREAINDEX_SPEED_RELATION.cartype
  2    is '车辆类型(与勤务参数表dm_param_define中的DUTY_POSITION_DUTYTYPE对应)';
Comment added
SQL> comment on column PSD_AREAINDEX_SPEED_RELATION.speed
  2    is '对应车速';
Comment added
SQL> -- Create/Recreate primary, unique and foreign key constraints
SQL> alter table PSD_AREAINDEX_SPEED_RELATION
  2    add constraint PK_PSD_AREAINDEX_SPEED primary key (ID)
  3    using index
  4    tablespace HIATMPTS
  5    pctfree 10
  6    initrans 2
  7    maxtrans 255
  8    storage
  9    (
 10      initial 64K
 11      next 1M
 12      minextents 1
 13      maxextents unlimited
 14    );
Table altered
SQL>   -- Create table
SQL> create table PSD_POLICE_DATA
  2  (
  3    id         VARCHAR2(32) not null,
  4    policetype VARCHAR2(2)
  5  )
  6  tablespace USERS
  7    pctfree 10
  8    initrans 1
  9    maxtrans 255
 10    storage
 11    (
 12      initial 64K
 13      next 1M
 14      minextents 1
 15      maxextents unlimited
 16    );
Table created
SQL> -- Add comments to the table
SQL> comment on table PSD_POLICE_DATA
  2    is '警情处置事故民警表';
Comment added
SQL> -- Add comments to the columns
SQL> comment on column PSD_POLICE_DATA.id
  2    is '警员数据主键对应police表中的uuid';
Comment added
SQL> comment on column PSD_POLICE_DATA.policetype
  2    is '警员类型';
Comment added
SQL> -- Create/Recreate primary, unique and foreign key constraints
SQL> alter table PSD_POLICE_DATA
  2    add constraint PK_PSD_POLICE_DATA primary key (ID)
  3    using index
  4    tablespace USERS
  5    pctfree 10
  6    initrans 2
  7    maxtrans 255
  8    storage
  9    (
 10      initial 64K
 11      next 1M
 12      minextents 1
 13      maxextents unlimited
 14    );
Table altered
SQL> -- Create table
SQL> create table PSD_ACCIDENT_UPLOAD_INFO
  2  (
  3    id          VARCHAR2(32),
  4    upload_time DATE,
  5    operator    VARCHAR2(32),
  6    bh          VARCHAR2(30),
  7    case_type   VARCHAR2(2)
  8  )
  9  tablespace HIATMPTS
 10    pctfree 10
 11    initrans 1
 12    maxtrans 255
 13    storage
 14    (
 15      initial 64K
 16      next 8K
 17      minextents 1
 18      maxextents unlimited
 19    );
Table created
SQL> -- Add comments to the table
SQL> comment on table PSD_ACCIDENT_UPLOAD_INFO
  2    is '警情处置事故上传信息表';
Comment added
SQL> -- Add comments to the columns
SQL> comment on column PSD_ACCIDENT_UPLOAD_INFO.id
  2    is '数据主键';
Comment added
SQL> comment on column PSD_ACCIDENT_UPLOAD_INFO.upload_time
  2    is '上传时间';
Comment added
SQL> comment on column PSD_ACCIDENT_UPLOAD_INFO.operator
  2    is '操作人';
Comment added
SQL> comment on column PSD_ACCIDENT_UPLOAD_INFO.bh
  2    is '文档编号';
Comment added
SQL> comment on column PSD_ACCIDENT_UPLOAD_INFO.case_type
  2    is '类型 1强制措施 2处罚决定书';
Comment added
SQL> commit;
Commit complete
SQL> --↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓警情处置6.0psd-增量脚本A2  张国庆2020.2.12 Start-----------------------
SQL> create or replace view psd_index_view as
  2  select iai.indey dept_index, ia.hiatmp_code dept
  3           from INDEX_AREA_INDEX@hiatis iai join index_area@hiatis ia on iai.area_id = ia.area_id
  4           where not exists (select 1 from INDEX_AREA_INDEX@hiatis i where i.area_id = iai.area_id
  5           and i.insert_time > iai.insert_time) AND ia.hiatmp_code IS NOT NULL;
create or replace view psd_index_view as
select iai.indey dept_index, ia.hiatmp_code dept
         from INDEX_AREA_INDEX@hiatis iai join index_area@hiatis ia on iai.area_id = ia.area_id
         where not exists (select 1 from INDEX_AREA_INDEX@hiatis i where i.area_id = iai.area_id
         and i.insert_time > iai.insert_time) AND ia.hiatmp_code IS NOT NULL
ORA-01017: invalid username/password; logon denied
ORA-02063: 紧接着 line (起自 HIATIS)
ORA-01017: invalid username/password; logon denied
ORA-02063: 紧接着 line (起自 HIATIS)
SQL> --↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓警情处置6.0psd-增量脚本A3  张国庆2020.2.12 Start-----------------------
SQL> -- Add comments to the columns
SQL> comment on column PSD_ALGORITHM_PARAMS.paramcode
  2    is '参数代码';
Comment added
SQL> comment on column PSD_ALGORITHM_PARAMS.paramname
  2    is '参数名称';
Comment added
SQL> comment on column PSD_ALGORITHM_PARAMS.paramvalue
  2    is '参数值';
Comment added
SQL> comment on column PSD_ALGORITHM_PARAMS.paramcontent
  2    is '参数备注';
Comment added
SQL> -- Add/modify columns
SQL> alter table PSD_ACCIDENT_UPLOAD_INFO add case_id VARCHAR2(32);
Table altered
SQL> -- Add comments to the columns
SQL> comment on column PSD_ACCIDENT_UPLOAD_INFO.case_id
  2    is '警情id';
Comment added
SQL> commit;
Commit complete
SQL> --↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓警情处置6.0psd-增量脚本A4  张国庆2020.2.12 Start-----------------------
SQL> --↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓警情处置6.0psd-增量脚本A5  张国庆2020.2.12 Start-----------------------
SQL> create or replace view psd_index_view as
  2  select iai.indey dept_index, ia.hiatmp_code dept
  3           from INDEX_AREA_INDEX@hiatis iai join index_area@hiatis ia on iai.area_id = ia.area_id
  4           where not exists (select 1 from INDEX_AREA_INDEX@hiatis i where i.area_id = iai.area_id
  5           and i.insert_time > iai.insert_time) and iai.insert_time > sysdate - (select nvl(pap.paramvalue, 5) from psd_algorithm_params pap where pap.paramcode = 'DEPT_ROADINDEX_INTERVAL') / 1440 group by ia.hiatmp_code, iai.indey;
create or replace view psd_index_view as
select iai.indey dept_index, ia.hiatmp_code dept
         from INDEX_AREA_INDEX@hiatis iai join index_area@hiatis ia on iai.area_id = ia.area_id
         where not exists (select 1 from INDEX_AREA_INDEX@hiatis i where i.area_id = iai.area_id
         and i.insert_time > iai.insert_time) and iai.insert_time > sysdate - (select nvl(pap.paramvalue, 5) from psd_algorithm_params pap where pap.paramcode = 'DEPT_ROADINDEX_INTERVAL') / 1440 group by ia.hiatmp_code, iai.indey
ORA-01017: invalid username/password; logon denied
ORA-02063: 紧接着 line (起自 HIATIS)
ORA-01017: invalid username/password; logon denied
ORA-02063: 紧接着 line (起自 HIATIS)
SQL> --↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓警情处置6.0psd-增量脚本A6 张国庆2020.2.12 Start-----------------------
SQL> -- Add/modify columns
SQL> alter table PSD_ORDER_ATTACHMENT add name NVARCHAR2(200);
alter table PSD_ORDER_ATTACHMENT add name NVARCHAR2(200)
ORA-00942: 表或视图不存在
SQL> -- Add comments to the columns
SQL> comment on column PSD_ORDER_ATTACHMENT.name
  2    is '附件名称';
comment on column PSD_ORDER_ATTACHMENT.name
  is '附件名称'
ORA-00942: 表或视图不存在
SQL>  --↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓警情处置6.0psd-增量脚本A7 张国庆2020.2.12 Start-----------------------
SQL> --------------------------------------6.0 psd end--------------------
SQL> --------------------------------------6.0 pis start------------------
SQL> --↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓HiATMP-DB-PIS-DDL.6.0.0.0.A1.sql Start-----------------------
SQL> create table PIS_ACCIDENT_CARS
  2  (
  3    ID       VARCHAR2(32) not null,
  4    CAR_NO   VARCHAR2(10) not null,
  5    CAR_TYPE VARCHAR2(2) not null,
  6    INFO_ID  VARCHAR2(32)
  7  )
  8  ;
Table created
SQL> comment on table PIS_ACCIDENT_CARS
  2    is '事件车辆关联表';
Comment added
SQL> comment on column PIS_ACCIDENT_CARS.ID
  2    is '编号';
Comment added
SQL> comment on column PIS_ACCIDENT_CARS.CAR_NO
  2    is '号牌号码';
Comment added
SQL> comment on column PIS_ACCIDENT_CARS.CAR_TYPE
  2    is '号牌类型';
Comment added
SQL> comment on column PIS_ACCIDENT_CARS.INFO_ID
  2    is '情报编号';
Comment added
SQL> alter table PIS_ACCIDENT_CARS
  2    add constraint PIS_ACCIDENT_CARS_PK primary key (ID);
Table altered
SQL> create table PIS_ATTACHS
  2  (
  3    ID             VARCHAR2(32) not null,
  4    ATTACH_URL     VARCHAR2(200) not null,
  5    ATTACH_TYPE    VARCHAR2(2) not null,
  6    UPLOAD_TIME    DATE not null,
  7    UPLOAD_ACCOUNT VARCHAR2(50) not null,
  8    INFO_ID        VARCHAR2(32),
  9    OPER_ID        VARCHAR2(32),
 10    ATTACH_NAME    VARCHAR2(100) not null
 11  )
 12  ;
Table created
SQL> comment on table PIS_ATTACHS
  2    is '附件表';
Comment added
SQL> comment on column PIS_ATTACHS.ID
  2    is '编号';
Comment added
SQL> comment on column PIS_ATTACHS.ATTACH_URL
  2    is '附件地址';
Comment added
SQL> comment on column PIS_ATTACHS.ATTACH_TYPE
  2    is '附件类型';
Comment added
SQL> comment on column PIS_ATTACHS.UPLOAD_TIME
  2    is '上传时间';
Comment added
SQL> comment on column PIS_ATTACHS.UPLOAD_ACCOUNT
  2    is '上传人';
Comment added
SQL> comment on column PIS_ATTACHS.INFO_ID
  2    is '情报编号';
Comment added
SQL> comment on column PIS_ATTACHS.OPER_ID
  2    is '操作日志编号';
Comment added
SQL> comment on column PIS_ATTACHS.ATTACH_NAME
  2    is '附件名称';
Comment added
SQL> alter table PIS_ATTACHS
  2    add constraint PIS_ATTACHS_PK primary key (ID);
Table altered
SQL> create table PIS_FEATURE_TYPE_CONFIG
  2  (
  3    ID           VARCHAR2(32) not null,
  4    INFO_TYPE    VARCHAR2(2) not null,
  5    TYPE_NAME    VARCHAR2(100) not null,
  6    SUBTYPE      VARCHAR2(10) not null,
  7    SUBTYPE_NAME VARCHAR2(100) not null,
  8    FEATURE      VARCHAR2(2) not null,
  9    CLOSE_LIMIT  INTEGER not null
 10  )
 11  ;
Table created
SQL> comment on table PIS_FEATURE_TYPE_CONFIG
  2    is '类型及类型配置表';
Comment added
SQL> comment on column PIS_FEATURE_TYPE_CONFIG.ID
  2    is '配置编号';
Comment added
SQL> comment on column PIS_FEATURE_TYPE_CONFIG.INFO_TYPE
  2    is '情报类型编号';
Comment added
SQL> comment on column PIS_FEATURE_TYPE_CONFIG.TYPE_NAME
  2    is '情报类型名称';
Comment added
SQL> comment on column PIS_FEATURE_TYPE_CONFIG.SUBTYPE
  2    is '子类型编号';
Comment added
SQL> comment on column PIS_FEATURE_TYPE_CONFIG.SUBTYPE_NAME
  2    is '子类型名称';
Comment added
SQL> comment on column PIS_FEATURE_TYPE_CONFIG.FEATURE
  2    is '情报性质（0：快、1：慢）';
Comment added
SQL> comment on column PIS_FEATURE_TYPE_CONFIG.CLOSE_LIMIT
  2    is '默认办理时长（分钟）';
Comment added
SQL> alter table PIS_FEATURE_TYPE_CONFIG
  2    add constraint PIS_FEATURE_TYPE_CONFIG_PK primary key (ID);
Table altered
SQL> create table PIS_FIELD_INDEX
  2  (
  3    INDEX_ID   VARCHAR2(32) not null,
  4    FIELD_NAME VARCHAR2(50),
  5    FIELD_VAL  VARCHAR2(200),
  6    INFO_IDS   CLOB
  7  )
  8  ;
Table created
SQL> comment on table PIS_FIELD_INDEX
  2    is '情报内容字段索引表';
Comment added
SQL> comment on column PIS_FIELD_INDEX.INDEX_ID
  2    is '索引编号';
Comment added
SQL> comment on column PIS_FIELD_INDEX.FIELD_NAME
  2    is '字段名称';
Comment added
SQL> comment on column PIS_FIELD_INDEX.FIELD_VAL
  2    is '字段值';
Comment added
SQL> comment on column PIS_FIELD_INDEX.INFO_IDS
  2    is '关联情报';
Comment added
SQL> alter table PIS_FIELD_INDEX
  2    add constraint PIS_FIELD_INDEX_PK primary key (INDEX_ID);
Table altered
SQL> create table PIS_FIELD_SCHEMA
  2  (
  3    FIELD_ID          VARCHAR2(32) not null,
  4    FIELD_NAME        VARCHAR2(50) not null,
  5    FIELD_DESC        VARCHAR2(100),
  6    FIELD_TYPE        VARCHAR2(2) default 1,
  7    FIELD_INFO_TYPE   VARCHAR2(2) not null,
  8    NEED_INDEX        VARCHAR2(2) default 0,
  9    FIELD_INFO_SOURCE VARCHAR2(2) not null
 10  )
 11  ;
Table created
SQL> comment on table PIS_FIELD_SCHEMA
  2    is '情报内容字段释义表';
Comment added
SQL> comment on column PIS_FIELD_SCHEMA.FIELD_ID
  2    is '字段编号';
Comment added
SQL> comment on column PIS_FIELD_SCHEMA.FIELD_NAME
  2    is '字段名称';
Comment added
SQL> comment on column PIS_FIELD_SCHEMA.FIELD_DESC
  2    is '字段中文描述';
Comment added
SQL> comment on column PIS_FIELD_SCHEMA.FIELD_TYPE
  2    is '字段类型(0:数字,1:字符串)';
Comment added
SQL> comment on column PIS_FIELD_SCHEMA.FIELD_INFO_TYPE
  2    is '所属情报类型(大类)';
Comment added
SQL> comment on column PIS_FIELD_SCHEMA.NEED_INDEX
  2    is '是否需要索引(0:不需要,1:需要)';
Comment added
SQL> comment on column PIS_FIELD_SCHEMA.FIELD_INFO_SOURCE
  2    is '所属情报来源';
Comment added
SQL> alter table PIS_FIELD_SCHEMA
  2    add constraint PIS_FIELD_SCHEMA_PK primary key (FIELD_ID);
Table altered
SQL> create table PIS_GROUP
  2  (
  3    GROUP_ID            VARCHAR2(32) not null,
  4    GROUP_LEVEL         VARCHAR2(2),
  5    CLOSE_LIMIT         INTEGER,
  6    DISPATCH_TIME       DATE,
  7    SIGN_TIME           DATE,
  8    CLOSE_TIME          DATE,
  9    GROUP_STAGE         VARCHAR2(2) not null,
 10    SORTER_USERID       VARCHAR2(10),
 11    SIGN_LIMIT          INTEGER,
 12    DISPATCH_CLOSE_TIME DATE
 13  )
 14  ;
Table created
SQL> comment on table PIS_GROUP
  2    is '情报组表';
Comment added
SQL> comment on column PIS_GROUP.GROUP_ID
  2    is '情报组编号';
Comment added
SQL> comment on column PIS_GROUP.GROUP_LEVEL
  2    is '情报组等级';
Comment added
SQL> comment on column PIS_GROUP.CLOSE_LIMIT
  2    is '办理时限（分钟）';
Comment added
SQL> comment on column PIS_GROUP.DISPATCH_TIME
  2    is '分拣时间';
Comment added
SQL> comment on column PIS_GROUP.SIGN_TIME
  2    is '签收时间';
Comment added
SQL> comment on column PIS_GROUP.CLOSE_TIME
  2    is '办结时间';
Comment added
SQL> comment on column PIS_GROUP.GROUP_STAGE
  2    is '当前阶段（情报子系统参数配置表中INFO_STATUS）';
Comment added
SQL> comment on column PIS_GROUP.SORTER_USERID
  2    is '分拣员编号（userid）';
Comment added
SQL> comment on column PIS_GROUP.SIGN_LIMIT
  2    is '办理时限（分钟，从SIGN_TIME获取）';
Comment added
SQL> comment on column PIS_GROUP.DISPATCH_CLOSE_TIME
  2    is '分拣截止时间（情报接入、退回时会更新）';
Comment added
SQL> alter table PIS_GROUP
  2    add constraint BPIS_GROUP_PK primary key (GROUP_ID);
Table altered
SQL> create table PIS_GROUP_MARKS
  2  (
  3    TAG_ID    VARCHAR2(32),
  4    USERID    VARCHAR2(10),
  5    GROUP_ID  VARCHAR2(32),
  6    MARK_TIME DATE
  7  )
  8  ;
Table created
SQL> comment on table PIS_GROUP_MARKS
  2    is '人员标记情报表';
Comment added
SQL> comment on column PIS_GROUP_MARKS.TAG_ID
  2    is '标记编号';
Comment added
SQL> comment on column PIS_GROUP_MARKS.USERID
  2    is '人员编号（userid）';
Comment added
SQL> comment on column PIS_GROUP_MARKS.GROUP_ID
  2    is '组编号';
Comment added
SQL> comment on column PIS_GROUP_MARKS.MARK_TIME
  2    is '标记时间';
Comment added
SQL> create table PIS_GROUP_STAGES
  2  (
  3    STATE_ID     VARCHAR2(32) not null,
  4    START_TIME   DATE,
  5    END_TIME     DATE,
  6    STAGE_STATUS VARCHAR2(2),
  7    LAST_STATUS  VARCHAR2(2),
  8    GROUP_ID     VARCHAR2(32) not null
  9  )
 10  ;
Table created
SQL> comment on table PIS_GROUP_STAGES
  2    is '情报组进度变化表';
Comment added
SQL> comment on column PIS_GROUP_STAGES.STATE_ID
  2    is '进度编号';
Comment added
SQL> comment on column PIS_GROUP_STAGES.START_TIME
  2    is '开始时间';
Comment added
SQL> comment on column PIS_GROUP_STAGES.END_TIME
  2    is '结束时间';
Comment added
SQL> comment on column PIS_GROUP_STAGES.STAGE_STATUS
  2    is '当前状态（情报子系统参数配置表中INFO_STATUS）';
Comment added
SQL> comment on column PIS_GROUP_STAGES.LAST_STATUS
  2    is '上一状态（情报子系统参数配置表中INFO_STATUS）';
Comment added
SQL> comment on column PIS_GROUP_STAGES.GROUP_ID
  2    is '组编号';
Comment added
SQL> alter table PIS_GROUP_STAGES
  2    add constraint PIS_GROUP_STAGES_PK primary key (STATE_ID);
Table altered
SQL> create table PIS_INFO_BASE
  2  (
  3    INFO_ID         VARCHAR2(32) not null,
  4    INFO_CHANNEL    VARCHAR2(2) not null,
  5    INFO_SOURCE     VARCHAR2(2) not null,
  6    INFO_FEATURE    VARCHAR2(2) not null,
  7    INFO_LEVEL      VARCHAR2(2) not null,
  8    INFO_TYPE       VARCHAR2(2) not null,
  9    INFO_SUBTYPE    VARCHAR2(10) not null,
 10    INFO_TIME       DATE not null,
 11    CREATE_TIME     DATE not null,
 12    INFO_TOPIC      VARCHAR2(200) not null,
 13    INFO_DESC       VARCHAR2(500),
 14    INFO_STAGE      VARCHAR2(2) not null,
 15    DISPATCH_TIME   DATE,
 16    SIGN_TIME       DATE,
 17    THIRDSYSCODE    VARCHAR2(32),
 18    INFO_CONTENT    VARCHAR2(2000),
 19    SIMHASHCODE     VARCHAR2(64),
 20    INFO_COORDINATE VARCHAR2(500),
 21    INFO_ADDRESS    VARCHAR2(500),
 22    CONFIRM_TIME    DATE,
 23    CONFIRM_USERID  VARCHAR2(10),
 24    CLOSE_TIME      DATE
 25  )
 26  ;
Table created
SQL> comment on table PIS_INFO_BASE
  2    is '情报信息表';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_ID
  2    is '情报编号';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_CHANNEL
  2    is '接入渠道';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_SOURCE
  2    is '情报来源';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_FEATURE
  2    is '情报性质(0快情报, 1慢情报)';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_LEVEL
  2    is '情报等级';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_TYPE
  2    is '情报类型';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_SUBTYPE
  2    is '情报子类型';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_TIME
  2    is '发生时间';
Comment added
SQL> comment on column PIS_INFO_BASE.CREATE_TIME
  2    is '录入时间';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_TOPIC
  2    is '情报主题';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_DESC
  2    is '情报描述';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_STAGE
  2    is '当前阶段（情报子系统参数配置表中INFO_STATUS）';
Comment added
SQL> comment on column PIS_INFO_BASE.DISPATCH_TIME
  2    is '分拣时间';
Comment added
SQL> comment on column PIS_INFO_BASE.SIGN_TIME
  2    is '签收时间';
Comment added
SQL> comment on column PIS_INFO_BASE.THIRDSYSCODE
  2    is '第三方编号';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_CONTENT
  2    is '情报内容';
Comment added
SQL> comment on column PIS_INFO_BASE.SIMHASHCODE
  2    is '情报hash签名，用于重复情报判定';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_COORDINATE
  2    is '事发地点坐标';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_ADDRESS
  2    is '事发地址';
Comment added
SQL> comment on column PIS_INFO_BASE.CONFIRM_TIME
  2    is '确认时间';
Comment added
SQL> comment on column PIS_INFO_BASE.CONFIRM_USERID
  2    is '确认人编号';
Comment added
SQL> comment on column PIS_INFO_BASE.CLOSE_TIME
  2    is '办结时间';
Comment added
SQL> alter table PIS_INFO_BASE
  2    add constraint PIS_INFO_BASE_PK primary key (INFO_ID);
Table altered
SQL> create table PIS_INFO_DEPTS
  2  (
  3    DEPTID        VARCHAR2(12) not null,
  4    GROUP_ID      VARCHAR2(32) not null,
  5    IS_LEADER     VARCHAR2(2),
  6    FOLLOWER_TYPE VARCHAR2(2),
  7    ADD_TIME      DATE,
  8    ADD_DEPT      VARCHAR2(12),
  9    WORK_REQUIRE  VARCHAR2(500),
 10    IS_SUPERVISE  VARCHAR2(2)
 11  )
 12  ;
Table created
SQL> comment on table PIS_INFO_DEPTS
  2    is '情报组处理部门表';
Comment added
SQL> comment on column PIS_INFO_DEPTS.DEPTID
  2    is '部门编号';
Comment added
SQL> comment on column PIS_INFO_DEPTS.GROUP_ID
  2    is '组编号';
Comment added
SQL> comment on column PIS_INFO_DEPTS.IS_LEADER
  2    is '是否主办（0：否；1：是）';
Comment added
SQL> comment on column PIS_INFO_DEPTS.FOLLOWER_TYPE
  2    is '协办类型（暂不启用）';
Comment added
SQL> comment on column PIS_INFO_DEPTS.ADD_TIME
  2    is '添加时间';
Comment added
SQL> comment on column PIS_INFO_DEPTS.ADD_DEPT
  2    is '添加部门编号';
Comment added
SQL> comment on column PIS_INFO_DEPTS.WORK_REQUIRE
  2    is '工作要求';
Comment added
SQL> comment on column PIS_INFO_DEPTS.IS_SUPERVISE
  2    is '是否督办（0：否；1：是）';
Comment added
SQL> alter table PIS_INFO_DEPTS
  2    add constraint PIS_INFO_DEPTS_PK primary key (DEPTID, GROUP_ID);
Table altered
SQL> create table PIS_INFO_DEPT_PROCESS
  2  (
  3    DEPTID          VARCHAR2(12) not null,
  4    GROUP_ID        VARCHAR2(32) not null,
  5    INFO_DEPT_STAGE VARCHAR2(2) not null,
  6    SIGN_TIME       DATE,
  7    CLOSE_TIME      DATE
  8  )
  9  ;
Table created
SQL> comment on table PIS_INFO_DEPT_PROCESS
  2    is '部门进度信息表';
Comment added
SQL> comment on column PIS_INFO_DEPT_PROCESS.DEPTID
  2    is '部门编号';
Comment added
SQL> comment on column PIS_INFO_DEPT_PROCESS.GROUP_ID
  2    is '组编号';
Comment added
SQL> comment on column PIS_INFO_DEPT_PROCESS.INFO_DEPT_STAGE
  2    is '当前阶段（参考情报子系统参数配置中的INFO_STATUS）';
Comment added
SQL> comment on column PIS_INFO_DEPT_PROCESS.SIGN_TIME
  2    is '签收时间';
Comment added
SQL> comment on column PIS_INFO_DEPT_PROCESS.CLOSE_TIME
  2    is '办结时间';
Comment added
SQL> alter table PIS_INFO_DEPT_PROCESS
  2    add constraint PIS_INFO_DEPT_PROCESS_PK primary key (DEPTID, GROUP_ID);
Table altered
SQL> create table PIS_INFO_DETAILS
  2  (
  3    INFO_ID             VARCHAR2(32) not null,
  4    AREAID              VARCHAR2(6) not null,
  5    INFO_LOCATION       VARCHAR2(200) not null,
  6    LOCATION_COORDINATE VARCHAR2(200) not null,
  7    REPORTER_NAME       VARCHAR2(20),
  8    REPORTER_SEX        VARCHAR2(2),
  9    REPORTER_PHONE      VARCHAR2(20),
 10    WOUNDED_NUM         INTEGER,
 11    DEATH_NUM           INTEGER,
 12    ACCIDENT_SHAPE      VARCHAR2(20),
 13    ENTRUST_DEPT        VARCHAR2(20),
 14    ENTRUST_PERSON      VARCHAR2(20),
 15    ENTRUST_PHONE       VARCHAR2(20)
 16  )
 17  ;
Table created
SQL> comment on table PIS_INFO_DETAILS
  2    is '情报附属信息表';
Comment added
SQL> comment on column PIS_INFO_DETAILS.INFO_ID
  2    is '情报编号';
Comment added
SQL> comment on column PIS_INFO_DETAILS.AREAID
  2    is '所属辖区编号';
Comment added
SQL> comment on column PIS_INFO_DETAILS.INFO_LOCATION
  2    is '事发地点名称';
Comment added
SQL> comment on column PIS_INFO_DETAILS.LOCATION_COORDINATE
  2    is '事发地点坐标';
Comment added
SQL> comment on column PIS_INFO_DETAILS.REPORTER_NAME
  2    is '上报人姓名';
Comment added
SQL> comment on column PIS_INFO_DETAILS.REPORTER_SEX
  2    is '上报人性别';
Comment added
SQL> comment on column PIS_INFO_DETAILS.REPORTER_PHONE
  2    is '上报人电话';
Comment added
SQL> comment on column PIS_INFO_DETAILS.WOUNDED_NUM
  2    is '受伤人数';
Comment added
SQL> comment on column PIS_INFO_DETAILS.DEATH_NUM
  2    is '死亡人数';
Comment added
SQL> comment on column PIS_INFO_DETAILS.ACCIDENT_SHAPE
  2    is '事故形态';
Comment added
SQL> comment on column PIS_INFO_DETAILS.ENTRUST_DEPT
  2    is '交办单位';
Comment added
SQL> comment on column PIS_INFO_DETAILS.ENTRUST_PERSON
  2    is '交办人姓名';
Comment added
SQL> comment on column PIS_INFO_DETAILS.ENTRUST_PHONE
  2    is '交办人电话';
Comment added
SQL> alter table PIS_INFO_DETAILS
  2    add constraint PIS_INFO_DETAILS_PK primary key (INFO_ID);
Table altered
SQL> create table PIS_INFO_GROUP_RELATION
  2  (
  3    GROUP_ID   VARCHAR2(32) not null,
  4    INFO_ID    VARCHAR2(32) not null,
  5    IS_MAIN    VARCHAR2(2),
  6    MERGE_TIME DATE,
  7    IS_APPEND  VARCHAR2(2)
  8  )
  9  ;
Table created
SQL> comment on table PIS_INFO_GROUP_RELATION
  2    is '情报组关联情报表';
Comment added
SQL> comment on column PIS_INFO_GROUP_RELATION.GROUP_ID
  2    is '组编号';
Comment added
SQL> comment on column PIS_INFO_GROUP_RELATION.INFO_ID
  2    is '情报编号';
Comment added
SQL> comment on column PIS_INFO_GROUP_RELATION.IS_MAIN
  2    is '是否主情报（0：否；1：是）';
Comment added
SQL> comment on column PIS_INFO_GROUP_RELATION.MERGE_TIME
  2    is '进组时间';
Comment added
SQL> comment on column PIS_INFO_GROUP_RELATION.IS_APPEND
  2    is '是否追加情报（0：否；1：是）';
Comment added
SQL> alter table PIS_INFO_GROUP_RELATION
  2    add constraint PIS_INFO_GROUP_RELATION_PK primary key (GROUP_ID, INFO_ID);
Table altered
SQL> create table PIS_INFO_MERGE
  2  (
  3    ID           VARCHAR2(32) not null,
  4    MERGER_NAME  VARCHAR2(200),
  5    INFO_TYPE    VARCHAR2(1000),
  6    MERGER_ORDER INTEGER not null,
  7    MERGER_CLASS VARCHAR2(200) not null,
  8    INFO_SOURCE  VARCHAR2(200)
  9  )
 10  ;
Table created
SQL> comment on table PIS_INFO_MERGE
  2    is '情报去重配置表';
Comment added
SQL> comment on column PIS_INFO_MERGE.ID
  2    is '规则编号';
Comment added
SQL> comment on column PIS_INFO_MERGE.MERGER_NAME
  2    is '规则名称';
Comment added
SQL> comment on column PIS_INFO_MERGE.INFO_TYPE
  2    is '适用情报类型';
Comment added
SQL> comment on column PIS_INFO_MERGE.MERGER_ORDER
  2    is '规则优先级';
Comment added
SQL> comment on column PIS_INFO_MERGE.MERGER_CLASS
  2    is '规则运算类';
Comment added
SQL> comment on column PIS_INFO_MERGE.INFO_SOURCE
  2    is '适用情报来源';
Comment added
SQL> alter table PIS_INFO_MERGE
  2    add constraint PIS_INFO_MERGE_PK primary key (ID);
Table altered
SQL> create table PIS_OPER_LOG
  2  (
  3    OPER_ID          VARCHAR2(32) not null,
  4    OPER_CODE        VARCHAR2(2) not null,
  5    OPER_TARGET_TYPE VARCHAR2(2) not null,
  6    OPER_TIME        DATE not null,
  7    OPER_ACCOUNT     VARCHAR2(10),
  8    OPER_DEPT        VARCHAR2(12),
  9    GROUP_ID         VARCHAR2(32),
 10    STATE_ID         VARCHAR2(32),
 11    OPER_CONTENT     VARCHAR2(1000),
 12    OPER_TARGET_ID   VARCHAR2(1000) not null,
 13    OPER_NUM         VARCHAR2(32)
 14  )
 15  ;
Table created
SQL> comment on table PIS_OPER_LOG
  2    is '处理日志表';
Comment added
SQL> comment on column PIS_OPER_LOG.OPER_ID
  2    is '操作日志编号';
Comment added
SQL> comment on column PIS_OPER_LOG.OPER_CODE
  2    is '操作编码  待确认1：
  3  10 确认 11补充信息
  4  待分拣2：
  5  20 分拣 21废弃 22追加派发 23移出组 24升级 25 设为主情报
  6  26 合并
  7  27 批量废弃  待签收3：
  8  30 签收 31撤回 32督办
  9  
 10  办理中4：
 11  40办结 41退回 42督办 43 添加协办 44 过程反馈 45 撤回
 12  
 13  已完结5：
 14  50重开 51追加派发';
Comment added
SQL> comment on column PIS_OPER_LOG.OPER_TARGET_TYPE
  2    is '操作对象类型（1：部门；2：情报；3：情报组）';
Comment added
SQL> comment on column PIS_OPER_LOG.OPER_TIME
  2    is '操作时间';
Comment added
SQL> comment on column PIS_OPER_LOG.OPER_ACCOUNT
  2    is '操作人';
Comment added
SQL> comment on column PIS_OPER_LOG.OPER_DEPT
  2    is '操作部门';
Comment added
SQL> comment on column PIS_OPER_LOG.GROUP_ID
  2    is '组编号';
Comment added
SQL> comment on column PIS_OPER_LOG.STATE_ID
  2    is '进度编号';
Comment added
SQL> comment on column PIS_OPER_LOG.OPER_CONTENT
  2    is '日志内容  待确认1：
  3  10确认
  4  11补充信息（补充内容）
  5  
  6  待分拣2：
  7  20分拣(工作要求）
  8  21废弃（废弃原因）
  9  22追加派发（工作要求）
 10  23移出组
 11  24升级 （升级原因）
 12  25 设为主情报
 13  26合并（合并的所有情报组编号）
 14  27 批量废弃
 15  待签收3：
 16   30 签收
 17   31撤回（撤回原因）
 18   32督办（督办要求）
 19  
 20  办理中4：
 21   40办结（办理结果）
 22   41退回（退回原因）
 23   42督办（督办要求）
 24   43添加协办（工作要求）
 25   44过程反馈（反馈内容）
 26   45撤回（撤回原因）
 27  已完结5：
 28   50重开（重开原因）
 29   51追加派发';
Comment added
SQL> comment on column PIS_OPER_LOG.OPER_TARGET_ID
  2    is '操作对象编号';
Comment added
SQL> comment on column PIS_OPER_LOG.OPER_NUM
  2    is '操作序号';
Comment added
SQL> alter table PIS_OPER_LOG
  2    add constraint PIS_OPER_LOG_PK primary key (OPER_ID);
Table altered
SQL> create table PIS_PARAM_CONFIG
  2  (
  3    PARAM_CODE    VARCHAR2(100),
  4    PARAM_VALUE   VARCHAR2(100),
  5    PARAM_DESC    VARCHAR2(500),
  6    PARAM_TYPE    VARCHAR2(2),
  7    PARAM_COMMENT VARCHAR2(500),
  8    PARAM_ID      VARCHAR2(100)
  9  )
 10  ;
Table created
SQL> comment on table PIS_PARAM_CONFIG
  2    is '参数配置表';
Comment added
SQL> comment on column PIS_PARAM_CONFIG.PARAM_CODE
  2    is '参数代码';
Comment added
SQL> comment on column PIS_PARAM_CONFIG.PARAM_VALUE
  2    is '参数值';
Comment added
SQL> comment on column PIS_PARAM_CONFIG.PARAM_DESC
  2    is '参数描述';
Comment added
SQL> comment on column PIS_PARAM_CONFIG.PARAM_TYPE
  2    is '参数类型';
Comment added
SQL> comment on column PIS_PARAM_CONFIG.PARAM_COMMENT
  2    is '备注';
Comment added
SQL> comment on column PIS_PARAM_CONFIG.PARAM_ID
  2    is 'ID';
Comment added
SQL> alter table PIS_PARAM_CONFIG
  2    add constraint PIS_PARAM_CONFIG_PK primary key (PARAM_CODE, PARAM_VALUE, PARAM_ID);
Table altered
SQL> create table PIS_USER_SCREEN_CONFIG
  2  (
  3    USERID       VARCHAR2(10) not null,
  4    INFO_FEATURE VARCHAR2(500) not null,
  5    INFO_TYPE    VARCHAR2(500) not null,
  6    INFO_SOURCE  VARCHAR2(500) not null,
  7    INFO_SUBTYPE VARCHAR2(500),
  8    UPDATE_TIME  DATE not null
  9  )
 10  ;
Table created
SQL> comment on table PIS_USER_SCREEN_CONFIG
  2    is '用户情报筛选配置表';
Comment added
SQL> comment on column PIS_USER_SCREEN_CONFIG.USERID
  2    is '用户编号';
Comment added
SQL> comment on column PIS_USER_SCREEN_CONFIG.INFO_FEATURE
  2    is '情报性质';
Comment added
SQL> comment on column PIS_USER_SCREEN_CONFIG.INFO_TYPE
  2    is '情报类型';
Comment added
SQL> comment on column PIS_USER_SCREEN_CONFIG.INFO_SOURCE
  2    is '情报来源';
Comment added
SQL> comment on column PIS_USER_SCREEN_CONFIG.INFO_SUBTYPE
  2    is '情报子类型';
Comment added
SQL> comment on column PIS_USER_SCREEN_CONFIG.UPDATE_TIME
  2    is '更新时间';
Comment added
SQL> alter table PIS_USER_SCREEN_CONFIG
  2    add constraint PIS_USER_SCREEN_CONFIG_PK primary key (USERID);
Table altered
SQL> create or replace view pis_group_ck_view as
  2  select l.group_id,count(1)count from pis_oper_log l where l.oper_code=50 group by l.group_id;
View created
SQL> create or replace view pis_group_cq_view as
  2  select g.group_id,g.dispatch_time start_time,g.group_stage from pis_group g
  3  where g.group_stage='03'
  4  and g.dispatch_time+nvl(g.sign_limit,0)/(24*60)<sysdate
  5  union all
  6  select g.group_id,g.sign_time start_time,g.group_stage from pis_group g
  7  where g.group_stage='04'
  8  and g.sign_time+nvl(g.close_limit,0)/(24*60)<sysdate;
View created
SQL> create or replace view pis_group_db_view as
  2  select d.group_id,count(1)count from pis_info_depts d where d.is_supervise='1' group by d.group_id;
View created
SQL> create or replace view pis_group_sj_view as
  2  select l.group_id,count(1)count from pis_oper_log l where l.oper_code=24 group by l.group_id;
View created
SQL> create or replace view pis_group_view as
  2  select GROUP_ID,
  3  case when group_level is not null then group_level else (select min(i1.info_level) from pis_info_group_relation r1,pis_info_base i1 where r1.info_id=i1.info_id and r1.group_id=group_id) end group_level,
  4  CLOSE_LIMIT,
  5  DISPATCH_TIME,SIGN_TIME,CLOSE_TIME,GROUP_STAGE,SORTER_USERID,SIGN_LIMIT,DISPATCH_CLOSE_TIME from pis_group;
View created
SQL> alter table enum_type add enumdesc VARCHAR2(255);
alter table enum_type add enumdesc VARCHAR2(255)
ORA-00942: 表或视图不存在
SQL> commit;
Commit complete
SQL> --↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑HiATMP-DB-PIS-DDL.6.0.0.0.A1.sql End-------------------------
SQL> --↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓HiATMP-DB-PIS-DDL.6.0.0.0.A2.sql Start-----------------------
SQL> drop table PIS_ACCIDENT_CARS;
Table dropped
SQL> create table PIS_ACCIDENT_CARS
  2  (
  3    ID       VARCHAR2(32) not null,
  4    CAR_NO   VARCHAR2(10) not null,
  5    CAR_TYPE VARCHAR2(2) not null,
  6    INFO_ID  VARCHAR2(32)
  7  )
  8  ;
Table created
SQL> comment on table PIS_ACCIDENT_CARS
  2    is '事件车辆关联表';
Comment added
SQL> comment on column PIS_ACCIDENT_CARS.ID
  2    is '编号';
Comment added
SQL> comment on column PIS_ACCIDENT_CARS.CAR_NO
  2    is '号牌号码';
Comment added
SQL> comment on column PIS_ACCIDENT_CARS.CAR_TYPE
  2    is '号牌类型';
Comment added
SQL> comment on column PIS_ACCIDENT_CARS.INFO_ID
  2    is '情报编号';
Comment added
SQL> alter table PIS_ACCIDENT_CARS
  2    add constraint PIS_ACCIDENT_CARS_PK primary key (ID);
Table altered
SQL> drop table PIS_ATTACHS;
Table dropped
SQL> create table PIS_ATTACHS
  2  (
  3    ID             VARCHAR2(32) not null,
  4    ATTACH_URL     VARCHAR2(200) not null,
  5    ATTACH_TYPE    VARCHAR2(2) not null,
  6    UPLOAD_TIME    DATE not null,
  7    UPLOAD_ACCOUNT NVARCHAR2(50),
  8    INFO_ID        VARCHAR2(32),
  9    OPER_ID        VARCHAR2(32),
 10    ATTACH_NAME    VARCHAR2(100)
 11  )
 12  ;
Table created
SQL> comment on table PIS_ATTACHS
  2    is '附件表';
Comment added
SQL> comment on column PIS_ATTACHS.ID
  2    is '编号';
Comment added
SQL> comment on column PIS_ATTACHS.ATTACH_URL
  2    is '附件地址';
Comment added
SQL> comment on column PIS_ATTACHS.ATTACH_TYPE
  2    is '附件类型';
Comment added
SQL> comment on column PIS_ATTACHS.UPLOAD_TIME
  2    is '上传时间';
Comment added
SQL> comment on column PIS_ATTACHS.UPLOAD_ACCOUNT
  2    is '上传人';
Comment added
SQL> comment on column PIS_ATTACHS.INFO_ID
  2    is '情报编号';
Comment added
SQL> comment on column PIS_ATTACHS.OPER_ID
  2    is '操作日志编号';
Comment added
SQL> comment on column PIS_ATTACHS.ATTACH_NAME
  2    is '附件名称';
Comment added
SQL> alter table PIS_ATTACHS
  2    add constraint PIS_ATTACHS_PK primary key (ID);
Table altered
SQL> drop table PIS_FEATURE_TYPE_CONFIG;
Table dropped
SQL> create table PIS_FEATURE_TYPE_CONFIG
  2  (
  3    ID           VARCHAR2(32) not null,
  4    INFO_TYPE    VARCHAR2(2) not null,
  5    TYPE_NAME    VARCHAR2(100) not null,
  6    SUBTYPE      VARCHAR2(10) not null,
  7    SUBTYPE_NAME VARCHAR2(100) not null,
  8    FEATURE      VARCHAR2(2) not null,
  9    CLOSE_LIMIT  INTEGER not null
 10  )
 11  ;
Table created
SQL> comment on table PIS_FEATURE_TYPE_CONFIG
  2    is '类型及类型配置表';
Comment added
SQL> comment on column PIS_FEATURE_TYPE_CONFIG.ID
  2    is '配置编号';
Comment added
SQL> comment on column PIS_FEATURE_TYPE_CONFIG.INFO_TYPE
  2    is '情报类型编号';
Comment added
SQL> comment on column PIS_FEATURE_TYPE_CONFIG.TYPE_NAME
  2    is '情报类型名称';
Comment added
SQL> comment on column PIS_FEATURE_TYPE_CONFIG.SUBTYPE
  2    is '子类型编号';
Comment added
SQL> comment on column PIS_FEATURE_TYPE_CONFIG.SUBTYPE_NAME
  2    is '子类型名称';
Comment added
SQL> comment on column PIS_FEATURE_TYPE_CONFIG.FEATURE
  2    is '情报性质（0：快、1：慢）';
Comment added
SQL> comment on column PIS_FEATURE_TYPE_CONFIG.CLOSE_LIMIT
  2    is '默认办理时长（分钟）';
Comment added
SQL> alter table PIS_FEATURE_TYPE_CONFIG
  2    add constraint PIS_FEATURE_TYPE_CONFIG_PK primary key (ID);
Table altered
SQL> drop table PIS_FIELD_INDEX;
Table dropped
SQL> create table PIS_FIELD_INDEX
  2  (
  3    INDEX_ID   VARCHAR2(32) not null,
  4    FIELD_NAME VARCHAR2(50),
  5    FIELD_VAL  VARCHAR2(200),
  6    INFO_IDS   CLOB
  7  )
  8  ;
Table created
SQL> comment on table PIS_FIELD_INDEX
  2    is '情报内容字段索引表';
Comment added
SQL> comment on column PIS_FIELD_INDEX.INDEX_ID
  2    is '索引编号';
Comment added
SQL> comment on column PIS_FIELD_INDEX.FIELD_NAME
  2    is '字段名称';
Comment added
SQL> comment on column PIS_FIELD_INDEX.FIELD_VAL
  2    is '字段值';
Comment added
SQL> comment on column PIS_FIELD_INDEX.INFO_IDS
  2    is '关联情报';
Comment added
SQL> alter table PIS_FIELD_INDEX
  2    add constraint PIS_FIELD_INDEX_PK primary key (INDEX_ID);
Table altered
SQL> drop table PIS_FIELD_SCHEMA;
Table dropped
SQL> create table PIS_FIELD_SCHEMA
  2  (
  3    FIELD_ID          VARCHAR2(32) not null,
  4    FIELD_NAME        VARCHAR2(50) not null,
  5    FIELD_DESC        VARCHAR2(100),
  6    FIELD_TYPE        VARCHAR2(2) default 1,
  7    FIELD_INFO_TYPE   VARCHAR2(2) not null,
  8    NEED_INDEX        VARCHAR2(2) default 0,
  9    FIELD_INFO_SOURCE VARCHAR2(2) not null
 10  )
 11  ;
Table created
SQL> comment on table PIS_FIELD_SCHEMA
  2    is '情报内容字段释义表';
Comment added
SQL> comment on column PIS_FIELD_SCHEMA.FIELD_ID
  2    is '字段编号';
Comment added
SQL> comment on column PIS_FIELD_SCHEMA.FIELD_NAME
  2    is '字段名称';
Comment added
SQL> comment on column PIS_FIELD_SCHEMA.FIELD_DESC
  2    is '字段中文描述';
Comment added
SQL> comment on column PIS_FIELD_SCHEMA.FIELD_TYPE
  2    is '字段类型(0:数字,1:字符串)';
Comment added
SQL> comment on column PIS_FIELD_SCHEMA.FIELD_INFO_TYPE
  2    is '所属情报类型(大类)';
Comment added
SQL> comment on column PIS_FIELD_SCHEMA.NEED_INDEX
  2    is '是否需要索引(0:不需要,1:需要)';
Comment added
SQL> comment on column PIS_FIELD_SCHEMA.FIELD_INFO_SOURCE
  2    is '所属情报来源';
Comment added
SQL> alter table PIS_FIELD_SCHEMA
  2    add constraint PIS_FIELD_SCHEMA_PK primary key (FIELD_ID);
Table altered
SQL> drop table PIS_GROUP;
Table dropped
SQL> create table PIS_GROUP
  2  (
  3    GROUP_ID            VARCHAR2(32) not null,
  4    GROUP_LEVEL         VARCHAR2(2),
  5    CLOSE_LIMIT         INTEGER,
  6    DISPATCH_TIME       DATE,
  7    SIGN_TIME           DATE,
  8    CLOSE_TIME          DATE,
  9    GROUP_STAGE         VARCHAR2(2) not null,
 10    SORTER_USERID       VARCHAR2(10),
 11    SIGN_LIMIT          INTEGER,
 12    DISPATCH_CLOSE_TIME DATE
 13  )
 14  ;
Table created
SQL> comment on table PIS_GROUP
  2    is '情报组表';
Comment added
SQL> comment on column PIS_GROUP.GROUP_ID
  2    is '情报组编号';
Comment added
SQL> comment on column PIS_GROUP.GROUP_LEVEL
  2    is '情报组等级';
Comment added
SQL> comment on column PIS_GROUP.CLOSE_LIMIT
  2    is '办理时限（分钟）';
Comment added
SQL> comment on column PIS_GROUP.DISPATCH_TIME
  2    is '分拣时间';
Comment added
SQL> comment on column PIS_GROUP.SIGN_TIME
  2    is '签收时间';
Comment added
SQL> comment on column PIS_GROUP.CLOSE_TIME
  2    is '办结时间';
Comment added
SQL> comment on column PIS_GROUP.GROUP_STAGE
  2    is '当前阶段（情报子系统参数配置表中INFO_STATUS）';
Comment added
SQL> comment on column PIS_GROUP.SORTER_USERID
  2    is '分拣员编号（userid）';
Comment added
SQL> comment on column PIS_GROUP.SIGN_LIMIT
  2    is '办理时限（分钟，从SIGN_TIME获取）';
Comment added
SQL> comment on column PIS_GROUP.DISPATCH_CLOSE_TIME
  2    is '分拣截止时间（情报接入、退回时会更新）';
Comment added
SQL> alter table PIS_GROUP
  2    add constraint BPIS_GROUP_PK primary key (GROUP_ID);
Table altered
SQL> drop table PIS_GROUP_MARKS;
Table dropped
SQL> create table PIS_GROUP_MARKS
  2  (
  3    TAG_ID    VARCHAR2(32),
  4    USERID    VARCHAR2(10),
  5    GROUP_ID  VARCHAR2(32),
  6    MARK_TIME DATE
  7  )
  8  ;
Table created
SQL> comment on table PIS_GROUP_MARKS
  2    is '人员标记情报表';
Comment added
SQL> comment on column PIS_GROUP_MARKS.TAG_ID
  2    is '标记编号';
Comment added
SQL> comment on column PIS_GROUP_MARKS.USERID
  2    is '人员编号（userid）';
Comment added
SQL> comment on column PIS_GROUP_MARKS.GROUP_ID
  2    is '组编号';
Comment added
SQL> comment on column PIS_GROUP_MARKS.MARK_TIME
  2    is '标记时间';
Comment added
SQL> drop table PIS_GROUP_STAGES;
Table dropped
SQL> create table PIS_GROUP_STAGES
  2  (
  3    STATE_ID     VARCHAR2(32) not null,
  4    START_TIME   DATE,
  5    END_TIME     DATE,
  6    STAGE_STATUS VARCHAR2(2),
  7    LAST_STATUS  VARCHAR2(2),
  8    GROUP_ID     VARCHAR2(32) not null
  9  )
 10  ;
Table created
SQL> comment on table PIS_GROUP_STAGES
  2    is '情报组进度变化表';
Comment added
SQL> comment on column PIS_GROUP_STAGES.STATE_ID
  2    is '进度编号';
Comment added
SQL> comment on column PIS_GROUP_STAGES.START_TIME
  2    is '开始时间';
Comment added
SQL> comment on column PIS_GROUP_STAGES.END_TIME
  2    is '结束时间';
Comment added
SQL> comment on column PIS_GROUP_STAGES.STAGE_STATUS
  2    is '当前状态（情报子系统参数配置表中INFO_STATUS）';
Comment added
SQL> comment on column PIS_GROUP_STAGES.LAST_STATUS
  2    is '上一状态（情报子系统参数配置表中INFO_STATUS）';
Comment added
SQL> comment on column PIS_GROUP_STAGES.GROUP_ID
  2    is '组编号';
Comment added
SQL> alter table PIS_GROUP_STAGES
  2    add constraint PIS_GROUP_STAGES_PK primary key (STATE_ID);
Table altered
SQL> drop table PIS_INFO_BASE;
Table dropped
SQL> create table PIS_INFO_BASE
  2  (
  3    INFO_ID         VARCHAR2(32) not null,
  4    INFO_CHANNEL    VARCHAR2(2) not null,
  5    INFO_SOURCE     VARCHAR2(2) not null,
  6    INFO_FEATURE    VARCHAR2(2) not null,
  7    INFO_LEVEL      VARCHAR2(2) not null,
  8    INFO_TYPE       VARCHAR2(2) not null,
  9    INFO_SUBTYPE    VARCHAR2(10) not null,
 10    INFO_TIME       DATE not null,
 11    CREATE_TIME     DATE not null,
 12    INFO_STAGE      VARCHAR2(2) not null,
 13    DISPATCH_TIME   DATE,
 14    SIGN_TIME       DATE,
 15    THIRDSYSCODE    VARCHAR2(32),
 16    SIMHASHCODE     VARCHAR2(64),
 17    INFO_COORDINATE VARCHAR2(500),
 18    INFO_ADDRESS    VARCHAR2(500),
 19    CONFIRM_TIME    DATE,
 20    CONFIRM_USERID  VARCHAR2(10),
 21    CLOSE_TIME      DATE,
 22    INFO_DEPTID     VARCHAR2(12),
 23    INFO_DESC       CLOB,
 24    INFO_CONTENT    CLOB,
 25    INFO_TOPIC      CLOB
 26  )
 27  ;
Table created
SQL> comment on table PIS_INFO_BASE
  2    is '情报信息表';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_ID
  2    is '情报编号';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_CHANNEL
  2    is '接入渠道';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_SOURCE
  2    is '情报来源';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_FEATURE
  2    is '情报性质(0快情报, 1慢情报)';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_LEVEL
  2    is '情报等级';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_TYPE
  2    is '情报类型';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_SUBTYPE
  2    is '情报子类型';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_TIME
  2    is '发生时间';
Comment added
SQL> comment on column PIS_INFO_BASE.CREATE_TIME
  2    is '录入时间';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_STAGE
  2    is '当前阶段（情报子系统参数配置表中INFO_STATUS）';
Comment added
SQL> comment on column PIS_INFO_BASE.DISPATCH_TIME
  2    is '分拣时间';
Comment added
SQL> comment on column PIS_INFO_BASE.SIGN_TIME
  2    is '签收时间';
Comment added
SQL> comment on column PIS_INFO_BASE.THIRDSYSCODE
  2    is '第三方编号';
Comment added
SQL> comment on column PIS_INFO_BASE.SIMHASHCODE
  2    is '情报hash签名，用于重复情报判定';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_COORDINATE
  2    is '事发地点坐标';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_ADDRESS
  2    is '事发地址';
Comment added
SQL> comment on column PIS_INFO_BASE.CONFIRM_TIME
  2    is '确认时间';
Comment added
SQL> comment on column PIS_INFO_BASE.CONFIRM_USERID
  2    is '确认人编号';
Comment added
SQL> comment on column PIS_INFO_BASE.CLOSE_TIME
  2    is '办结时间';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_DEPTID
  2    is '所属部门';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_DESC
  2    is '情报描述';
Comment added
SQL> alter table PIS_INFO_BASE
  2    add constraint PIS_INFO_BASE_PK primary key (INFO_ID);
Table altered
SQL> drop table PIS_INFO_DEPTS;
Table dropped
SQL> create table PIS_INFO_DEPTS
  2  (
  3    DEPTID        VARCHAR2(12) not null,
  4    GROUP_ID      VARCHAR2(32) not null,
  5    IS_LEADER     VARCHAR2(2),
  6    FOLLOWER_TYPE VARCHAR2(2),
  7    ADD_TIME      DATE,
  8    ADD_DEPT      VARCHAR2(12),
  9    WORK_REQUIRE  NVARCHAR2(2000),
 10    IS_SUPERVISE  VARCHAR2(2)
 11  )
 12  ;
Table created
SQL> comment on table PIS_INFO_DEPTS
  2    is '情报组处理部门表';
Comment added
SQL> comment on column PIS_INFO_DEPTS.DEPTID
  2    is '部门编号';
Comment added
SQL> comment on column PIS_INFO_DEPTS.GROUP_ID
  2    is '组编号';
Comment added
SQL> comment on column PIS_INFO_DEPTS.IS_LEADER
  2    is '是否主办（0：否；1：是）';
Comment added
SQL> comment on column PIS_INFO_DEPTS.FOLLOWER_TYPE
  2    is '协办类型（暂不启用）';
Comment added
SQL> comment on column PIS_INFO_DEPTS.ADD_TIME
  2    is '添加时间';
Comment added
SQL> comment on column PIS_INFO_DEPTS.ADD_DEPT
  2    is '添加部门编号';
Comment added
SQL> comment on column PIS_INFO_DEPTS.WORK_REQUIRE
  2    is '工作要求';
Comment added
SQL> comment on column PIS_INFO_DEPTS.IS_SUPERVISE
  2    is '是否督办（0：否；1：是）';
Comment added
SQL> alter table PIS_INFO_DEPTS
  2    add constraint PIS_INFO_DEPTS_PK primary key (DEPTID, GROUP_ID);
Table altered
SQL> drop table PIS_INFO_DEPT_PROCESS;
Table dropped
SQL> create table PIS_INFO_DEPT_PROCESS
  2  (
  3    DEPTID          VARCHAR2(12) not null,
  4    GROUP_ID        VARCHAR2(32) not null,
  5    INFO_DEPT_STAGE VARCHAR2(2) not null,
  6    SIGN_TIME       DATE,
  7    CLOSE_TIME      DATE
  8  )
  9  ;
Table created
SQL> comment on table PIS_INFO_DEPT_PROCESS
  2    is '部门进度信息表';
Comment added
SQL> comment on column PIS_INFO_DEPT_PROCESS.DEPTID
  2    is '部门编号';
Comment added
SQL> comment on column PIS_INFO_DEPT_PROCESS.GROUP_ID
  2    is '组编号';
Comment added
SQL> comment on column PIS_INFO_DEPT_PROCESS.INFO_DEPT_STAGE
  2    is '当前阶段（参考情报子系统参数配置中的INFO_STATUS）';
Comment added
SQL> comment on column PIS_INFO_DEPT_PROCESS.SIGN_TIME
  2    is '签收时间';
Comment added
SQL> comment on column PIS_INFO_DEPT_PROCESS.CLOSE_TIME
  2    is '办结时间';
Comment added
SQL> alter table PIS_INFO_DEPT_PROCESS
  2    add constraint PIS_INFO_DEPT_PROCESS_PK primary key (DEPTID, GROUP_ID);
Table altered
SQL> drop table PIS_INFO_DETAILS;
Table dropped
SQL> create table PIS_INFO_DETAILS
  2  (
  3    INFO_ID             VARCHAR2(32) not null,
  4    AREAID              VARCHAR2(6) not null,
  5    INFO_LOCATION       VARCHAR2(200) not null,
  6    LOCATION_COORDINATE VARCHAR2(200) not null,
  7    REPORTER_NAME       VARCHAR2(20),
  8    REPORTER_SEX        VARCHAR2(2),
  9    REPORTER_PHONE      VARCHAR2(20),
 10    WOUNDED_NUM         INTEGER,
 11    DEATH_NUM           INTEGER,
 12    ACCIDENT_SHAPE      VARCHAR2(20),
 13    ENTRUST_DEPT        VARCHAR2(20),
 14    ENTRUST_PERSON      VARCHAR2(20),
 15    ENTRUST_PHONE       VARCHAR2(20)
 16  )
 17  ;
Table created
SQL> comment on table PIS_INFO_DETAILS
  2    is '情报附属信息表';
Comment added
SQL> comment on column PIS_INFO_DETAILS.INFO_ID
  2    is '情报编号';
Comment added
SQL> comment on column PIS_INFO_DETAILS.AREAID
  2    is '所属辖区编号';
Comment added
SQL> comment on column PIS_INFO_DETAILS.INFO_LOCATION
  2    is '事发地点名称';
Comment added
SQL> comment on column PIS_INFO_DETAILS.LOCATION_COORDINATE
  2    is '事发地点坐标';
Comment added
SQL> comment on column PIS_INFO_DETAILS.REPORTER_NAME
  2    is '上报人姓名';
Comment added
SQL> comment on column PIS_INFO_DETAILS.REPORTER_SEX
  2    is '上报人性别';
Comment added
SQL> comment on column PIS_INFO_DETAILS.REPORTER_PHONE
  2    is '上报人电话';
Comment added
SQL> comment on column PIS_INFO_DETAILS.WOUNDED_NUM
  2    is '受伤人数';
Comment added
SQL> comment on column PIS_INFO_DETAILS.DEATH_NUM
  2    is '死亡人数';
Comment added
SQL> comment on column PIS_INFO_DETAILS.ACCIDENT_SHAPE
  2    is '事故形态';
Comment added
SQL> comment on column PIS_INFO_DETAILS.ENTRUST_DEPT
  2    is '交办单位';
Comment added
SQL> comment on column PIS_INFO_DETAILS.ENTRUST_PERSON
  2    is '交办人姓名';
Comment added
SQL> comment on column PIS_INFO_DETAILS.ENTRUST_PHONE
  2    is '交办人电话';
Comment added
SQL> alter table PIS_INFO_DETAILS
  2    add constraint PIS_INFO_DETAILS_PK primary key (INFO_ID);
Table altered
SQL> drop table PIS_INFO_GROUP_RELATION;
Table dropped
SQL> create table PIS_INFO_GROUP_RELATION
  2  (
  3    GROUP_ID   VARCHAR2(32) not null,
  4    INFO_ID    VARCHAR2(32) not null,
  5    IS_MAIN    VARCHAR2(2),
  6    MERGE_TIME DATE,
  7    IS_APPEND  VARCHAR2(2)
  8  )
  9  ;
Table created
SQL> comment on table PIS_INFO_GROUP_RELATION
  2    is '情报组关联情报表';
Comment added
SQL> comment on column PIS_INFO_GROUP_RELATION.GROUP_ID
  2    is '组编号';
Comment added
SQL> comment on column PIS_INFO_GROUP_RELATION.INFO_ID
  2    is '情报编号';
Comment added
SQL> comment on column PIS_INFO_GROUP_RELATION.IS_MAIN
  2    is '是否主情报（0：否；1：是）';
Comment added
SQL> comment on column PIS_INFO_GROUP_RELATION.MERGE_TIME
  2    is '进组时间';
Comment added
SQL> comment on column PIS_INFO_GROUP_RELATION.IS_APPEND
  2    is '是否追加情报（0：否；1：是）';
Comment added
SQL> alter table PIS_INFO_GROUP_RELATION
  2    add constraint PIS_INFO_GROUP_RELATION_PK primary key (GROUP_ID, INFO_ID);
Table altered
SQL> drop table PIS_INFO_MERGE;
Table dropped
SQL> create table PIS_INFO_MERGE
  2  (
  3    ID           VARCHAR2(32) not null,
  4    MERGER_NAME  VARCHAR2(200),
  5    INFO_TYPE    VARCHAR2(1000),
  6    MERGER_ORDER INTEGER not null,
  7    MERGER_CLASS VARCHAR2(200) not null,
  8    INFO_SOURCE  VARCHAR2(200)
  9  )
 10  ;
Table created
SQL> comment on table PIS_INFO_MERGE
  2    is '情报去重配置表';
Comment added
SQL> comment on column PIS_INFO_MERGE.ID
  2    is '规则编号';
Comment added
SQL> comment on column PIS_INFO_MERGE.MERGER_NAME
  2    is '规则名称';
Comment added
SQL> comment on column PIS_INFO_MERGE.INFO_TYPE
  2    is '适用情报类型';
Comment added
SQL> comment on column PIS_INFO_MERGE.MERGER_ORDER
  2    is '规则优先级，数值越大优先级越高';
Comment added
SQL> comment on column PIS_INFO_MERGE.MERGER_CLASS
  2    is '规则运算类';
Comment added
SQL> comment on column PIS_INFO_MERGE.INFO_SOURCE
  2    is '适用情报来源';
Comment added
SQL> alter table PIS_INFO_MERGE
  2    add constraint PIS_INFO_MERGE_PK primary key (ID);
Table altered
SQL> create table PIS_NOCONFIRM_CONFIG
  2  (
  3    ID           VARCHAR2(32) not null,
  4    INFO_SOURCE  VARCHAR2(10),
  5    INFO_TYPE    VARCHAR2(10),
  6    INFO_SUBTYPE VARCHAR2(10),
  7    CREATRE_USER VARCHAR2(20) not null
  8  )
  9  ;
Table created
SQL> comment on table PIS_NOCONFIRM_CONFIG
  2    is '不需确认情报配置表';
Comment added
SQL> comment on column PIS_NOCONFIRM_CONFIG.ID
  2    is '编号';
Comment added
SQL> comment on column PIS_NOCONFIRM_CONFIG.INFO_SOURCE
  2    is '情报来源';
Comment added
SQL> comment on column PIS_NOCONFIRM_CONFIG.INFO_TYPE
  2    is '情报类型';
Comment added
SQL> comment on column PIS_NOCONFIRM_CONFIG.INFO_SUBTYPE
  2    is '情报子类型';
Comment added
SQL> comment on column PIS_NOCONFIRM_CONFIG.CREATRE_USER
  2    is '创建人';
Comment added
SQL> alter table PIS_NOCONFIRM_CONFIG
  2    add constraint PIS_NOCONFIRM_CONFIG_PK primary key (ID);
Table altered
SQL> drop table PIS_OPER_LOG;
Table dropped
SQL> create table PIS_OPER_LOG
  2  (
  3    OPER_ID          VARCHAR2(32) not null,
  4    OPER_CODE        VARCHAR2(2) not null,
  5    OPER_TARGET_TYPE VARCHAR2(2) not null,
  6    OPER_TIME        DATE not null,
  7    OPER_ACCOUNT     VARCHAR2(10),
  8    OPER_DEPT        VARCHAR2(12),
  9    GROUP_ID         VARCHAR2(32),
 10    STATE_ID         VARCHAR2(32),
 11    OPER_TARGET_ID   VARCHAR2(1000) not null,
 12    OPER_NUM         VARCHAR2(32),
 13    OPER_CONTENT     CLOB
 14  )
 15  ;
Table created
SQL> comment on table PIS_OPER_LOG
  2    is '处理日志表';
Comment added
SQL> comment on column PIS_OPER_LOG.OPER_ID
  2    is '操作日志编号';
Comment added
SQL> comment on column PIS_OPER_LOG.OPER_CODE
  2    is '操作编码  待确认1：
  3  10 确认 11补充信息
  4  待分拣2：
  5  20 分拣 21废弃 22追加派发 23移出组 24升级 25 设为主情报
  6  26 合并
  7  27 批量废弃  待签收3：
  8  30 签收 31撤回 32督办
  9  
 10  办理中4：
 11  40办结 41退回 42督办 43 添加协办 44 过程反馈 45 撤回
 12  
 13  已完结5：
 14  50重开 51追加派发';
Comment added
SQL> comment on column PIS_OPER_LOG.OPER_TARGET_TYPE
  2    is '操作对象类型（1：部门；2：情报；3：情报组）';
Comment added
SQL> comment on column PIS_OPER_LOG.OPER_TIME
  2    is '操作时间';
Comment added
SQL> comment on column PIS_OPER_LOG.OPER_ACCOUNT
  2    is '操作人';
Comment added
SQL> comment on column PIS_OPER_LOG.OPER_DEPT
  2    is '操作部门';
Comment added
SQL> comment on column PIS_OPER_LOG.GROUP_ID
  2    is '组编号';
Comment added
SQL> comment on column PIS_OPER_LOG.STATE_ID
  2    is '进度编号';
Comment added
SQL> comment on column PIS_OPER_LOG.OPER_TARGET_ID
  2    is '操作对象编号';
Comment added
SQL> comment on column PIS_OPER_LOG.OPER_NUM
  2    is '操作序号';
Comment added
SQL> comment on column PIS_OPER_LOG.OPER_CONTENT
  2    is '日志内容  待确认1：
  3  10确认
  4  11补充信息（补充内容）
  5  
  6  待分拣2：
  7  20分拣(工作要求）
  8  21废弃（废弃原因）
  9  22追加派发（工作要求）
 10  23移出组
 11  24升级 （升级原因）
 12  25 设为主情报
 13  26合并（合并的所有情报组编号）
 14  27 批量废弃
 15  待签收3：
 16   30 签收
 17   31撤回（撤回原因）
 18   32督办（督办要求）
 19  
 20  办理中4：
 21   40办结（办理结果）
 22   41退回（退回原因）
 23   42督办（督办要求）
 24   43添加协办（工作要求）
 25   44过程反馈（反馈内容）
 26   45撤回（撤回原因）
 27  已完结5：
 28   50重开（重开原因）
 29   51追加派发';
Comment added
SQL> alter table PIS_OPER_LOG
  2    add constraint PIS_OPER_LOG_PK primary key (OPER_ID);
Table altered
SQL> drop table PIS_PARAM_CONFIG;
Table dropped
SQL> create table PIS_PARAM_CONFIG
  2  (
  3    PARAM_CODE    VARCHAR2(100) not null,
  4    PARAM_VALUE   VARCHAR2(100) not null,
  5    PARAM_DESC    VARCHAR2(500),
  6    PARAM_TYPE    VARCHAR2(2),
  7    PARAM_COMMENT VARCHAR2(500),
  8    PARAM_ID      VARCHAR2(100) not null
  9  )
 10  ;
Table created
SQL> comment on table PIS_PARAM_CONFIG
  2    is '参数配置表';
Comment added
SQL> comment on column PIS_PARAM_CONFIG.PARAM_CODE
  2    is '参数代码';
Comment added
SQL> comment on column PIS_PARAM_CONFIG.PARAM_VALUE
  2    is '参数值';
Comment added
SQL> comment on column PIS_PARAM_CONFIG.PARAM_DESC
  2    is '参数描述';
Comment added
SQL> comment on column PIS_PARAM_CONFIG.PARAM_TYPE
  2    is '参数类型';
Comment added
SQL> comment on column PIS_PARAM_CONFIG.PARAM_COMMENT
  2    is '备注';
Comment added
SQL> comment on column PIS_PARAM_CONFIG.PARAM_ID
  2    is 'ID';
Comment added
SQL> alter table PIS_PARAM_CONFIG
  2    add constraint PIS_PARAM_CONFIG_PK primary key (PARAM_CODE, PARAM_VALUE, PARAM_ID);
Table altered
SQL> drop table PIS_USER_SCREEN_CONFIG;
Table dropped
SQL> create table PIS_USER_SCREEN_CONFIG
  2  (
  3    USERID       VARCHAR2(10) not null,
  4    INFO_FEATURE VARCHAR2(500) not null,
  5    INFO_TYPE    VARCHAR2(500) not null,
  6    INFO_SOURCE  VARCHAR2(500) not null,
  7    INFO_SUBTYPE VARCHAR2(500),
  8    UPDATE_TIME  DATE not null
  9  )
 10  ;
Table created
SQL> comment on table PIS_USER_SCREEN_CONFIG
  2    is '用户情报筛选配置表';
Comment added
SQL> comment on column PIS_USER_SCREEN_CONFIG.USERID
  2    is '用户编号';
Comment added
SQL> comment on column PIS_USER_SCREEN_CONFIG.INFO_FEATURE
  2    is '情报性质';
Comment added
SQL> comment on column PIS_USER_SCREEN_CONFIG.INFO_TYPE
  2    is '情报类型';
Comment added
SQL> comment on column PIS_USER_SCREEN_CONFIG.INFO_SOURCE
  2    is '情报来源';
Comment added
SQL> comment on column PIS_USER_SCREEN_CONFIG.INFO_SUBTYPE
  2    is '情报子类型';
Comment added
SQL> comment on column PIS_USER_SCREEN_CONFIG.UPDATE_TIME
  2    is '更新时间';
Comment added
SQL> alter table PIS_USER_SCREEN_CONFIG
  2    add constraint PIS_USER_SCREEN_CONFIG_PK primary key (USERID);
Table altered
SQL> --drop table POI_POINT;
SQL> create table POI_POINT
  2  (
  3    PID       VARCHAR2(35),
  4    POI_ID    VARCHAR2(13),
  5    NAME      VARCHAR2(150),
  6    PYNAME    VARCHAR2(150),
  7    DISPLAY_X VARCHAR2(20),
  8    DISPLAY_Y VARCHAR2(20),
  9    TYPE      VARCHAR2(4)
 10  )
 11  ;
Table created
SQL> drop table BURST_EVENT;
drop table BURST_EVENT
ORA-00942: 表或视图不存在
SQL> create table BURST_EVENT
  2  (
  3    eventid           VARCHAR2(32),
  4    eventname         NVARCHAR2(200),
  5    detectorid        NVARCHAR2(18),
  6    location          NVARCHAR2(64),
  7    locationid        NVARCHAR2(16),
  8    eventtime         DATE,
  9    eventtypeid       NVARCHAR2(4),
 10    imageurl          NVARCHAR2(128),
 11    status            NUMBER default 0,
 12    processtime       DATE,
 13    processperson     NVARCHAR2(20),
 14    processnotes      NVARCHAR2(256),
 15    isevent           VARCHAR2(2) default 0,
 16    auditor           VARCHAR2(20),
 17    audittime         DATE,
 18    eventsource       VARCHAR2(4),
 19    datauploadtime    DATE,
 20    datasavetime      DATE default sysdate,
 21    eventlevel        NVARCHAR2(1) default '1',
 22    departmentid      NVARCHAR2(20),
 23    areaid            VARCHAR2(8),
 24    endtime           DATE,
 25    roadid            VARCHAR2(20),
 26    roadname          NVARCHAR2(256),
 27    factory           NVARCHAR2(4),
 28    concretetypeid    NVARCHAR2(4),
 29    videourl          NVARCHAR2(130),
 30    longitude         VARCHAR2(20),
 31    latitude          VARCHAR2(20),
 32    cartype           VARCHAR2(2),
 33    carnumber         VARCHAR2(16),
 34    recordline        CLOB,
 35    ifrelieverelation NUMBER default 0,
 36    relatedeventid    VARCHAR2(32),
 37    ipaddress         NVARCHAR2(32),
 38    sourcesuper       VARCHAR2(2),
 39    reportuserid      VARCHAR2(20),
 40    reportusername    VARCHAR2(20),
 41    phonenum          VARCHAR2(20),
 42    reportertype      VARCHAR2(2),
 43    reportusersex     VARCHAR2(1),
 44    receiverid        VARCHAR2(20),
 45    receivername      VARCHAR2(20),
 46    receiverphone     VARCHAR2(20),
 47    receivertype      VARCHAR2(2),
 48    receivetime       DATE,
 49    casetype          VARCHAR2(2),
 50    addinfo           NVARCHAR2(256),
 51    direction         VARCHAR2(2),
 52    pilenum           VARCHAR2(10),
 53    roadcrossid       VARCHAR2(32),
 54    meter             VARCHAR2(10),
 55    address           NVARCHAR2(256),
 56    similareventid    VARCHAR2(32),
 57    caramount         VARCHAR2(3),
 58    vehicleinfo       NVARCHAR2(256),
 59    duringtime        VARCHAR2(20),
 60    injurynum         VARCHAR2(3),
 61    deathnum          VARCHAR2(3),
 62    disappeartime     DATE,
 63    jamover           VARCHAR2(2),
 64    msgpk             NVARCHAR2(200),
 65    videopreset       VARCHAR2(20),
 66    author            VARCHAR2(100),
 67    url               VARCHAR2(1000),
 68    description       CLOB
 69  )
 70  ;
Table created
SQL> comment on table BURST_EVENT
  2    is '事件报警';
Comment added
SQL> comment on column BURST_EVENT.eventid
  2    is '事件ID';
Comment added
SQL> comment on column BURST_EVENT.eventname
  2    is '事件名称';
Comment added
SQL> comment on column BURST_EVENT.detectorid
  2    is '检测点ID';
Comment added
SQL> comment on column BURST_EVENT.location
  2    is '事件地点';
Comment added
SQL> comment on column BURST_EVENT.locationid
  2    is '事件地点ID';
Comment added
SQL> comment on column BURST_EVENT.eventtime
  2    is '事件时间';
Comment added
SQL> comment on column BURST_EVENT.eventtypeid
  2    is '事件类型(枚举1110)';
Comment added
SQL> comment on column BURST_EVENT.imageurl
  2    is '抓拍图片URL';
Comment added
SQL> comment on column BURST_EVENT.status
  2    is '状态：1已确认，0待确认';
Comment added
SQL> comment on column BURST_EVENT.processtime
  2    is '处理时间';
Comment added
SQL> comment on column BURST_EVENT.processperson
  2    is '事件处理人';
Comment added
SQL> comment on column BURST_EVENT.processnotes
  2    is '处理说明';
Comment added
SQL> comment on column BURST_EVENT.isevent
  2    is '是否有效事件（枚举:1001）';
Comment added
SQL> comment on column BURST_EVENT.auditor
  2    is '审核人';
Comment added
SQL> comment on column BURST_EVENT.audittime
  2    is '审核时间';
Comment added
SQL> comment on column BURST_EVENT.eventsource
  2    is '事件来源（枚举：1118）';
Comment added
SQL> comment on column BURST_EVENT.datasavetime
  2    is '入库时间';
Comment added
SQL> comment on column BURST_EVENT.areaid
  2    is '行政辖区';
Comment added
SQL> comment on column BURST_EVENT.endtime
  2    is '结束时间参照信息服务采集接口';
Comment added
SQL> comment on column BURST_EVENT.roadid
  2    is '路段编号';
Comment added
SQL> comment on column BURST_EVENT.roadname
  2    is '路段名称';
Comment added
SQL> comment on column BURST_EVENT.factory
  2    is '生产厂商';
Comment added
SQL> comment on column BURST_EVENT.longitude
  2    is '经度';
Comment added
SQL> comment on column BURST_EVENT.latitude
  2    is '纬度';
Comment added
SQL> comment on column BURST_EVENT.cartype
  2    is '号牌类型';
Comment added
SQL> comment on column BURST_EVENT.carnumber
  2    is '号牌号码';
Comment added
SQL> comment on column BURST_EVENT.recordline
  2    is '备案路线';
Comment added
SQL> comment on column BURST_EVENT.ifrelieverelation
  2    is '是否手动解除关联：0-未手动解除关联，1-已手动解除关联';
Comment added
SQL> comment on column BURST_EVENT.relatedeventid
  2    is '关联的事件id';
Comment added
SQL> comment on column BURST_EVENT.ipaddress
  2    is 'ip地址';
Comment added
SQL> comment on column BURST_EVENT.sourcesuper
  2    is '警情一级来源 0	人工确认，1	自主检测，2	信息服务';
Comment added
SQL> comment on column BURST_EVENT.reportuserid
  2    is '报警人id';
Comment added
SQL> comment on column BURST_EVENT.reportusername
  2    is '报警人姓名';
Comment added
SQL> comment on column BURST_EVENT.phonenum
  2    is '报警人联系电话';
Comment added
SQL> comment on column BURST_EVENT.reportertype
  2    is '报警人类型 0	执法民警，1	普通民警，3	群众';
Comment added
SQL> comment on column BURST_EVENT.reportusersex
  2    is '报警人性别（0：男；1：女；2：未知）';
Comment added
SQL> comment on column BURST_EVENT.receiverid
  2    is '接警人id';
Comment added
SQL> comment on column BURST_EVENT.receivername
  2    is '接警人姓名';
Comment added
SQL> comment on column BURST_EVENT.receiverphone
  2    is '接警人联系电话';
Comment added
SQL> comment on column BURST_EVENT.receivertype
  2    is '接警人类型 0	执法民警，1	普通民警，3	群众';
Comment added
SQL> comment on column BURST_EVENT.receivetime
  2    is '接警时间';
Comment added
SQL> comment on column BURST_EVENT.casetype
  2    is '报警类别（0：实时警情:1：信息调度）';
Comment added
SQL> comment on column BURST_EVENT.addinfo
  2    is '附加信息';
Comment added
SQL> comment on column BURST_EVENT.direction
  2    is '方向';
Comment added
SQL> comment on column BURST_EVENT.pilenum
  2    is '桩号';
Comment added
SQL> comment on column BURST_EVENT.roadcrossid
  2    is '事发路口编号';
Comment added
SQL> comment on column BURST_EVENT.meter
  2    is '米数';
Comment added
SQL> comment on column BURST_EVENT.address
  2    is '具体地址';
Comment added
SQL> comment on column BURST_EVENT.similareventid
  2    is '与之关联的相似警情id';
Comment added
SQL> comment on column BURST_EVENT.caramount
  2    is '涉案车辆的数量（该字段及以下字段为警情类型是03交通事故时填写）';
Comment added
SQL> comment on column BURST_EVENT.vehicleinfo
  2    is '涉案车辆的信息：号牌类型|号牌号码|碰撞部位，多辆车逗号隔开';
Comment added
SQL> comment on column BURST_EVENT.duringtime
  2    is '事发时长，已发生的时间（分钟）';
Comment added
SQL> comment on column BURST_EVENT.injurynum
  2    is '受伤人数';
Comment added
SQL> comment on column BURST_EVENT.deathnum
  2    is '死亡人数';
Comment added
SQL> comment on column BURST_EVENT.disappeartime
  2    is '信号自主检测拥堵警情消散时间';
Comment added
SQL> comment on column BURST_EVENT.jamover
  2    is '信号自主检测拥堵警情消散状态';
Comment added
SQL> comment on column BURST_EVENT.msgpk
  2    is '信号自主检测拥堵警情唯一标识';
Comment added
SQL> create or replace view pis_group_ck_view as
  2  select l.group_id,count(1)count from pis_oper_log l where l.oper_code=50 group by l.group_id;
View created
SQL> /
View created
SQL> create or replace view pis_group_cq_view as
  2  select g.group_id,g.dispatch_time start_time,g.group_stage from pis_group g
  3  where g.group_stage='03'
  4  and g.dispatch_time+nvl(g.sign_limit,0)/(24*60)<sysdate
  5  union all
  6  select g.group_id,g.sign_time start_time,g.group_stage from pis_group g
  7  where g.group_stage='04'
  8  and g.sign_time+nvl(g.close_limit,0)/(24*60)<sysdate;
View created
SQL> /
View created
SQL> create or replace view pis_group_db_view as
  2  select d.group_id,count(1)count from pis_info_depts d where d.is_supervise='1' group by d.group_id;
View created
SQL> /
View created
SQL> create or replace view pis_group_sj_view as
  2  select l.group_id,count(1)count from pis_oper_log l where l.oper_code=24 group by l.group_id;
View created
SQL> /
View created
SQL> create or replace view pis_group_view as
  2  select GROUP_ID,
  3         case
  4           when group_level is not null then
  5            group_level
  6           else
  7            (select min(i1.info_level)
  8               from pis_info_group_relation r1, pis_info_base i1
  9              where r1.info_id = i1.info_id
 10                and r1.group_id = t.group_id)
 11         end group_level,
 12         case
 13           when sign_limit is not null then
 14            sign_limit
 15           else
 16            (select to_number(c.param_value)
 17               from pis_param_config c
 18              where c.param_code = 'SIGN_TIME')
 19         end sign_limit,
 20         DISPATCH_TIME,
 21         SIGN_TIME,
 22         case
 23           when close_limit is not null then
 24            close_limit
 25           else
 26            (select max(ftc.close_limit)
 27               from pis_info_base           ib,
 28                    pis_info_group_relation igr,
 29                    pis_feature_type_config ftc
 30              where ib.info_id = igr.info_id
 31                and ib.info_subtype = ftc.subtype
 32                and igr.group_id = t.group_id)
 33         end close_limit,
 34         CLOSE_TIME ,
 35         GROUP_STAGE,
 36         SORTER_USERID,
 37         DISPATCH_CLOSE_TIME
 38    from pis_group t;
View created
SQL> /
View created
SQL> --↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑HiATMP-DB-PIS-DDL.6.0.0.0.A2.sql End-------------------------
SQL> --↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓HiATMP-DB-PIS-DDL.6.0.0.0.A3.sql Start-----------------------
SQL> truncate table pis_info_base;
Table truncated
SQL> truncate table pis_accident_cars;
Table truncated
SQL> truncate table pis_attachs;
Table truncated
SQL> truncate table pis_field_index;
Table truncated
SQL> truncate table pis_field_schema;
Table truncated
SQL> truncate table pis_group;
Table truncated
SQL> truncate table pis_group_marks;
Table truncated
SQL> truncate table pis_group_stages;
Table truncated
SQL> truncate table pis_info_dept_process;
Table truncated
SQL> truncate table pis_info_depts;
Table truncated
SQL> truncate table pis_info_details;
Table truncated
SQL> truncate table pis_info_group_relation;
Table truncated
SQL> truncate table pis_oper_log;
Table truncated
SQL> -- Add/modify columns
SQL> alter table BURST_EVENT add thirdsyscode varchar2(32);
Table altered
SQL> alter table BURST_EVENT add upgradereason nvarchar2(2000);
Table altered
SQL> -- Add comments to the columns
SQL> comment on column BURST_EVENT.thirdsyscode
  2    is '第三方编号';
Comment added
SQL> comment on column BURST_EVENT.upgradereason
  2    is '升级原因';
Comment added
SQL> drop table PIS_INFO_BASE;
Table dropped
SQL>  -- Create table
SQL> create table PIS_INFO_BASE
  2  (
  3    info_id         VARCHAR2(32) not null,
  4    info_channel    VARCHAR2(2) not null,
  5    info_source     VARCHAR2(2) not null,
  6    info_feature    VARCHAR2(2),
  7    info_level      VARCHAR2(2) not null,
  8    info_type       VARCHAR2(2),
  9    info_subtype    VARCHAR2(10),
 10    info_time       DATE not null,
 11    create_time     DATE not null,
 12    info_stage      VARCHAR2(2) not null,
 13    dispatch_time   DATE,
 14    sign_time       DATE,
 15    thirdsyscode    VARCHAR2(32),
 16    simhashcode     VARCHAR2(64),
 17    info_coordinate VARCHAR2(500),
 18    info_address    VARCHAR2(500),
 19    confirm_time    DATE,
 20    confirm_userid  VARCHAR2(10),
 21    close_time      DATE,
 22    info_deptid     VARCHAR2(12),
 23    info_desc       CLOB,
 24    info_content    CLOB,
 25    info_topic      CLOB
 26  );
Table created
SQL> -- Add comments to the table
SQL> comment on table PIS_INFO_BASE
  2    is '情报信息表';
Comment added
SQL> -- Add comments to the columns
SQL> comment on column PIS_INFO_BASE.info_id
  2    is '情报编号';
Comment added
SQL> comment on column PIS_INFO_BASE.info_channel
  2    is '接入渠道';
Comment added
SQL> comment on column PIS_INFO_BASE.info_source
  2    is '情报来源';
Comment added
SQL> comment on column PIS_INFO_BASE.info_feature
  2    is '情报性质(0快情报, 1慢情报)';
Comment added
SQL> comment on column PIS_INFO_BASE.info_level
  2    is '情报等级';
Comment added
SQL> comment on column PIS_INFO_BASE.info_type
  2    is '情报类型';
Comment added
SQL> comment on column PIS_INFO_BASE.info_subtype
  2    is '情报子类型';
Comment added
SQL> comment on column PIS_INFO_BASE.info_time
  2    is '发生时间';
Comment added
SQL> comment on column PIS_INFO_BASE.create_time
  2    is '录入时间';
Comment added
SQL> comment on column PIS_INFO_BASE.info_stage
  2    is '当前阶段（情报子系统参数配置表中INFO_STATUS）';
Comment added
SQL> comment on column PIS_INFO_BASE.dispatch_time
  2    is '分拣时间';
Comment added
SQL> comment on column PIS_INFO_BASE.sign_time
  2    is '签收时间';
Comment added
SQL> comment on column PIS_INFO_BASE.thirdsyscode
  2    is '第三方编号';
Comment added
SQL> comment on column PIS_INFO_BASE.simhashcode
  2    is '情报hash签名，用于重复情报判定';
Comment added
SQL> comment on column PIS_INFO_BASE.info_coordinate
  2    is '事发地点坐标';
Comment added
SQL> comment on column PIS_INFO_BASE.info_address
  2    is '事发地址';
Comment added
SQL> comment on column PIS_INFO_BASE.confirm_time
  2    is '确认时间';
Comment added
SQL> comment on column PIS_INFO_BASE.confirm_userid
  2    is '确认人编号';
Comment added
SQL> comment on column PIS_INFO_BASE.close_time
  2    is '办结时间';
Comment added
SQL> comment on column PIS_INFO_BASE.info_deptid
  2    is '所属部门';
Comment added
SQL> comment on column PIS_INFO_BASE.info_desc
  2    is '情报描述';
Comment added
SQL> -- Add/modify columns
SQL> alter table ALERTEVENT_CONFIG modify eventsource VARCHAR2(500);
alter table ALERTEVENT_CONFIG modify eventsource VARCHAR2(500)
ORA-00942: 表或视图不存在
SQL> alter table ALERTEVENT_CONFIG modify eventtype VARCHAR2(500);
alter table ALERTEVENT_CONFIG modify eventtype VARCHAR2(500)
ORA-00942: 表或视图不存在
SQL> -- Add/modify columns
SQL> alter table pis_attachs modify attach_name nvarchar2(200);
Table altered
SQL> --↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑HiATMP-DB-PIS-DDL.6.0.0.0.A3.sql End-------------------------
SQL> --↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓HiATMP-DB-PIS-DDL.6.0.0.0.A4.sql Start-----------------------
SQL> --Clear data
SQL> truncate table pis_info_base;
Table truncated
SQL> truncate table pis_accident_cars;
Table truncated
SQL> truncate table pis_attachs;
Table truncated
SQL> truncate table pis_field_index;
Table truncated
SQL> truncate table pis_field_schema;
Table truncated
SQL> truncate table pis_group;
Table truncated
SQL> truncate table pis_group_marks;
Table truncated
SQL> truncate table pis_group_stages;
Table truncated
SQL> truncate table pis_info_dept_process;
Table truncated
SQL> truncate table pis_info_depts;
Table truncated
SQL> truncate table pis_info_details;
Table truncated
SQL> truncate table pis_info_group_relation;
Table truncated
SQL> truncate table pis_oper_log;
Table truncated
SQL> -- Delete table
SQL> drop table PIS_INFO_BASE;
Table dropped
SQL> -- Create table
SQL> create table PIS_INFO_BASE
  2  (
  3    INFO_ID         VARCHAR2(32) not null,
  4    INFO_CHANNEL    VARCHAR2(2) not null,
  5    INFO_SOURCE     VARCHAR2(2) not null,
  6    INFO_FEATURE    VARCHAR2(2),
  7    INFO_LEVEL      VARCHAR2(2) not null,
  8    INFO_TYPE       VARCHAR2(2),
  9    INFO_SUBTYPE    VARCHAR2(10),
 10    INFO_TIME       DATE not null,
 11    CREATE_TIME     DATE not null,
 12    INFO_STAGE      VARCHAR2(2) not null,
 13    DISPATCH_TIME   DATE,
 14    SIGN_TIME       DATE,
 15    THIRDSYSCODE    VARCHAR2(32),
 16    SIMHASHCODE     VARCHAR2(64),
 17    INFO_COORDINATE VARCHAR2(500),
 18    INFO_ADDRESS    NVARCHAR2(1000),
 19    CONFIRM_TIME    DATE,
 20    CONFIRM_USERID  VARCHAR2(10),
 21    CLOSE_TIME      DATE,
 22    INFO_DEPTID     VARCHAR2(12),
 23    INFO_DESC       CLOB,
 24    INFO_CONTENT    CLOB,
 25    INFO_TOPIC      CLOB
 26  );
Table created
SQL> -- Add comments to the table
SQL> comment on table PIS_INFO_BASE
  2    is '情报信息表';
Comment added
SQL> -- Add comments to the columns
SQL> comment on column PIS_INFO_BASE.INFO_ID
  2    is '情报编号';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_CHANNEL
  2    is '接入渠道（select ''接入渠道名称：''||t.param_desc from pis_param_config t where t.param_code=''INFO_CHANNEL'' and t.param_value= ）';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_SOURCE
  2    is '情报来源（select ''情报来源名称：''||t.param_desc from pis_param_config t where t.param_code=''INFO_SOURCE'' and t.param_value= ）';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_FEATURE
  2    is '情报性质(0:快情报,1:慢情报)';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_LEVEL
  2    is '情报等级';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_TYPE
  2    is '情报类型(select  ''情报类型名称：''||type_name from pis_feature_type_config t where t.info_type= )';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_SUBTYPE
  2    is '情报子类型(select ''子类型名称：''||t.subtype_name from pis_feature_type_config t where t.subtype= )';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_TIME
  2    is '发生时间';
Comment added
SQL> comment on column PIS_INFO_BASE.CREATE_TIME
  2    is '录入时间';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_STAGE
  2    is '当前阶段(select ''当前阶段名称：''||t.param_desc from pis_param_config t where t.param_code=''INFO_STATUS'' and t.param_value= )';
Comment added
SQL> comment on column PIS_INFO_BASE.DISPATCH_TIME
  2    is '分拣时间';
Comment added
SQL> comment on column PIS_INFO_BASE.SIGN_TIME
  2    is '签收时间';
Comment added
SQL> comment on column PIS_INFO_BASE.THIRDSYSCODE
  2    is '第三方编号';
Comment added
SQL> comment on column PIS_INFO_BASE.SIMHASHCODE
  2    is '情报hash签名，用于重复情报判定';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_COORDINATE
  2    is '事发地点坐标';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_ADDRESS
  2    is '事发地址';
Comment added
SQL> comment on column PIS_INFO_BASE.CONFIRM_TIME
  2    is '确认时间';
Comment added
SQL> comment on column PIS_INFO_BASE.CONFIRM_USERID
  2    is '确认人编号';
Comment added
SQL> comment on column PIS_INFO_BASE.CLOSE_TIME
  2    is '办结时间';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_DEPTID
  2    is '所属部门';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_DESC
  2    is '情报描述';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_CONTENT
  2    is '情报备注';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_TOPIC
  2    is '情报标题';
Comment added
SQL> -- Create/Recreate indexes
SQL> create index PIS_INFO_BASE_CHANNEL_IDX on PIS_INFO_BASE (INFO_CHANNEL);
Index created
SQL> create or replace view pis_group_view as
  2  select GROUP_ID,
  3         case
  4           when group_level is not null then
  5            group_level
  6           else
  7            (select min(i1.info_level)
  8               from pis_info_group_relation r1, pis_info_base i1
  9              where r1.info_id = i1.info_id
 10                and r1.group_id = t.group_id)
 11         end group_level,
 12         case
 13           when sign_limit is not null then
 14            sign_limit
 15           else
 16            (select to_number(c.param_value)
 17               from pis_param_config c
 18              where c.param_code = 'SIGN_TIME')
 19         end sign_limit,
 20         DISPATCH_TIME,
 21         SIGN_TIME,
 22         case
 23           when close_limit is not null then
 24            close_limit
 25           else
 26            (select max(ftc.close_limit)
 27               from pis_info_base           ib,
 28                    pis_info_group_relation igr,
 29                    pis_feature_type_config ftc
 30              where ib.info_id = igr.info_id
 31                and ib.info_subtype = ftc.subtype
 32                and igr.group_id = t.group_id)
 33         end close_limit,
 34         CLOSE_TIME ,
 35         GROUP_STAGE,
 36         SORTER_USERID,
 37         DISPATCH_CLOSE_TIME,
 38         (select count(1) from pis_group_db_view db where db.group_id=t.group_id) dbflag,
 39         (select count(1) from pis_group_ck_view ck where ck.group_id=t.group_id) ckflag,
 40         (select count(1) from pis_group_cq_view cq where cq.group_id=t.group_id) cqflag
 41    from pis_group t;
View created
SQL> --↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑HiATMP-DB-PIS-DDL.6.0.0.0.A4.sql End-------------------------
SQL> --↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓HiATMP-DB-PIS-DDL.6.0.0.0.A5.sql Start-----------------------
SQL> drop table PIS_ACCIDENT_CARS;
Table dropped
SQL> create table PIS_ACCIDENT_CARS
  2  (
  3    ID       VARCHAR2(32) not null,
  4    CAR_NO   VARCHAR2(10) not null,
  5    CAR_TYPE VARCHAR2(2) not null,
  6    INFO_ID  VARCHAR2(32)
  7  )
  8  ;
Table created
SQL> comment on table PIS_ACCIDENT_CARS
  2    is '事件车辆关联表';
Comment added
SQL> comment on column PIS_ACCIDENT_CARS.ID
  2    is '编号';
Comment added
SQL> comment on column PIS_ACCIDENT_CARS.CAR_NO
  2    is '号牌号码';
Comment added
SQL> comment on column PIS_ACCIDENT_CARS.CAR_TYPE
  2    is '号牌类型';
Comment added
SQL> comment on column PIS_ACCIDENT_CARS.INFO_ID
  2    is '情报编号';
Comment added
SQL> alter table PIS_ACCIDENT_CARS
  2    add constraint PIS_ACCIDENT_CARS_PK primary key (ID);
Table altered
SQL> drop table PIS_ATTACHS;
Table dropped
SQL> create table PIS_ATTACHS
  2  (
  3    ID             VARCHAR2(32) not null,
  4    ATTACH_URL     VARCHAR2(200) not null,
  5    ATTACH_TYPE    VARCHAR2(2) not null,
  6    UPLOAD_TIME    DATE not null,
  7    UPLOAD_ACCOUNT NVARCHAR2(50),
  8    INFO_ID        VARCHAR2(32),
  9    OPER_ID        VARCHAR2(32),
 10    ATTACH_NAME    NVARCHAR2(200)
 11  )
 12  ;
Table created
SQL> comment on table PIS_ATTACHS
  2    is '附件表';
Comment added
SQL> comment on column PIS_ATTACHS.ID
  2    is '编号';
Comment added
SQL> comment on column PIS_ATTACHS.ATTACH_URL
  2    is '附件地址';
Comment added
SQL> comment on column PIS_ATTACHS.ATTACH_TYPE
  2    is '附件类型';
Comment added
SQL> comment on column PIS_ATTACHS.UPLOAD_TIME
  2    is '上传时间';
Comment added
SQL> comment on column PIS_ATTACHS.UPLOAD_ACCOUNT
  2    is '上传人';
Comment added
SQL> comment on column PIS_ATTACHS.INFO_ID
  2    is '情报编号';
Comment added
SQL> comment on column PIS_ATTACHS.OPER_ID
  2    is '操作日志编号';
Comment added
SQL> comment on column PIS_ATTACHS.ATTACH_NAME
  2    is '附件名称';
Comment added
SQL> alter table PIS_ATTACHS
  2    add constraint PIS_ATTACHS_PK primary key (ID);
Table altered
SQL> drop table PIS_FEATURE_TYPE_CONFIG;
Table dropped
SQL> create table PIS_FEATURE_TYPE_CONFIG
  2  (
  3    ID           VARCHAR2(32) not null,
  4    INFO_TYPE    VARCHAR2(2) not null,
  5    TYPE_NAME    VARCHAR2(100) not null,
  6    SUBTYPE      VARCHAR2(10) not null,
  7    SUBTYPE_NAME VARCHAR2(100) not null,
  8    FEATURE      VARCHAR2(2) not null,
  9    CLOSE_LIMIT  INTEGER not null
 10  )
 11  ;
Table created
SQL> comment on table PIS_FEATURE_TYPE_CONFIG
  2    is '类型及类型配置表';
Comment added
SQL> comment on column PIS_FEATURE_TYPE_CONFIG.ID
  2    is '配置编号';
Comment added
SQL> comment on column PIS_FEATURE_TYPE_CONFIG.INFO_TYPE
  2    is '情报类型编号';
Comment added
SQL> comment on column PIS_FEATURE_TYPE_CONFIG.TYPE_NAME
  2    is '情报类型名称';
Comment added
SQL> comment on column PIS_FEATURE_TYPE_CONFIG.SUBTYPE
  2    is '子类型编号';
Comment added
SQL> comment on column PIS_FEATURE_TYPE_CONFIG.SUBTYPE_NAME
  2    is '子类型名称';
Comment added
SQL> comment on column PIS_FEATURE_TYPE_CONFIG.FEATURE
  2    is '情报性质（0：快、1：慢）';
Comment added
SQL> comment on column PIS_FEATURE_TYPE_CONFIG.CLOSE_LIMIT
  2    is '默认办理时长（分钟）';
Comment added
SQL> alter table PIS_FEATURE_TYPE_CONFIG
  2    add constraint PIS_FEATURE_TYPE_CONFIG_PK primary key (ID);
Table altered
SQL> drop table PIS_FIELD_INDEX;
Table dropped
SQL> create table PIS_FIELD_INDEX
  2  (
  3    INDEX_ID   VARCHAR2(32) not null,
  4    FIELD_NAME VARCHAR2(50),
  5    FIELD_VAL  VARCHAR2(200),
  6    INFO_IDS   CLOB
  7  )
  8  ;
Table created
SQL> comment on table PIS_FIELD_INDEX
  2    is '情报内容字段索引表';
Comment added
SQL> comment on column PIS_FIELD_INDEX.INDEX_ID
  2    is '索引编号';
Comment added
SQL> comment on column PIS_FIELD_INDEX.FIELD_NAME
  2    is '字段名称';
Comment added
SQL> comment on column PIS_FIELD_INDEX.FIELD_VAL
  2    is '字段值';
Comment added
SQL> comment on column PIS_FIELD_INDEX.INFO_IDS
  2    is '关联情报';
Comment added
SQL> alter table PIS_FIELD_INDEX
  2    add constraint PIS_FIELD_INDEX_PK primary key (INDEX_ID);
Table altered
SQL> drop table PIS_FIELD_SCHEMA;
Table dropped
SQL> create table PIS_FIELD_SCHEMA
  2  (
  3    FIELD_ID          VARCHAR2(32) not null,
  4    FIELD_NAME        VARCHAR2(50) not null,
  5    FIELD_DESC        VARCHAR2(100),
  6    FIELD_TYPE        VARCHAR2(2) default 1,
  7    FIELD_INFO_TYPE   VARCHAR2(2) not null,
  8    NEED_INDEX        VARCHAR2(2) default 0,
  9    FIELD_INFO_SOURCE VARCHAR2(2) not null
 10  )
 11  ;
Table created
SQL> comment on table PIS_FIELD_SCHEMA
  2    is '情报内容字段释义表';
Comment added
SQL> comment on column PIS_FIELD_SCHEMA.FIELD_ID
  2    is '字段编号';
Comment added
SQL> comment on column PIS_FIELD_SCHEMA.FIELD_NAME
  2    is '字段名称';
Comment added
SQL> comment on column PIS_FIELD_SCHEMA.FIELD_DESC
  2    is '字段中文描述';
Comment added
SQL> comment on column PIS_FIELD_SCHEMA.FIELD_TYPE
  2    is '字段类型(0:数字,1:字符串)';
Comment added
SQL> comment on column PIS_FIELD_SCHEMA.FIELD_INFO_TYPE
  2    is '所属情报类型(大类)';
Comment added
SQL> comment on column PIS_FIELD_SCHEMA.NEED_INDEX
  2    is '是否需要索引(0:不需要,1:需要)';
Comment added
SQL> comment on column PIS_FIELD_SCHEMA.FIELD_INFO_SOURCE
  2    is '所属情报来源';
Comment added
SQL> alter table PIS_FIELD_SCHEMA
  2    add constraint PIS_FIELD_SCHEMA_PK primary key (FIELD_ID);
Table altered
SQL> drop table PIS_GROUP;
Table dropped
SQL> create table PIS_GROUP
  2  (
  3    GROUP_ID            VARCHAR2(32) not null,
  4    GROUP_LEVEL         VARCHAR2(2),
  5    CLOSE_LIMIT         INTEGER,
  6    DISPATCH_TIME       DATE,
  7    SIGN_TIME           DATE,
  8    CLOSE_TIME          DATE,
  9    GROUP_STAGE         VARCHAR2(2) not null,
 10    SORTER_USERID       VARCHAR2(10),
 11    SIGN_LIMIT          INTEGER,
 12    DISPATCH_CLOSE_TIME DATE
 13  )
 14  ;
Table created
SQL> comment on table PIS_GROUP
  2    is '情报组表';
Comment added
SQL> comment on column PIS_GROUP.GROUP_ID
  2    is '情报组编号';
Comment added
SQL> comment on column PIS_GROUP.GROUP_LEVEL
  2    is '情报组等级';
Comment added
SQL> comment on column PIS_GROUP.CLOSE_LIMIT
  2    is '办理时限（分钟）';
Comment added
SQL> comment on column PIS_GROUP.DISPATCH_TIME
  2    is '分拣时间';
Comment added
SQL> comment on column PIS_GROUP.SIGN_TIME
  2    is '签收时间';
Comment added
SQL> comment on column PIS_GROUP.CLOSE_TIME
  2    is '办结时间';
Comment added
SQL> comment on column PIS_GROUP.GROUP_STAGE
  2    is '当前阶段（情报子系统参数配置表中INFO_STATUS）';
Comment added
SQL> comment on column PIS_GROUP.SORTER_USERID
  2    is '分拣员编号（userid）';
Comment added
SQL> comment on column PIS_GROUP.SIGN_LIMIT
  2    is '办理时限（分钟，从SIGN_TIME获取）';
Comment added
SQL> comment on column PIS_GROUP.DISPATCH_CLOSE_TIME
  2    is '分拣截止时间（情报接入、退回时会更新）';
Comment added
SQL> alter table PIS_GROUP
  2    add constraint BPIS_GROUP_PK primary key (GROUP_ID);
Table altered
SQL> drop table PIS_GROUP_MARKS;
Table dropped
SQL> create table PIS_GROUP_MARKS
  2  (
  3    TAG_ID    VARCHAR2(32) not null,
  4    USERID    VARCHAR2(10),
  5    GROUP_ID  VARCHAR2(32),
  6    MARK_TIME DATE
  7  )
  8  ;
Table created
SQL> comment on table PIS_GROUP_MARKS
  2    is '人员标记情报表';
Comment added
SQL> comment on column PIS_GROUP_MARKS.TAG_ID
  2    is '标记编号';
Comment added
SQL> comment on column PIS_GROUP_MARKS.USERID
  2    is '人员编号（userid）';
Comment added
SQL> comment on column PIS_GROUP_MARKS.GROUP_ID
  2    is '组编号';
Comment added
SQL> comment on column PIS_GROUP_MARKS.MARK_TIME
  2    is '标记时间';
Comment added
SQL> alter table PIS_GROUP_MARKS
  2    add constraint PIS_GROUP_MARKS_PK primary key (TAG_ID);
Table altered
SQL> drop table PIS_GROUP_STAGES;
Table dropped
SQL> create table PIS_GROUP_STAGES
  2  (
  3    STATE_ID     VARCHAR2(32) not null,
  4    START_TIME   DATE,
  5    END_TIME     DATE,
  6    STAGE_STATUS VARCHAR2(2),
  7    LAST_STATUS  VARCHAR2(2),
  8    GROUP_ID     VARCHAR2(32) not null
  9  )
 10  ;
Table created
SQL> comment on table PIS_GROUP_STAGES
  2    is '情报组进度变化表';
Comment added
SQL> comment on column PIS_GROUP_STAGES.STATE_ID
  2    is '进度编号';
Comment added
SQL> comment on column PIS_GROUP_STAGES.START_TIME
  2    is '开始时间';
Comment added
SQL> comment on column PIS_GROUP_STAGES.END_TIME
  2    is '结束时间';
Comment added
SQL> comment on column PIS_GROUP_STAGES.STAGE_STATUS
  2    is '当前状态（情报子系统参数配置表中INFO_STATUS）';
Comment added
SQL> comment on column PIS_GROUP_STAGES.LAST_STATUS
  2    is '上一状态（情报子系统参数配置表中INFO_STATUS）';
Comment added
SQL> comment on column PIS_GROUP_STAGES.GROUP_ID
  2    is '组编号';
Comment added
SQL> alter table PIS_GROUP_STAGES
  2    add constraint PIS_GROUP_STAGES_PK primary key (STATE_ID);
Table altered
SQL> drop table PIS_INFO_BASE;
Table dropped
SQL> create table PIS_INFO_BASE
  2  (
  3    INFO_ID         VARCHAR2(32) not null,
  4    INFO_CHANNEL    VARCHAR2(2) not null,
  5    INFO_SOURCE     VARCHAR2(2) not null,
  6    INFO_FEATURE    VARCHAR2(2),
  7    INFO_LEVEL      VARCHAR2(2) not null,
  8    INFO_TYPE       VARCHAR2(2),
  9    INFO_SUBTYPE    VARCHAR2(10),
 10    INFO_TIME       DATE not null,
 11    CREATE_TIME     DATE not null,
 12    INFO_STAGE      VARCHAR2(2) not null,
 13    DISPATCH_TIME   DATE,
 14    SIGN_TIME       DATE,
 15    THIRDSYSCODE    VARCHAR2(32),
 16    SIMHASHCODE     VARCHAR2(64),
 17    INFO_COORDINATE VARCHAR2(500),
 18    INFO_ADDRESS    NVARCHAR2(1000),
 19    CONFIRM_TIME    DATE,
 20    CONFIRM_USERID  VARCHAR2(10),
 21    CLOSE_TIME      DATE,
 22    INFO_DEPTID     VARCHAR2(12),
 23    INFO_DESC       CLOB,
 24    INFO_CONTENT    CLOB,
 25    INFO_TOPIC      CLOB
 26  )
 27  ;
Table created
SQL> comment on table PIS_INFO_BASE
  2    is '情报信息表';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_ID
  2    is '情报编号';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_CHANNEL
  2    is '接入渠道（select ''接入渠道名称：''||t.param_desc from pis_param_config t where t.param_code=''INFO_CHANNEL'' and t.param_value= ）';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_SOURCE
  2    is '情报来源（select ''情报来源名称：''||t.param_desc from pis_param_config t where t.param_code=''INFO_SOURCE'' and t.param_value= ）';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_FEATURE
  2    is '情报性质(0:快情报,1:慢情报)';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_LEVEL
  2    is '情报等级';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_TYPE
  2    is '情报类型(select  ''情报类型名称：''||type_name from pis_feature_type_config t where t.info_type= )';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_SUBTYPE
  2    is '情报子类型(select ''子类型名称：''||t.subtype_name from pis_feature_type_config t where t.subtype= )';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_TIME
  2    is '发生时间';
Comment added
SQL> comment on column PIS_INFO_BASE.CREATE_TIME
  2    is '录入时间';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_STAGE
  2    is '当前阶段(select ''当前阶段名称：''||t.param_desc from pis_param_config t where t.param_code=''INFO_STATUS'' and t.param_value= )';
Comment added
SQL> comment on column PIS_INFO_BASE.DISPATCH_TIME
  2    is '分拣时间';
Comment added
SQL> comment on column PIS_INFO_BASE.SIGN_TIME
  2    is '签收时间';
Comment added
SQL> comment on column PIS_INFO_BASE.THIRDSYSCODE
  2    is '第三方编号';
Comment added
SQL> comment on column PIS_INFO_BASE.SIMHASHCODE
  2    is '情报hash签名，用于重复情报判定';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_COORDINATE
  2    is '事发地点坐标';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_ADDRESS
  2    is '事发地址';
Comment added
SQL> comment on column PIS_INFO_BASE.CONFIRM_TIME
  2    is '确认时间';
Comment added
SQL> comment on column PIS_INFO_BASE.CONFIRM_USERID
  2    is '确认人编号';
Comment added
SQL> comment on column PIS_INFO_BASE.CLOSE_TIME
  2    is '办结时间';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_DEPTID
  2    is '所属部门';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_DESC
  2    is '情报描述';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_CONTENT
  2    is '情报备注';
Comment added
SQL> comment on column PIS_INFO_BASE.INFO_TOPIC
  2    is '情报标题';
Comment added
SQL> alter table PIS_INFO_BASE
  2    add constraint PIS_INFO_BASE_PK primary key (INFO_ID);
Table altered
SQL> create index PIS_INFO_BASE_CHANNEL_IDX on PIS_INFO_BASE (INFO_CHANNEL);
Index created
SQL> drop table PIS_INFO_DEPTS;
Table dropped
SQL> create table PIS_INFO_DEPTS
  2  (
  3    DEPTID        VARCHAR2(12) not null,
  4    GROUP_ID      VARCHAR2(32) not null,
  5    IS_LEADER     VARCHAR2(2),
  6    FOLLOWER_TYPE VARCHAR2(2),
  7    ADD_TIME      DATE,
  8    ADD_DEPT      VARCHAR2(12),
  9    WORK_REQUIRE  NVARCHAR2(2000),
 10    IS_SUPERVISE  VARCHAR2(2)
 11  )
 12  ;
Table created
SQL> comment on table PIS_INFO_DEPTS
  2    is '情报组处理部门表';
Comment added
SQL> comment on column PIS_INFO_DEPTS.DEPTID
  2    is '部门编号';
Comment added
SQL> comment on column PIS_INFO_DEPTS.GROUP_ID
  2    is '组编号';
Comment added
SQL> comment on column PIS_INFO_DEPTS.IS_LEADER
  2    is '是否主办（0：否；1：是）';
Comment added
SQL> comment on column PIS_INFO_DEPTS.FOLLOWER_TYPE
  2    is '协办类型（暂不启用）';
Comment added
SQL> comment on column PIS_INFO_DEPTS.ADD_TIME
  2    is '添加时间';
Comment added
SQL> comment on column PIS_INFO_DEPTS.ADD_DEPT
  2    is '添加部门编号';
Comment added
SQL> comment on column PIS_INFO_DEPTS.WORK_REQUIRE
  2    is '工作要求';
Comment added
SQL> comment on column PIS_INFO_DEPTS.IS_SUPERVISE
  2    is '是否督办（0：否；1：是）';
Comment added
SQL> alter table PIS_INFO_DEPTS
  2    add constraint PIS_INFO_DEPTS_PK primary key (DEPTID, GROUP_ID);
Table altered
SQL> drop table PIS_INFO_DEPT_PROCESS;
Table dropped
SQL> create table PIS_INFO_DEPT_PROCESS
  2  (
  3    DEPTID          VARCHAR2(12) not null,
  4    GROUP_ID        VARCHAR2(32) not null,
  5    INFO_DEPT_STAGE VARCHAR2(2) not null,
  6    SIGN_TIME       DATE,
  7    CLOSE_TIME      DATE
  8  )
  9  ;
Table created
SQL> comment on table PIS_INFO_DEPT_PROCESS
  2    is '部门进度信息表';
Comment added
SQL> comment on column PIS_INFO_DEPT_PROCESS.DEPTID
  2    is '部门编号';
Comment added
SQL> comment on column PIS_INFO_DEPT_PROCESS.GROUP_ID
  2    is '组编号';
Comment added
SQL> comment on column PIS_INFO_DEPT_PROCESS.INFO_DEPT_STAGE
  2    is '当前阶段（参考情报子系统参数配置中的INFO_STATUS）';
Comment added
SQL> comment on column PIS_INFO_DEPT_PROCESS.SIGN_TIME
  2    is '签收时间';
Comment added
SQL> comment on column PIS_INFO_DEPT_PROCESS.CLOSE_TIME
  2    is '办结时间';
Comment added
SQL> alter table PIS_INFO_DEPT_PROCESS
  2    add constraint PIS_INFO_DEPT_PROCESS_PK primary key (DEPTID, GROUP_ID);
Table altered
SQL> drop table PIS_INFO_DETAILS;
Table dropped
SQL> create table PIS_INFO_DETAILS
  2  (
  3    INFO_ID             VARCHAR2(32) not null,
  4    AREAID              VARCHAR2(6) not null,
  5    INFO_LOCATION       VARCHAR2(200) not null,
  6    LOCATION_COORDINATE VARCHAR2(200) not null,
  7    REPORTER_NAME       VARCHAR2(20),
  8    REPORTER_SEX        VARCHAR2(2),
  9    REPORTER_PHONE      VARCHAR2(20),
 10    WOUNDED_NUM         INTEGER,
 11    DEATH_NUM           INTEGER,
 12    ACCIDENT_SHAPE      VARCHAR2(20),
 13    ENTRUST_DEPT        VARCHAR2(20),
 14    ENTRUST_PERSON      VARCHAR2(20),
 15    ENTRUST_PHONE       VARCHAR2(20)
 16  )
 17  ;
Table created
SQL> comment on table PIS_INFO_DETAILS
  2    is '情报附属信息表';
Comment added
SQL> comment on column PIS_INFO_DETAILS.INFO_ID
  2    is '情报编号';
Comment added
SQL> comment on column PIS_INFO_DETAILS.AREAID
  2    is '所属辖区编号';
Comment added
SQL> comment on column PIS_INFO_DETAILS.INFO_LOCATION
  2    is '事发地点名称';
Comment added
SQL> comment on column PIS_INFO_DETAILS.LOCATION_COORDINATE
  2    is '事发地点坐标';
Comment added
SQL> comment on column PIS_INFO_DETAILS.REPORTER_NAME
  2    is '上报人姓名';
Comment added
SQL> comment on column PIS_INFO_DETAILS.REPORTER_SEX
  2    is '上报人性别';
Comment added
SQL> comment on column PIS_INFO_DETAILS.REPORTER_PHONE
  2    is '上报人电话';
Comment added
SQL> comment on column PIS_INFO_DETAILS.WOUNDED_NUM
  2    is '受伤人数';
Comment added
SQL> comment on column PIS_INFO_DETAILS.DEATH_NUM
  2    is '死亡人数';
Comment added
SQL> comment on column PIS_INFO_DETAILS.ACCIDENT_SHAPE
  2    is '事故形态';
Comment added
SQL> comment on column PIS_INFO_DETAILS.ENTRUST_DEPT
  2    is '交办单位';
Comment added
SQL> comment on column PIS_INFO_DETAILS.ENTRUST_PERSON
  2    is '交办人姓名';
Comment added
SQL> comment on column PIS_INFO_DETAILS.ENTRUST_PHONE
  2    is '交办人电话';
Comment added
SQL> alter table PIS_INFO_DETAILS
  2    add constraint PIS_INFO_DETAILS_PK primary key (INFO_ID);
Table altered
SQL> drop table PIS_INFO_GROUP_RELATION;
Table dropped
SQL> create table PIS_INFO_GROUP_RELATION
  2  (
  3    GROUP_ID   VARCHAR2(32) not null,
  4    INFO_ID    VARCHAR2(32) not null,
  5    IS_MAIN    VARCHAR2(2),
  6    MERGE_TIME DATE,
  7    IS_APPEND  VARCHAR2(2)
  8  )
  9  ;
Table created
SQL> comment on table PIS_INFO_GROUP_RELATION
  2    is '情报组关联情报表';
Comment added
SQL> comment on column PIS_INFO_GROUP_RELATION.GROUP_ID
  2    is '组编号';
Comment added
SQL> comment on column PIS_INFO_GROUP_RELATION.INFO_ID
  2    is '情报编号';
Comment added
SQL> comment on column PIS_INFO_GROUP_RELATION.IS_MAIN
  2    is '是否主情报（0：否；1：是）';
Comment added
SQL> comment on column PIS_INFO_GROUP_RELATION.MERGE_TIME
  2    is '进组时间';
Comment added
SQL> comment on column PIS_INFO_GROUP_RELATION.IS_APPEND
  2    is '是否追加情报（0：否；1：是）';
Comment added
SQL> alter table PIS_INFO_GROUP_RELATION
  2    add constraint INFO_GROUP_RELATION_PK primary key (INFO_ID, GROUP_ID);
Table altered
SQL> drop table PIS_INFO_MERGE;
Table dropped
SQL> create table PIS_INFO_MERGE
  2  (
  3    ID           VARCHAR2(32) not null,
  4    MERGER_NAME  VARCHAR2(200),
  5    INFO_TYPE    VARCHAR2(1000),
  6    MERGER_ORDER INTEGER not null,
  7    MERGER_CLASS VARCHAR2(200) not null,
  8    INFO_SOURCE  VARCHAR2(200)
  9  )
 10  ;
Table created
SQL> comment on table PIS_INFO_MERGE
  2    is '情报去重配置表';
Comment added
SQL> comment on column PIS_INFO_MERGE.ID
  2    is '规则编号';
Comment added
SQL> comment on column PIS_INFO_MERGE.MERGER_NAME
  2    is '规则名称';
Comment added
SQL> comment on column PIS_INFO_MERGE.INFO_TYPE
  2    is '适用情报类型';
Comment added
SQL> comment on column PIS_INFO_MERGE.MERGER_ORDER
  2    is '规则优先级，数值越大优先级越高';
Comment added
SQL> comment on column PIS_INFO_MERGE.MERGER_CLASS
  2    is '规则运算类';
Comment added
SQL> comment on column PIS_INFO_MERGE.INFO_SOURCE
  2    is '适用情报来源';
Comment added
SQL> alter table PIS_INFO_MERGE
  2    add constraint PIS_INFO_MERGE_PK primary key (ID);
Table altered
SQL> drop table PIS_NOCONFIRM_CONFIG;
Table dropped
SQL> create table PIS_NOCONFIRM_CONFIG
  2  (
  3    ID           VARCHAR2(32) not null,
  4    INFO_SOURCE  VARCHAR2(10),
  5    INFO_TYPE    VARCHAR2(10),
  6    INFO_SUBTYPE VARCHAR2(10),
  7    CREATRE_USER VARCHAR2(20) not null
  8  )
  9  ;
Table created
SQL> comment on table PIS_NOCONFIRM_CONFIG
  2    is '不需确认情报配置表';
Comment added
SQL> comment on column PIS_NOCONFIRM_CONFIG.ID
  2    is '编号';
Comment added
SQL> comment on column PIS_NOCONFIRM_CONFIG.INFO_SOURCE
  2    is '情报来源';
Comment added
SQL> comment on column PIS_NOCONFIRM_CONFIG.INFO_TYPE
  2    is '情报类型';
Comment added
SQL> comment on column PIS_NOCONFIRM_CONFIG.INFO_SUBTYPE
  2    is '情报子类型';
Comment added
SQL> comment on column PIS_NOCONFIRM_CONFIG.CREATRE_USER
  2    is '创建人';
Comment added
SQL> drop table PIS_OPER_LOG;
Table dropped
SQL> create table PIS_OPER_LOG
  2  (
  3    OPER_ID          VARCHAR2(32) not null,
  4    OPER_CODE        VARCHAR2(2) not null,
  5    OPER_TARGET_TYPE VARCHAR2(2) not null,
  6    OPER_TIME        DATE not null,
  7    OPER_ACCOUNT     VARCHAR2(10),
  8    OPER_DEPT        VARCHAR2(12),
  9    GROUP_ID         VARCHAR2(32),
 10    STATE_ID         VARCHAR2(32),
 11    OPER_TARGET_ID   VARCHAR2(1000) not null,
 12    OPER_NUM         VARCHAR2(32),
 13    OPER_CONTENT     CLOB
 14  )
 15  ;
Table created
SQL> comment on table PIS_OPER_LOG
  2    is '处理日志表';
Comment added
SQL> comment on column PIS_OPER_LOG.OPER_ID
  2    is '操作日志编号';
Comment added
SQL> comment on column PIS_OPER_LOG.OPER_CODE
  2    is '操作编码  待确认1：
  3  10 确认 11补充信息
  4  待分拣2：
  5  20 分拣 21废弃 22追加派发 23移出组 24升级 25 设为主情报
  6  26 合并
  7  27 批量废弃  28 分拣超期 29 分拣用时
  8  待签收3：
  9  30 签收 31撤回 32督办 33 签收超期
 10  
 11  办理中4：
 12  40办结 41退回 42督办 43 添加协办 44 过程反馈 45 撤回
 13  46办结用时 47 办结超期
 14  
 15  已完结5：
 16  50重开';
Comment added
SQL> comment on column PIS_OPER_LOG.OPER_TARGET_TYPE
  2    is '操作对象类型（1：部门；2：情报；3：情报组）';
Comment added
SQL> comment on column PIS_OPER_LOG.OPER_TIME
  2    is '操作时间';
Comment added
SQL> comment on column PIS_OPER_LOG.OPER_ACCOUNT
  2    is '操作人';
Comment added
SQL> comment on column PIS_OPER_LOG.OPER_DEPT
  2    is '操作部门';
Comment added
SQL> comment on column PIS_OPER_LOG.GROUP_ID
  2    is '组编号';
Comment added
SQL> comment on column PIS_OPER_LOG.STATE_ID
  2    is '进度编号';
Comment added
SQL> comment on column PIS_OPER_LOG.OPER_TARGET_ID
  2    is '操作对象编号';
Comment added
SQL> comment on column PIS_OPER_LOG.OPER_NUM
  2    is '操作序号';
Comment added
SQL> comment on column PIS_OPER_LOG.OPER_CONTENT
  2    is '日志内容  待确认1：
  3  10确认
  4  11补充信息（补充内容）
  5  
  6  待分拣2：
  7  20分拣(工作要求）
  8  21废弃（废弃原因）
  9  22追加派发（工作要求）
 10  23移出组
 11  24升级 （升级原因）
 12  25 设为主情报
 13  26合并（合并的所有情报组编号）
 14  27 批量废弃
 15  28 分拣超期（超期时长）
 16  29 分拣用时（时长）
 17  待签收3：
 18   30 签收
 19   31撤回（撤回原因）
 20   32督办（督办要求）
 21   33签收超期（超期时长）
 22  办理中4：
 23   40办结（办理结果）
 24   41退回（退回原因）
 25   42督办（督办要求）
 26   43添加协办（工作要求）
 27   44过程反馈（反馈内容）
 28   45撤回（撤回原因）
 29   46办结用时
 30   47办结超期
 31  已完结5：
 32   50重开（重开原因）';
Comment added
SQL> alter table PIS_OPER_LOG
  2    add constraint PIS_OPER_LOG_PK primary key (OPER_ID);
Table altered
SQL> drop table PIS_PARAM_CONFIG;
Table dropped
SQL> create table PIS_PARAM_CONFIG
  2  (
  3    param_code    VARCHAR2(100) not null,
  4    param_value   VARCHAR2(100) not null,
  5    param_desc    VARCHAR2(500),
  6    param_type    VARCHAR2(2),
  7    param_comment VARCHAR2(500),
  8    param_id      VARCHAR2(100) not null
  9  );
Table created
SQL> comment on table PIS_PARAM_CONFIG
  2    is '参数配置表';
Comment added
SQL> -- Add comments to the columns
SQL> comment on column PIS_PARAM_CONFIG.param_code
  2    is '参数代码';
Comment added
SQL> comment on column PIS_PARAM_CONFIG.param_value
  2    is '参数值';
Comment added
SQL> comment on column PIS_PARAM_CONFIG.param_desc
  2    is '参数描述';
Comment added
SQL> comment on column PIS_PARAM_CONFIG.param_type
  2    is '参数类型';
Comment added
SQL> comment on column PIS_PARAM_CONFIG.param_comment
  2    is '备注';
Comment added
SQL> comment on column PIS_PARAM_CONFIG.param_id
  2    is 'ID';
Comment added
SQL> alter table PIS_PARAM_CONFIG
  2    add constraint PIS_PARAM_CONFIG_PK primary key (PARAM_ID)
  3    using index
  4    tablespace hiatmpts
  5    pctfree 10
  6    initrans 2
  7    maxtrans 255
  8    storage
  9    (
 10      initial 64K
 11      next 1M
 12      minextents 1
 13      maxextents unlimited
 14    );
Table altered
SQL> drop table PIS_USER_SCREEN_CONFIG;
Table dropped
SQL> create table PIS_USER_SCREEN_CONFIG
  2  (
  3    USERID       VARCHAR2(10) not null,
  4    INFO_FEATURE VARCHAR2(500) not null,
  5    INFO_TYPE    VARCHAR2(500) not null,
  6    INFO_SOURCE  VARCHAR2(500) not null,
  7    INFO_SUBTYPE VARCHAR2(500),
  8    UPDATE_TIME  DATE not null
  9  )
 10  ;
Table created
SQL> comment on table PIS_USER_SCREEN_CONFIG
  2    is '用户情报筛选配置表';
Comment added
SQL> comment on column PIS_USER_SCREEN_CONFIG.USERID
  2    is '用户编号';
Comment added
SQL> comment on column PIS_USER_SCREEN_CONFIG.INFO_FEATURE
  2    is '情报性质';
Comment added
SQL> comment on column PIS_USER_SCREEN_CONFIG.INFO_TYPE
  2    is '情报类型';
Comment added
SQL> comment on column PIS_USER_SCREEN_CONFIG.INFO_SOURCE
  2    is '情报来源';
Comment added
SQL> comment on column PIS_USER_SCREEN_CONFIG.INFO_SUBTYPE
  2    is '情报子类型';
Comment added
SQL> comment on column PIS_USER_SCREEN_CONFIG.UPDATE_TIME
  2    is '更新时间';
Comment added
SQL> alter table PIS_USER_SCREEN_CONFIG
  2    add constraint PIS_USER_SCREEN_CONFIG_PK primary key (USERID);
Table altered
SQL> drop table POI_POINT;
Table dropped
SQL> create table POI_POINT
  2  (
  3    PID       VARCHAR2(35),
  4    POI_ID    VARCHAR2(13),
  5    NAME      VARCHAR2(150),
  6    PYNAME    VARCHAR2(150),
  7    DISPLAY_X VARCHAR2(20),
  8    DISPLAY_Y VARCHAR2(20),
  9    TYPE      VARCHAR2(4)
 10  )
 11  ;
Table created
SQL> --↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑HiATMP-DB-PIS-DDL.6.0.0.0.A5.sql End-------------------------
SQL> --↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓HiATMP-DB-PIS-DDL.6.0.0.0.A6.sql Start-----------------------
SQL> truncate table pis_info_base;
Table truncated
SQL> truncate table pis_accident_cars;
Table truncated
SQL> truncate table pis_attachs;
Table truncated
SQL> truncate table pis_feature_type_config;
Table truncated
SQL> truncate table pis_param_config;
Table truncated
SQL> truncate table pis_field_index;
Table truncated
SQL> truncate table pis_field_schema;
Table truncated
SQL> truncate table pis_group;
Table truncated
SQL> truncate table pis_group_marks;
Table truncated
SQL> truncate table pis_group_stages;
Table truncated
SQL> truncate table pis_info_dept_process;
Table truncated
SQL> truncate table pis_info_depts;
Table truncated
SQL> truncate table pis_info_details;
Table truncated
SQL> truncate table pis_info_group_relation;
Table truncated
SQL> truncate table pis_oper_log;
Table truncated
SQL> -- Create table
SQL> create table PIS_ABANDON_INFO_TAG
  2  (
  3    group_id NVARCHAR2(32) not null,
  4    taglist  NVARCHAR2(2000) not null
  5  );
Table created
SQL> -- Add comments to the table
SQL> comment on table PIS_ABANDON_INFO_TAG
  2    is '废弃情报标签表';
Comment added
SQL> -- Add comments to the columns
SQL> comment on column PIS_ABANDON_INFO_TAG.group_id
  2    is '情报组编号';
Comment added
SQL> comment on column PIS_ABANDON_INFO_TAG.taglist
  2    is '情报组标签';
Comment added
SQL> -- Create/Recreate primary, unique and foreign key constraints
SQL> alter table PIS_ABANDON_INFO_TAG
  2    add constraint GROUP_ID_PRE primary key (GROUP_ID)
  3    using index
  4    tablespace hiatmpts
  5    pctfree 10
  6    initrans 2
  7    maxtrans 255
  8    storage
  9    (
 10      initial 64K
 11      next 1M
 12      minextents 1
 13      maxextents unlimited
 14    );
Table altered
SQL> create or replace view pis_group_data_view as
  2  select GROUP_ID,
  3         case
  4           when group_level is not null then
  5            group_level
  6           else
  7            (select min(i1.info_level)
  8               from pis_info_group_relation r1, pis_info_base i1
  9              where r1.info_id = i1.info_id
 10                and r1.group_id = t.group_id)
 11         end group_level,
 12         case
 13           when sign_limit is not null then
 14            sign_limit
 15           else
 16            (select to_number(c.param_value)
 17               from pis_param_config c
 18              where c.param_code = 'SIGN_TIME')
 19         end sign_limit,
 20         DISPATCH_TIME,
 21         SIGN_TIME,
 22         case
 23           when close_limit is not null then
 24            close_limit
 25           else
 26            (select max(ftc.close_limit)
 27               from pis_info_base           ib,
 28                    pis_info_group_relation igr,
 29                    pis_feature_type_config ftc
 30              where ib.info_id = igr.info_id
 31                and ib.info_subtype = ftc.subtype
 32                and igr.group_id = t.group_id)
 33         end close_limit,
 34         CLOSE_TIME ,
 35         GROUP_STAGE,
 36         SORTER_USERID,
 37         DISPATCH_CLOSE_TIME
 38    from pis_group t;
View created
SQL> /
View created
SQL> create or replace view pis_group_cq_view as
  2  select g.group_id,g.dispatch_time start_time,g.group_stage from pis_group_data_view g
  3  where g.group_stage='03'
  4  and g.dispatch_time+nvl(g.sign_limit,0)/(24*60)<sysdate
  5  union all
  6  select g.group_id,g.sign_time start_time,g.group_stage from pis_group_data_view g
  7  where g.group_stage='04'
  8  and g.sign_time+nvl(g.close_limit,0)/(24*60)<sysdate;
View created
SQL> /
View created
SQL> --↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑HiATMP-DB-PIS-DDL.6.0.0.0.A6.sql End-------------------------
SQL> --↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓HiATMP-DB-PIS-DDL.6.0.0.0.A7.sql Start-----------------------
SQL> create or replace view pis_group_view as
  2  select GROUP_ID,group_level upgrade_level,
  3          case
  4           when to_number(nvl(group_level,100))<(select to_number(nvl(min(i1.info_level),100))
  5               from pis_info_group_relation r1, pis_info_base i1
  6              where r1.info_id = i1.info_id
  7                and r1.group_id = t.group_id) then
  8            group_level
  9           else
 10            (select min(i1.info_level)
 11               from pis_info_group_relation r1, pis_info_base i1
 12              where r1.info_id = i1.info_id
 13                and r1.group_id = t.group_id)
 14         end group_level,
 15         case
 16           when sign_limit is not null then
 17            sign_limit
 18           else
 19            (select to_number(c.param_value)
 20               from pis_param_config c
 21              where c.param_code = 'SIGN_TIME')
 22         end sign_limit,
 23         DISPATCH_TIME,
 24         SIGN_TIME,
 25         case
 26           when close_limit is not null then
 27            close_limit
 28           else
 29            (select max(ftc.close_limit)
 30               from pis_info_base           ib,
 31                    pis_info_group_relation igr,
 32                    pis_feature_type_config ftc
 33              where ib.info_id = igr.info_id
 34                and ib.info_subtype = ftc.subtype
 35                and igr.group_id = t.group_id)
 36         end close_limit,
 37         CLOSE_TIME ,
 38         GROUP_STAGE,
 39         SORTER_USERID,
 40         DISPATCH_CLOSE_TIME,
 41         (select count(1) from pis_group_db_view db where db.group_id=t.group_id) dbflag,
 42         (select count(1) from pis_group_ck_view ck where ck.group_id=t.group_id) ckflag,
 43         (select count(1) from pis_group_cq_view cq where cq.group_id=t.group_id) cqflag
 44    from pis_group t;
View created
SQL> /
View created
SQL> --↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑HiATMP-DB-PIS-DDL.6.0.0.0.A7.sql End-------------------------
SQL> --↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓HiATMP-DB-PIS-DDL.6.0.0.0.B2.sql Start-----------------------
SQL> -- Add/modify columns
SQL> alter table BURST_EVENT modify videourl NVARCHAR2(1000);
Table altered
SQL> commit;
Commit complete
SQL> --↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑HiATMP-DB-PIS-DDL.6.0.0.0.B2.sql End-------------------------
SQL>  --↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓HiATMP-DB-PIS-DDL.6.0.0.0.B3.sql Start-----------------------
SQL>   alter table BURST_EVENT modify videourl NVARCHAR2(2000);
Table altered
SQL> commit;
Commit complete
SQL> --↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑HiATMP-DB-PIS-DDL.6.0.0.0.B3.sql End-------------------------
SQL>  --↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓HiATMP-DB-PIS-DDL.6.0.0.0.B4.sql Start-----------------------
SQL>    create or replace view pis_info_abandon_view as
  2  select to_char(l.oper_target_id) info_id,l.oper_time abandontime from pis_oper_log l where l.oper_code=21 and nvl(instr(l.group_id,'_del'),0)>0
  3  union all
  4  select to_char(r.info_id),l.oper_time from pis_oper_log l,pis_info_group_relation r where l.oper_code=27 and l.group_id=r.group_id;
View created
SQL> create or replace view department_district as
  2  select t.cdepartmentid,t.cdepartmentid District,to_char(t.nlevel) nlevel from department t where t.nlevel=3 and t.innerdeptflag='0'
  3  union all
  4  select t.cdepartmentid,t.parentdepartment District,to_char(t.nlevel) nlevel from department t where t.nlevel=4
  5  union all
  6  select t1.cdepartmentid,t2.parentdepartment District,to_char(t1.nlevel) nlevel from department t1,department t2 where t1.parentdepartment=t2.cdepartmentid and t1.nlevel=5;
create or replace view department_district as
select t.cdepartmentid,t.cdepartmentid District,to_char(t.nlevel) nlevel from department t where t.nlevel=3 and t.innerdeptflag='0'
union all
select t.cdepartmentid,t.parentdepartment District,to_char(t.nlevel) nlevel from department t where t.nlevel=4
union all
select t1.cdepartmentid,t2.parentdepartment District,to_char(t1.nlevel) nlevel from department t1,department t2 where t1.parentdepartment=t2.cdepartmentid and t1.nlevel=5
ORA-00942: 表或视图不存在
SQL>  --↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑HiATMP-DB-PIS-DDL.6.0.0.0.B4.sql End-------------------------
SQL>   --↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓HiATMP-DB-PIS-DDL.6.0.0.0.B5.sql Start-----------------------
SQL> -- Create/Recreate indexes
SQL> create index PIS_ATTACHS_Infoid on PIS_ATTACHS (info_id);
Index created
SQL>  --↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑HiATMP-DB-PIS-DDL.6.0.0.0.B5.sql End-------------------------
SQL> ------------------------------------6.0 pis end-----------------------------
SQL> spool off
SQL> -------------------------------QD.A1 START-----------------
SQL> alter table ENUM_TYPE modify enumvalue VARCHAR2(100);
alter table ENUM_TYPE modify enumvalue VARCHAR2(100)
ORA-00942: 表或视图不存在
SQL> --监管点新增碰撞表格字段
SQL> alter table PSA_MONITOR_INFO add tables VARCHAR2(100);
Table altered
SQL> -- Add comments to the columns
SQL> comment on column PSA_MONITOR_INFO.tables
  2    is '关联碰撞表单';
Comment added
SQL>   -- Add/modify columns
SQL> alter table PSA_COLLIDE_SQL modify fields VARCHAR2(4000);
Table altered
SQL> alter table PSA_COLLIDE_SQL modify tablename VARCHAR2(4000);
Table altered
SQL> create or replace function completehphm(hphm in varchar,hpzl in varchar) return varchar2 is
  2    Result varchar2(60);
  3  
  4  begin
  5    if hpzl = '15' then
  6      if instr(hphm,'挂')<=0 and length(hphm) = 6 then
  7        Result := hphm || '挂';
  8        return(Result);
  9      end if;
 10    end if;
 11  
 12    if hpzl = '16' then
 13      if instr(hphm,'学')<=0 and length(hphm) = 6 then
 14        Result := hphm || '学';
 15        return(Result);
 16      end if;
 17    end if;
 18  
 19    if hpzl = '23' then
 20      if instr(hphm,'警')<=0 and length(hphm) = 6 then
 21        Result := hphm || '警';
 22        return(Result);
 23      end if;
 24    end if;
 25  
 26    if hpzl = '26' then
 27      if instr(hphm,'港')<=0 and length(hphm) = 6 then
 28        Result := hphm || '港';
 29        return(Result);
 30      end if;
 31    end if;
 32  
 33    if hpzl = '27' then
 34      if instr(hphm,'澳')<=0 and length(hphm) = 6 then
 35        Result := hphm || '澳';
 36        return(Result);
 37      end if;
 38    end if;
 39  
 40    if hpzl = '03' then
 41      if instr(hphm,'使')<=0 and length(hphm) = 6 then
 42        Result := hphm || '使';
 43        return(Result);
 44      end if;
 45    end if;
 46  
 47    if hpzl = '04' then
 48      if instr(hphm,'领')<=0 and length(hphm) = 6 then
 49        Result := hphm || '领';
 50        return(Result);
 51      end if;
 52    end if;
 53    Result:= hphm;
 54  return(Result);
 55  end completehphm;
 56  /
Function created
SQL> create or replace function is_vehicle_number(pp_vehicle_number in varchar2) return number
  2  
  3    is
  4  
  5      v_result number;
  6  
  7      v_express varchar2(600);
  8  
  9      v_hphm varchar2(20);
 10  
 11      p_vehicle_number varchar2(60);
 12  
 13    begin
 14  
 15      -- 默认0，表示不正确
 16  
 17      v_result := 0;
 18  
 19      p_vehicle_number := trim(pp_vehicle_number);
 20  
 21  --挂车
 22      if instr(p_vehicle_number,'挂') > 0 then
 23  
 24        if length(p_vehicle_number) >= 6 and length(p_vehicle_number) <= 7 then
 25  
 26          v_hphm := replace(p_vehicle_number,'挂','');
 27  
 28          v_express := '^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{3,4}$';
 29  
 30          if regexp_like(v_hphm, v_express) then
 31  
 32            v_result := 1;
 33  
 34          end if;
 35  
 36        end if;
 37  
 38        if length(p_vehicle_number) = 8 then
 39  
 40            v_hphm := replace(p_vehicle_number,'挂','');
 41  
 42            v_express := '^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{5}$';
 43  
 44            if regexp_like(v_hphm, v_express) then
 45  
 46              v_result := 1;
 47  
 48            end if;
 49  
 50        end if;
 51  
 52        if length(p_vehicle_number) > 8 then
 53  
 54            v_result := 1;
 55  
 56        end if;
 57  
 58      end if;
 59  
 60  
 61  
 62  
 63  -- 普通车处理（包括警车和军车）
 64  
 65      if length(p_vehicle_number) >= 6 and length(p_vehicle_number) <= 7 then
 66  
 67        v_express := '^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9挂学警港澳使领]{0,1}$';
 68  
 69        if regexp_like(p_vehicle_number, v_express) then
 70  
 71          v_result := 1;
 72  
 73        end if;
 74  -- 总部武警车
 75  
 76         v_express := '^[W]{1}[J]{1}[0-9]{2}[0-9XBTSHJD]{3}$';
 77  
 78        if regexp_like(p_vehicle_number, v_express) then
 79  
 80          v_result := 1;
 81  
 82        end if;
 83  
 84      end if;
 85  
 86  
 87        --军车
 88        v_express := '^[QVKHBSLJNGCEZ]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{5}$';
 89         if regexp_like(p_vehicle_number, v_express) then
 90  
 91          v_result := 1;
 92  
 93         end if;
 94  
 95  
 96      if length(p_vehicle_number) = 8 then
 97  
 98   -- 新能源车处理（分为小型能源车和大型能源车）
 99  
100      --小型能源车
101  
102        v_express := '^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领]{1}[A-Z]{1}[DF]{1}[[A-HJ-NP-Z0-9]{1}[0-9]{4}$';
103  
104        if regexp_like(p_vehicle_number, v_express) then
105  
106          v_result := 1;
107  
108        end if;
109  
110        --大型能源车
111  
112        v_express := '^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领]{1}[A-Z]{1}[0-9]{5}[DF]{1}$';
113  
114        if regexp_like(p_vehicle_number, v_express) then
115  
116          v_result := 1;
117  
118        end if;
119  
120        -- 地方武警车处理
121  
122        v_express := '^[W]{1}[J]{1}[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼]{1}[0-9]{2}[0-9XBTSHJD]{3}$';
123  
124        if regexp_like(p_vehicle_number, v_express) then
125  
126          v_result := 1;
127  
128        end if;
129  
130      end if;
131  
132      return v_result;
133  
134    end;
135  /
Function created
SQL> --------------------------------QD.A1 END-----------------------------
SQL> alter table PSA_MONITOR_THIRD_SYS_CONFIG  add constraint pk_m3sys primary key (ID);
Table altered
SQL> --------------------------------QD-PIS.A1 START-----------------------------
SQL> -- Add/modify columns
SQL> alter table PIS_GROUP add recall_time VARCHAR2(50);
Table altered
SQL> alter table PIS_GROUP add recall_approval_status VARCHAR2(10);
Table altered
SQL> -- Add comments to the columns
SQL> comment on column PIS_GROUP.recall_time
  2    is '延期时长（多次用逗号分隔）';
Comment added
SQL> comment on column PIS_GROUP.recall_approval_status
  2    is '延期审批结果（多次用逗号分隔）';
Comment added
SQL> -- Add/modify columns
SQL> alter table PIS_INFO_DEPT_PROCESS add recall_time date;
Table altered
SQL> alter table PIS_INFO_DEPT_PROCESS add return_time date;
Table altered
SQL> -- Add comments to the columns
SQL> comment on column PIS_INFO_DEPT_PROCESS.recall_time
  2    is '撤回时间';
Comment added
SQL> comment on column PIS_INFO_DEPT_PROCESS.return_time
  2    is '退回时间';
Comment added
SQL> create or replace view pis_group_ck_view as
  2  select l.group_id,count(1)count from pis_oper_log l where l.oper_code='50' group by l.group_id;
View created
SQL> alter table ALERTEVENT_CONFIG modify eventsource VARCHAR2(2000);
alter table ALERTEVENT_CONFIG modify eventsource VARCHAR2(2000)
ORA-00942: 表或视图不存在
SQL> alter table ALERTEVENT_CONFIG modify eventtype VARCHAR2(2000);
alter table ALERTEVENT_CONFIG modify eventtype VARCHAR2(2000)
ORA-00942: 表或视图不存在
SQL> alter table ALERTEVENT_CONFIG modify eventarea VARCHAR2(2000);
alter table ALERTEVENT_CONFIG modify eventarea VARCHAR2(2000)
ORA-00942: 表或视图不存在
SQL> create or replace view pis_group_data_view as
  2  select GROUP_ID,
  3         case
  4           when group_level is not null then
  5            group_level
  6           else
  7            (select min(i1.info_level)
  8               from pis_info_group_relation r1, pis_info_base i1
  9              where r1.info_id = i1.info_id
 10                and r1.group_id = t.group_id)
 11         end group_level,
 12         case
 13           when sign_limit is not null then
 14            sign_limit
 15           else
 16            (select to_number(c.param_value)
 17               from pis_param_config c
 18              where c.param_code = 'SIGN_TIME')
 19         end sign_limit,
 20         DISPATCH_TIME,
 21         SIGN_TIME,
 22         case
 23           when close_limit is not null then
 24            close_limit
 25           else
 26            (select max(ftc.close_limit)
 27               from pis_info_base           ib,
 28                    pis_info_group_relation igr,
 29                    pis_feature_type_config ftc
 30              where ib.info_id = igr.info_id
 31                and ib.info_subtype = ftc.subtype
 32                and igr.group_id = t.group_id)
 33         end close_limit,
 34         CLOSE_TIME ,
 35         GROUP_STAGE,
 36         SORTER_USERID,
 37         DISPATCH_CLOSE_TIME
 38    from pis_group t;
View created
SQL> /
View created
SQL> create or replace view pis_group_cq_view as
  2  select g.group_id,g.dispatch_time start_time,g.group_stage from pis_group_data_view g
  3  where g.group_stage='03'
  4  and g.dispatch_time+nvl(g.sign_limit,0)/(24*60)<sysdate
  5  union all
  6  select g.group_id,g.sign_time start_time,g.group_stage from pis_group_data_view g
  7  where g.group_stage='04'
  8  and g.sign_time+nvl(g.close_limit,0)/(24*60)<sysdate;
View created
SQL> /
View created
SQL> create or replace view pis_group_db_view as
  2  select d.group_id,count(1)count from pis_info_depts d where d.is_supervise='1' group by d.group_id;
View created
SQL> /
View created
SQL> create or replace view pis_group_sj_view as
  2  select l.group_id,count(1)count from pis_oper_log l where l.oper_code='24' group by l.group_id;
View created
SQL> /
View created
SQL> create or replace view pis_group_view as
  2  select GROUP_ID,group_level upgrade_level,
  3          case
  4           when to_number(nvl(group_level,100))<(select to_number(nvl(min(i1.info_level),100))
  5               from pis_info_group_relation r1, pis_info_base i1
  6              where r1.info_id = i1.info_id
  7                and r1.group_id = t.group_id) then
  8            group_level
  9           else
 10            (select min(i1.info_level)
 11               from pis_info_group_relation r1, pis_info_base i1
 12              where r1.info_id = i1.info_id
 13                and r1.group_id = t.group_id)
 14         end group_level,
 15         case
 16           when sign_limit is not null then
 17            sign_limit
 18           else
 19            (select to_number(c.param_value)
 20               from pis_param_config c
 21              where c.param_code = 'SIGN_TIME')
 22         end sign_limit,
 23         DISPATCH_TIME,
 24         SIGN_TIME,
 25         case
 26           when close_limit is not null then
 27            close_limit
 28           else
 29            (select max(ftc.close_limit)
 30               from pis_info_base           ib,
 31                    pis_info_group_relation igr,
 32                    pis_feature_type_config ftc
 33              where ib.info_id = igr.info_id
 34                and ib.info_subtype = ftc.subtype
 35                and igr.group_id = t.group_id)
 36         end close_limit,
 37         CLOSE_TIME ,
 38         GROUP_STAGE,
 39         SORTER_USERID,
 40         DISPATCH_CLOSE_TIME,
 41         recall_time,
 42         t.recall_approval_status,
 43         (select count(1) from pis_group_db_view db where db.group_id=t.group_id) dbflag,
 44         (select count(1) from pis_group_ck_view ck where ck.group_id=t.group_id) ckflag,
 45         (select count(1) from pis_group_cq_view cq where cq.group_id=t.group_id) cqflag
 46    from pis_group t;
View created
SQL> /
View created
SQL> create or replace view pis_info_abandon_view as
  2  select to_char(l.oper_target_id) info_id,l.oper_time abandontime from pis_oper_log l where l.oper_code=21 and nvl(instr(l.group_id,'_del'),0)>0
  3  union all
  4  select to_char(r.info_id),l.oper_time from pis_oper_log l,pis_info_group_relation r where l.oper_code=27 and l.group_id=r.group_id;
View created
SQL> /
View created
SQL> -- Add/modify columns
SQL> alter table WBC_NOTICE_INFO add menu_id VARCHAR2(32);
alter table WBC_NOTICE_INFO add menu_id VARCHAR2(32)
ORA-00942: 表或视图不存在
SQL> alter table WBC_NOTICE_INFO add menu_name NVARCHAR2(40);
alter table WBC_NOTICE_INFO add menu_name NVARCHAR2(40)
ORA-00942: 表或视图不存在
SQL> alter table WBC_NOTICE_INFO add notice_subtype NVARCHAR2(40);
alter table WBC_NOTICE_INFO add notice_subtype NVARCHAR2(40)
ORA-00942: 表或视图不存在
SQL> alter table WBC_NOTICE_INFO add notice_system VARCHAR2(32);
alter table WBC_NOTICE_INFO add notice_system VARCHAR2(32)
ORA-00942: 表或视图不存在
SQL> -- Add comments to the columns
SQL> comment on column WBC_NOTICE_INFO.menu_id
  2    is '通知需要打开的菜单编号';
comment on column WBC_NOTICE_INFO.menu_id
  is '通知需要打开的菜单编号'
ORA-00942: 表或视图不存在
SQL> comment on column WBC_NOTICE_INFO.menu_name
  2    is '通知需要打开的菜单名称';
comment on column WBC_NOTICE_INFO.menu_name
  is '通知需要打开的菜单名称'
ORA-00942: 表或视图不存在
SQL> comment on column WBC_NOTICE_INFO.notice_subtype
  2    is '通知的子类型';
comment on column WBC_NOTICE_INFO.notice_subtype
  is '通知的子类型'
ORA-00942: 表或视图不存在
SQL> comment on column WBC_NOTICE_INFO.notice_system
  2    is '通知的子系统缩写（bsp,tsm,pis,scs,tpm,ddm,psd,hrv）';
comment on column WBC_NOTICE_INFO.notice_system
  is '通知的子系统缩写（bsp,tsm,pis,scs,tpm,ddm,psd,hrv）'
ORA-00942: 表或视图不存在
SQL> -- Add/modify columns
SQL> alter table WBC_NOTICE_INFO add thirdsyscode VARCHAR2(100);
alter table WBC_NOTICE_INFO add thirdsyscode VARCHAR2(100)
ORA-00942: 表或视图不存在
SQL> -- Add comments to the columns
SQL> comment on column WBC_NOTICE_INFO.thirdsyscode
  2    is '通知消息的第三方编号';
comment on column WBC_NOTICE_INFO.thirdsyscode
  is '通知消息的第三方编号'
ORA-00942: 表或视图不存在
SQL> -- Add/modify columns
SQL> alter table PIS_INFO_DETAILS modify AREAID null;
Table altered
SQL> alter table PIS_INFO_DETAILS modify INFO_LOCATION null;
Table altered
SQL> alter table PIS_INFO_DETAILS modify LOCATION_COORDINATE null;
Table altered
SQL> ------------------------------------------------
SQL> -- Export file for user             --
SQL> -- Created by xujian.ex on 2020/5/6, 10:00:47 --
SQL> ------------------------------------------------
SQL> create or replace view pis_group_ck_view as
  2  select l.group_id,count(1)count from pis_oper_log l where l.oper_code='50' group by l.group_id;
View created
SQL> /
View created
SQL> create or replace view pis_group_data_view as
  2  select GROUP_ID,
  3         case
  4           when group_level is not null then
  5            group_level
  6           else
  7            (select min(i1.info_level)
  8               from pis_info_group_relation r1, pis_info_base i1
  9              where r1.info_id = i1.info_id
 10                and r1.group_id = t.group_id)
 11         end group_level,
 12         case
 13           when sign_limit is not null then
 14            sign_limit
 15           else
 16            (select to_number(c.param_value)
 17               from pis_param_config c
 18              where c.param_code = 'SIGN_TIME')
 19         end sign_limit,
 20         DISPATCH_TIME,
 21         SIGN_TIME,
 22         case
 23           when close_limit is not null then
 24            close_limit
 25           else
 26            (select max(ftc.close_limit)
 27               from pis_info_base           ib,
 28                    pis_info_group_relation igr,
 29                    pis_feature_type_config ftc
 30              where ib.info_id = igr.info_id
 31                and ib.info_subtype = ftc.subtype
 32                and igr.group_id = t.group_id)
 33         end close_limit,
 34         CLOSE_TIME ,
 35         GROUP_STAGE,
 36         SORTER_USERID,
 37         DISPATCH_CLOSE_TIME
 38    from pis_group t;
View created
SQL> /
View created
SQL> create or replace view pis_group_cq_view as
  2  select g.group_id,g.dispatch_time start_time,g.group_stage from pis_group_data_view g
  3  where g.group_stage='03'
  4  and g.dispatch_time+nvl(g.sign_limit,0)/(24*60)<sysdate
  5  union all
  6  select g.group_id,g.sign_time start_time,g.group_stage from pis_group_data_view g
  7  where g.group_stage='04'
  8  and g.sign_time+nvl(g.close_limit,0)/(24*60)<sysdate;
View created
SQL> /
View created
SQL> create or replace view pis_group_db_view as
  2  select d.group_id,count(1)count from pis_info_depts d where d.is_supervise='1' group by d.group_id;
View created
SQL> /
View created
SQL> create or replace view pis_group_sj_view as
  2  select l.group_id,count(1)count from pis_oper_log l where l.oper_code='24' group by l.group_id;
View created
SQL> /
View created
SQL> create or replace view pis_group_view as
  2  select GROUP_ID,group_level upgrade_level,
  3          case
  4           when to_number(nvl(group_level,100))<(select to_number(nvl(min(i1.info_level),100))
  5               from pis_info_group_relation r1, pis_info_base i1
  6              where r1.info_id = i1.info_id
  7                and r1.group_id = t.group_id) then
  8            group_level
  9           else
 10            (select min(i1.info_level)
 11               from pis_info_group_relation r1, pis_info_base i1
 12              where r1.info_id = i1.info_id
 13                and r1.group_id = t.group_id)
 14         end group_level,
 15         case
 16           when sign_limit is not null then
 17            sign_limit
 18           else
 19            (select to_number(c.param_value)
 20               from pis_param_config c
 21              where c.param_code = 'SIGN_TIME')
 22         end sign_limit,
 23         DISPATCH_TIME,
 24         SIGN_TIME,
 25         case
 26           when close_limit is not null then
 27            close_limit
 28           else
 29            (select max(ftc.close_limit)
 30               from pis_info_base           ib,
 31                    pis_info_group_relation igr,
 32                    pis_feature_type_config ftc
 33              where ib.info_id = igr.info_id
 34                and ib.info_subtype = ftc.subtype
 35                and igr.group_id = t.group_id)
 36         end close_limit,
 37         CLOSE_TIME ,
 38         GROUP_STAGE,
 39         SORTER_USERID,
 40         DISPATCH_CLOSE_TIME,
 41         recall_time,
 42         t.recall_approval_status,
 43         (select count(1) from pis_group_db_view db where db.group_id=t.group_id) dbflag,
 44         (select count(1) from pis_group_ck_view ck where ck.group_id=t.group_id) ckflag,
 45         (select count(1) from pis_group_cq_view cq where cq.group_id=t.group_id) cqflag
 46    from pis_group t;
View created
SQL> /
View created
SQL> create or replace view pis_info_abandon_view as
  2  select to_char(l.oper_target_id) info_id,l.oper_time abandontime from pis_oper_log l where l.oper_code=21 and nvl(instr(l.group_id,'_del'),0)>0
  3  union all
  4  select to_char(r.info_id),l.oper_time from pis_oper_log l,pis_info_group_relation r where l.oper_code=27 and l.group_id=r.group_id;
View created
SQL> /
View created
SQL> create or replace view pis_info_dispatch as
  2  select substr(g.group_id,0,16) group_id,g.group_id groupid_del,l.oper_time,l.oper_account,i."INFO_ID",i."INFO_CHANNEL",i."INFO_SOURCE",i."INFO_FEATURE",i."INFO_LEVEL",i."INFO_TYPE",i."INFO_SUBTYPE",i."INFO_TIME",i."CREATE_TIME",i."INFO_STAGE",i."DISPATCH_TIME",i."SIGN_TIME",i."THIRDSYSCODE",i."SIMHASHCODE",i."INFO_COORDINATE",i."INFO_ADDRESS",i."CONFIRM_TIME",i."CONFIRM_USERID",i."CLOSE_TIME",i."INFO_DEPTID",i."INFO_DESC",i."INFO_CONTENT",i."INFO_TOPIC"
  3    from pis_group g, pis_info_base i, pis_info_group_relation r, pis_oper_log l
  4   where g.group_id like '%_del%'
  5     and i.info_id = r.info_id
  6     and r.group_id = g.group_id
  7     and l.oper_code='21' and r.group_id=l.group_id and i.info_id=l.oper_target_id
  8  union all
  9  select g.group_id,g.group_id groupid_del,g.dispatch_time oper_time,g.sorter_userid oper_account ,i."INFO_ID",i."INFO_CHANNEL",i."INFO_SOURCE",i."INFO_FEATURE",i."INFO_LEVEL",i."INFO_TYPE",i."INFO_SUBTYPE",i."INFO_TIME",i."CREATE_TIME",i."INFO_STAGE",i."DISPATCH_TIME",i."SIGN_TIME",i."THIRDSYSCODE",i."SIMHASHCODE",i."INFO_COORDINATE",i."INFO_ADDRESS",i."CONFIRM_TIME",i."CONFIRM_USERID",i."CLOSE_TIME",i."INFO_DEPTID",i."INFO_DESC",i."INFO_CONTENT",i."INFO_TOPIC"
 10  from pis_group g, pis_info_group_relation r, pis_info_base i
 11    where i.info_id = r.info_id and r.group_id = g.group_id  and g.dispatch_time is not null and i.dispatch_time is not null;
View created
SQL> /
View created
SQL> create or replace function belongRoad(longitude in varchar2,latitude in varchar2) return varchar2 is
  2    t_str  varchar2(4000);
  3  begin
  4    select t.sectionid into t_str from (
  5    select m.sectionid,SDO_GEOM.SDO_DISTANCE(G.GEOMETRY,
  6                                  MDSYS.SDO_GEOMETRY(2001,
  7                                                     8307,
  8                                                     MDSYS.SDO_POINT_TYPE(to_number(longitude), to_number(latitude), 0),
  9                                                     NULL,
 10                                                     NULL),1) distance from monitor_section_positions g left join monitor_section m on g.sectionid = m.sectionid
 11   WHERE SDO_WITHIN_DISTANCE(G.GEOMETRY,
 12                             MDSYS.SDO_GEOMETRY(2001,/*点类型*/
 13                                                8307,
 14                                                MDSYS.SDO_POINT_TYPE(to_number(longitude), to_number(latitude), 0),
 15                                                NULL,
 16                                                NULL),
 17                             'distance=100 querytype=WINDOW') = 'TRUE'
 18     AND G.ZOOMLEVEL = '0' order by distance) t where rownum=1;
 19  
 20    return t_str;
 21  end belongRoad;
 22  /
Warning: Function created with compilation errors
SQL> create or replace function completehphm(hphm in varchar,hpzl in varchar) return varchar2 is
  2    Result varchar2(20);
  3  
  4  begin
  5    if hpzl = '15' then
  6      if instr(hphm,'挂')<=0 then
  7        Result := hphm || '挂';
  8        return(Result);
  9      end if;
 10    end if;
 11  
 12    if hpzl = '16' then
 13      if instr(hphm,'学')<=0 then
 14        Result := hphm || '学';
 15        return(Result);
 16      end if;
 17    end if;
 18  
 19    if hpzl = '23' then
 20      if instr(hphm,'警')<=0 then
 21        Result := hphm || '警';
 22        return(Result);
 23      end if;
 24    end if;
 25  
 26    if hpzl = '26' then
 27      if instr(hphm,'港')<=0 then
 28        Result := hphm || '港';
 29        return(Result);
 30      end if;
 31    end if;
 32  
 33    if hpzl = '27' then
 34      if instr(hphm,'澳')<=0 then
 35        Result := hphm || '澳';
 36        return(Result);
 37      end if;
 38    end if;
 39  
 40    if hpzl = '03' then
 41      if instr(hphm,'使')<=0 then
 42        Result := hphm || '使';
 43        return(Result);
 44      end if;
 45    end if;
 46  
 47    if hpzl = '04' then
 48      if instr(hphm,'领')<=0 then
 49        Result := hphm || '领';
 50        return(Result);
 51      end if;
 52    end if;
 53    Result:= hphm;
 54  return(Result);
 55  end completehphm;
 56  /
Function created
SQL> CREATE OR REPLACE TYPE ty_row_str_split  as object (strValue VARCHAR2 (4000));
  2  /
Type created
SQL> CREATE OR REPLACE TYPE ty_tbl_str_split AS TABLE OF ty_row_str_split;
  2  /
Type created
SQL> CREATE OR REPLACE FUNCTION fn_split(p_str       IN VARCHAR2,
  2                                      p_delimiter IN VARCHAR2)
  3    RETURN ty_tbl_str_split IS
  4    j         INT := 0;
  5    i         INT := 1;
  6    len       INT := 0;
  7    len1      INT := 0;
  8    str       VARCHAR2(4000);
  9    str_split ty_tbl_str_split := ty_tbl_str_split();
 10  BEGIN
 11    len  := LENGTH(p_str);
 12    len1 := LENGTH(p_delimiter);
 13    WHILE j < len LOOP
 14      j := INSTR(p_str, p_delimiter, i);
 15      IF j = 0 THEN
 16        j   := len;
 17        str := SUBSTR(p_str, i);
 18        str_split.EXTEND;
 19        str_split(str_split.COUNT) := ty_row_str_split(strValue => str);
 20        IF i >= len THEN
 21          EXIT;
 22        END IF;
 23      ELSE
 24        str := SUBSTR(p_str, i, j - i);
 25        i   := j + len1;
 26        str_split.EXTEND;
 27        str_split(str_split.COUNT) := ty_row_str_split(strValue => str);
 28      END IF;
 29    END LOOP;
 30    RETURN str_split;
 31  END fn_split;
 32  /
Function created
SQL> create or replace function format_time(collection_time in Date) return integer is
  2    Result integer;
  3  begin
  4    Result:=to_number(trunc(collection_time,'hh24'))*60*60+to_number(trunc(collection_time,'mi'))*60+to_number(trunc(collection_time,'ss'));
  5    return(Result);
  6  end format_time;
  7  /
Function created
SQL> create or replace function iscontain(str in varchar2, key in varchar2,split in varchar2) return number is
  2    Result number;
  3  begin
  4    select instr(split||str||split,split||key||split) into Result from dual;
  5    return(Result);
  6  end iscontain;
  7  /
Function created
SQL> create or replace function Isnumber(P_column in varchar2) return number
  2  is
  3   l_t number;
  4  begin
  5    l_t := to_number(P_column) ;
  6   -- if l_t >=0 then
  7       return 1;
  8   -- else
  9     --  return 0;
 10   -- end if;
 11    exception when others then
 12       return 0;
 13  end;
 14  /
Function created
SQL> create or replace function is_vehicle_number(p_vehicle_number in varchar2) return number
  2  
  3    is
  4  
  5      v_result number;
  6  
  7      v_express varchar2(600);
  8  
  9      v_p_vehicle_number varchar2(20);
 10  
 11    begin
 12  
 13      -- 默认0，表示不正确
 14  
 15      v_result := 0;
 16      v_p_vehicle_number := '';
 17  
 18  --挂车
 19      if instr(p_vehicle_number,'挂') > 0 then
 20  
 21        v_p_vehicle_number := substr(p_vehicle_number,1,7);
 22  
 23         v_express := '^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9挂学警港澳使领]{1}$';
 24  
 25        if regexp_like(v_p_vehicle_number, v_express) then
 26  
 27          v_result := 1;
 28  
 29        end if;
 30  
 31      end if;
 32  
 33  
 34  -- 普通车处理（包括警车和军车）
 35  
 36      if length(p_vehicle_number) = 7 then
 37  
 38        v_express := '^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9挂学警港澳使领]{1}$';
 39  
 40        if regexp_like(p_vehicle_number, v_express) then
 41  
 42          v_result := 1;
 43  
 44        end if;
 45  
 46      end if;
 47  
 48  
 49      if length(p_vehicle_number) = 8 then
 50  
 51   -- 新能源车处理（分为小型能源车和大型能源车）
 52  
 53      --小型能源车
 54  
 55        v_express := '^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[DF]{1}[[A-HJ-NP-Z0-9]{1}[0-9]{4}$';
 56  
 57        if regexp_like(p_vehicle_number, v_express) then
 58  
 59          v_result := 1;
 60  
 61        end if;
 62  
 63        --大型能源车
 64  
 65        v_express := '^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[0-9]{5}[DF]{1}$';
 66  
 67        if regexp_like(p_vehicle_number, v_express) then
 68  
 69          v_result := 1;
 70  
 71        end if;
 72  
 73   -- 武警车处理
 74  
 75        v_express := '^[W]{1}[J]{1}[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼]{1}[0-9]{4}[0-9XBTSHJD]{1}$';
 76  
 77        if regexp_like(p_vehicle_number, v_express) then
 78  
 79          v_result := 1;
 80  
 81        end if;
 82  
 83      end if;
 84  
 85      return v_result;
 86  
 87    end;
 88  /
Function created
SQL> CREATE OR REPLACE FUNCTION MD5( passwd IN VARCHAR2) RETURN VARCHAR2
  2  
  3  IS
  4  
  5      retval varchar2(32);
  6  
  7  BEGIN
  8  
  9      retval := (case when passwd is null then null else utl_raw.cast_to_raw(DBMS_OBFUSCATION_TOOLKIT.MD5(INPUT_STRING => passwd)) end);
 10  
 11      RETURN retval;
 12  
 13  END;
 14  /
Function created
SQL> CREATE OR REPLACE FUNCTION parsejson(p_jsonstr varchar2,p_key varchar2) RETURN VARCHAR2
  2  AS
  3    rtnVal VARCHAR2(1000);
  4    i NUMBER(2);
  5    jsonkey VARCHAR2(500);
  6    jsonvalue VARCHAR2(1000);
  7    json VARCHAR2(3000);
  8  BEGIN
  9    IF p_jsonstr IS NOT NULL THEN
 10       json := REPLACE(p_jsonstr,'{','') ;
 11       json := REPLACE(json,'}','') ;
 12       json := replace(json,'"','') ;
 13       FOR temprow IN(SELECT strvalue AS VALUE FROM TABLE(fn_split(json, ','))) LOOP
 14          IF temprow.VALUE IS NOT NULL THEN
 15             i := 0;
 16             jsonkey := '';
 17             jsonvalue := '';
 18             FOR tem2 IN(SELECT strvalue AS VALUE FROM TABLE(fn_split(temprow.value, ':'))) LOOP
 19                 IF i = 0 THEN
 20                    jsonkey := tem2.VALUE;
 21                 END IF;
 22                 IF i = 1 THEN
 23                    jsonvalue := tem2.VALUE;
 24                 END IF;
 25  
 26                 i := i + 1;
 27             END LOOP;
 28  
 29             IF(jsonkey = p_key) THEN
 30                 rtnVal := jsonvalue;
 31             END if;
 32          END IF;
 33       END LOOP;
 34    END IF;
 35    RETURN rtnVal;
 36  END parsejson;
 37  /
Function created
SQL> create or replace function rad(d number) return number
  2  is
  3  pi number :=3.141592625;
  4  begin
  5    return  d * pi/180.0;
  6  end ;
  7  /
Function created
SQL> create or replace function ratio(value in number, beforevalue in number) return varchar2 is
  2    Result varchar2(4000);
  3  begin
  4    select case beforevalue when 0 then '--'
  5    else rtrim(to_char((value-beforevalue)/beforevalue,'FM999999999990.9999'),to_char(0,'.')) end into Result from dual;
  6    return(Result);
  7  end ratio;
  8  /
Function created
SQL> create or replace function regexp_like_number(
  2    haopai  VARCHAR2,
  3    haopai2  VARCHAR2 )
  4     return number is
  5    sum_i integer;
  6    size_i integer;
  7    i integer;
  8   begin
  9  --declare
 10  -- haopai varchar2(9) := '鲁B1U3O5';
 11  -- haopai2 varchar2(9) := '鲁B12345';
 12   size_i := length(haopai);
 13   i  :=1;
 14   sum_i :=0;
 15  
 16   --dbms_output.put_line(size_i);
 17   loop
 18   if(i!=1) then
 19    if substr(haopai,i,1)!=substr(haopai2,i,1) then
 20    --dbms_output.put_line(i);
 21    -- dbms_output.put_line(substr(haopai,i,1));
 22     -- dbms_output.put_line(substr(haopai2,i,1));
 23    sum_i:=sum_i+1;
 24    end if;
 25    end if;
 26    i:=i+1;
 27    exit when i>size_i;
 28    end loop;
 29    return(sum_i);
 30    --dbms_output.put_line(sum_i);
 31    end;
 32  /
Function created
SQL> create or replace function regexp_like_number_comp(
  2    haopai  VARCHAR2,
  3    haopai2  VARCHAR2 )
  4     return number is
  5    sum_i integer;
  6    size_i integer;
  7    i integer;
  8   begin
  9  --declare
 10  -- haopai varchar2(9) := 'B1U3O5';
 11  -- haopai2 varchar2(9) := 'B12345';
 12   size_i := length(haopai);
 13   i  :=1;
 14   sum_i :=0;
 15  
 16   --dbms_output.put_line(size_i);
 17   loop
 18   --if(i!=1) then
 19    if substr(haopai,i,1)!=substr(haopai2,i,1) then
 20    --dbms_output.put_line(i);
 21    -- dbms_output.put_line(substr(haopai,i,1));
 22     -- dbms_output.put_line(substr(haopai2,i,1));
 23    sum_i:=sum_i+1;
 24    end if;
 25   -- end if;
 26    i:=i+1;
 27    exit when i>size_i;
 28    end loop;
 29    return(sum_i);
 30    --dbms_output.put_line(sum_i);
 31    end;
 32  /
Function created
SQL> CREATE OR REPLACE FUNCTION split (p_list CLOB, p_sep VARCHAR2 := ',')
  2  RETURN tabletype
  3  PIPELINED
  4  /**************************************
  5  * Name: split
  6  * Author: Sean Zhang.
  7  * Date: 2012-09-03.
  8  * Function: 返回字符串被指定字符分割后的表类型。
  9  * Parameters: p_list: 待分割的字符串。
 10  p_sep: 分隔符，默认逗号，也可以指定字符或字符串。
 11  * Example: SELECT *
 12  FROM users
 13  WHERE u_id IN (SELECT COLUMN_VALUE
 14  FROM table (split ('1,2')))
 15  返回u_id为1和2的两行数据。
 16  **************************************/
 17  IS
 18  l_idx PLS_INTEGER;
 19  v_list VARCHAR2 (32676) := p_list;
 20  BEGIN
 21  LOOP
 22  l_idx := INSTR (v_list, p_sep);
 23  IF l_idx > 0
 24  THEN
 25  PIPE ROW (SUBSTR (v_list, 1, l_idx - 1));
 26  v_list := SUBSTR (v_list, l_idx + LENGTH (p_sep));
 27  ELSE
 28  PIPE ROW (v_list);
 29  EXIT;
 30  END IF;
 31  END LOOP;
 32  END;
 33  /
Warning: Function created with compilation errors
SQL> create or replace function roadLengthInErea(p_dldm varchar2, erea varchar2)
  2    return number is
  3    /*
  4    计算道路(道路代码为dldm)在辖区(行政辖区为erea)内的道路长度
  5    注意，只有国道、省道、高速才可以使用此方法计算
  6    */
  7    TYPE xq_item_type IS TABLE OF VARCHAR2(100) index by binary_integer;
  8    xqItem xq_item_type;
  9    /*格式为：李沧,370213,1,1111;.....*/
 10    xzqhxxlc varchar2(2000);
 11    xqLength number := 0;
 12  
 13  begin
 14  
 15    --select xzqhxxlc into xzqhxxlc from vio_coderoad where dldm = p_dldm and glxzdj not in ('3', '4') and rownum = 1;
 16    select xzqhxxlc into xzqhxxlc from vio_coderoad where dldm = p_dldm and rownum = 1;
 17    for item in (select column_value from table(split(xzqhxxlc, ';'))) loop
 18  
 19      select column_value bulk collect into xqItem from table(split(item.column_value, ','));
 20  
 21      if xqItem(2) = erea then
 22        xqLength := to_number(xqItem(4)) - to_number(xqItem(3));
 23      end if;
 24  
 25    end loop;
 26  
 27    return xqLength;
 28  
 29  exception
 30    when others then
 31      dbms_output.put_line(sqlcode || ': ' || sqlerrm || ' in methord :roadLengthInErea');
 32      return 0;
 33  end;
 34  /
Warning: Function created with compilation errors
SQL> create or replace function splitstr(str in clob,
  2                                      i  in number := 0,
  3                                      sep in varchar2 := ',') return varchar2 is
  4    t_i    number;
  5    t_count number;
  6    t_str  varchar2(4000);
  7  begin
  8    if i = 0 then
  9      t_str := str;
 10    elsif instr(str, sep) = 0 then
 11      t_str := sep;
 12    else
 13      select count(*) into t_count from table(split(str, sep));
 14  
 15      if i <= t_count then
 16        select str
 17          into t_str
 18          from (select rownum as item, column_value as str
 19                  from table(split(str, sep)))
 20        where item = i;
 21      end if;
 22    end if;
 23  
 24    return t_str;
 25  end;
 26  /
Warning: Function created with compilation errors
SQL> --------------------------------QD-PIS.A1 END-----------------------------
SQL> --------------------------------QD-PIS.A2 START-----------------------------
SQL> alter table WBC_NOTICE_INFO modify notice_title NVARCHAR2(1000);
alter table WBC_NOTICE_INFO modify notice_title NVARCHAR2(1000)
ORA-00942: 表或视图不存在
SQL> alter table PEH_POLICE_EMERGENCY modify road_name NVARCHAR2(500);
alter table PEH_POLICE_EMERGENCY modify road_name NVARCHAR2(500)
ORA-00942: 表或视图不存在
SQL> comment on column PIS_OPER_LOG.oper_code
  2    is '操作编码  待确认1：
  3  10 确认有效 11确认废弃 12 升级
  4  待分拣2：
  5  20 分拣 21废弃 22追加派发 23移出组 24升级 25 设为主情报
  6  26 合并
  7  27 批量废弃  28 分拣超期 29 分拣用时
  8  待签收3：
  9  30 签收 31撤回 32督办 33 签收超期
 10  
 11  办理中4：
 12  40办结 41退回 42督办 43 添加协办 44 过程反馈 45 撤回
 13  46办结用时 47 办结超期
 14  
 15  已完结5：
 16  50重开';
Comment added
SQL> comment on column PIS_OPER_LOG.oper_content
  2    is '日志内容  待确认1：
  3  10 确认有效（确认结果）
  4  11 确认废弃（确认结果）
  5  12 升级（升级原因）
  6  待分拣2：
  7  20分拣(工作要求）
  8  21废弃（废弃原因）
  9  22追加派发（工作要求）
 10  23移出组
 11  24升级 （升级原因）
 12  25 设为主情报
 13  26合并（合并的所有情报组编号）
 14  27 批量废弃
 15  28 分拣超期（超期时长）
 16  29 分拣用时（时长）
 17  待签收3：
 18   30 签收
 19   31撤回（撤回原因）
 20   32督办（督办要求）
 21   33签收超期（超期时长）
 22  办理中4：
 23   40办结（办理结果）
 24   41退回（退回原因）
 25   42督办（督办要求）
 26   43添加协办（工作要求）
 27   44过程反馈（反馈内容）
 28   45撤回（撤回原因）
 29   46办结用时
 30   47办结超期
 31  已完结5：
 32   50重开（重开原因）';
Comment added
SQL>  -- Add/modify columns
SQL> alter table DEPARTMENT add departmenttype nvarchar2(10);
alter table DEPARTMENT add departmenttype nvarchar2(10)
ORA-00942: 表或视图不存在
SQL> -- Add comments to the columns
SQL> comment on column DEPARTMENT.departmenttype
  2    is '部门类型';
comment on column DEPARTMENT.departmenttype
  is '部门类型'
ORA-00942: 表或视图不存在
SQL> create or replace view pis_group_cq_view as
  2  select g.group_id,g.dispatch_time start_time,g.group_stage from pis_group_data_view g
  3  where g.group_stage='03'
  4  and g.dispatch_time+nvl(g.sign_limit,0)/(24*60)<sysdate
  5  union all
  6  select g.group_id,g.sign_time start_time,g.group_stage from pis_group_data_view g
  7  where g.group_stage='04' and g.dispatch_time+nvl(g.close_limit,0)/(24*60)<sysdate;
View created
SQL> /
View created
SQL> create or replace view department_belongto as
  2  select t.cdepartmentid,
  3         t.cdepartmentname,
  4         t.deptshortname,
  5         to_char(t.nlevel) nlevel,
  6         to_char(t.departmentflag) departmentflag,
  7         t.cdepartmentid belongto
  8    from department t
  9  where t.nlevel = '3'
 10  union all
 11  select t.cdepartmentid,
 12         t.cdepartmentname,
 13         t.deptshortname,
 14         to_char(t.nlevel) nlevel,
 15         to_char(t.departmentflag) departmentflag,
 16         t.parentdepartment belongto
 17    from department t
 18  where t.nlevel = '4'
 19  union all
 20  select t.cdepartmentid,
 21         t.cdepartmentname,
 22         t.deptshortname,
 23         to_char(t.nlevel) nlevel,
 24         to_char(t.departmentflag) departmentflag,
 25         t1.parentdepartment belongto
 26    from department t,department t1
 27  where t.nlevel = '5' and t.parentdepartment=t1.cdepartmentid;
create or replace view department_belongto as
select t.cdepartmentid,
       t.cdepartmentname,
       t.deptshortname,
       to_char(t.nlevel) nlevel,
       to_char(t.departmentflag) departmentflag,
       t.cdepartmentid belongto
  from department t
where t.nlevel = '3'
union all
select t.cdepartmentid,
       t.cdepartmentname,
       t.deptshortname,
       to_char(t.nlevel) nlevel,
       to_char(t.departmentflag) departmentflag,
       t.parentdepartment belongto
  from department t
where t.nlevel = '4'
union all
select t.cdepartmentid,
       t.cdepartmentname,
       t.deptshortname,
       to_char(t.nlevel) nlevel,
       to_char(t.departmentflag) departmentflag,
       t1.parentdepartment belongto
  from department t,department t1
where t.nlevel = '5' and t.parentdepartment=t1.cdepartmentid
ORA-00942: 表或视图不存在
SQL> /
create or replace view department_belongto as
select t.cdepartmentid,
       t.cdepartmentname,
       t.deptshortname,
       to_char(t.nlevel) nlevel,
       to_char(t.departmentflag) departmentflag,
       t.cdepartmentid belongto
  from department t
where t.nlevel = '3'
union all
select t.cdepartmentid,
       t.cdepartmentname,
       t.deptshortname,
       to_char(t.nlevel) nlevel,
       to_char(t.departmentflag) departmentflag,
       t.parentdepartment belongto
  from department t
where t.nlevel = '4'
union all
select t.cdepartmentid,
       t.cdepartmentname,
       t.deptshortname,
       to_char(t.nlevel) nlevel,
       to_char(t.departmentflag) departmentflag,
       t1.parentdepartment belongto
  from department t,department t1
where t.nlevel = '5' and t.parentdepartment=t1.cdepartmentid
ORA-00942: 表或视图不存在
SQL> create or replace function splitstr(str in clob,
  2  
  3                                      i  in number := 0,
  4  
  5                                      sep in varchar2 := ',') return varchar2 is
  6  
  7    t_count number;
  8  
  9    t_str  varchar2(4000);
 10  
 11  begin
 12  
 13    t_str := '';
 14  
 15    if i = 0 then
 16  
 17      t_str := str;
 18  
 19    elsif instr(str, sep) = 0 and i = 1 then
 20  
 21      t_str := str;
 22  
 23    else
 24  
 25      select count(*) into t_count from table(split(str, sep));
 26  
 27      if i <= t_count then
 28  
 29        select str
 30  
 31          into t_str
 32  
 33          from (select rownum as item, column_value as str
 34  
 35                  from table(split(str, sep)))
 36  
 37        where item = i;
 38  
 39      end if;
 40  
 41    end if;
 42  
 43    return t_str;
 44  
 45  end;
 46  /
Warning: Function created with compilation errors
SQL> create or replace function pis_groupclosetime(time    in date,
  2  
  3                                                limit   in varchar2,
  4  
  5                                                recall  in varchar2,
  6  
  7                                                status  in varchar2)
  8  
  9  return date is
 10    Result date;
 11    status1 varchar2(10);
 12    status2 varchar2(10);
 13    len1    int;
 14    len2    int;
 15  begin
 16    len1 := 0;
 17    len2 := 0;
 18    status1 := splitstr(status,1,',');
 19    status2 := splitstr(status,2,',');
 20    if status1='1' then
 21      len1 := to_number(nvl(splitstr(recall,1,','),'0'));
 22    end if;
 23    if status2='1' then
 24      len2 := to_number(nvl(splitstr(recall,2,','),'0'));
 25    end if;
 26    Result := time+limit+len1+len2;
 27    return(Result);
 28  end pis_groupclosetime;
 29  /
Warning: Function created with compilation errors
SQL> create or replace view pis_group_data_view as
  2  select GROUP_ID,
  3         case
  4           when group_level is not null then
  5            group_level
  6           else
  7            (select min(i1.info_level)
  8               from pis_info_group_relation r1, pis_info_base i1
  9              where r1.info_id = i1.info_id
 10                and r1.group_id = t.group_id)
 11         end group_level,
 12         case
 13           when sign_limit is not null then
 14            sign_limit
 15           else
 16            (select to_number(c.param_value)
 17               from pis_param_config c
 18              where c.param_code = 'SIGN_TIME')
 19         end sign_limit,
 20         DISPATCH_TIME,
 21         SIGN_TIME,
 22         case
 23           when close_limit is not null then
 24            close_limit
 25           else
 26            (select max(ftc.close_limit)
 27               from pis_info_base           ib,
 28                    pis_info_group_relation igr,
 29                    pis_feature_type_config ftc
 30              where ib.info_id = igr.info_id
 31                and ib.info_subtype = ftc.subtype
 32                and igr.group_id = t.group_id)
 33         end close_limit,
 34         CLOSE_TIME,
 35         GROUP_STAGE,
 36         SORTER_USERID,
 37         DISPATCH_CLOSE_TIME,
 38         t.recall_time,
 39  	   t.recall_approval_status from pis_group t;
View created
SQL> /
View created
SQL> --------------------------------QD-PIS.A2 END-----------------------------
SQL> --------------------------------QD-PIS.A3 START-----------------------------
SQL> -- Add/modify columns
SQL> alter table PIS_OPER_LOG modify oper_code VARCHAR2(10);
Table altered
SQL> -- Create table
SQL> create table PIS_DISPATCH_INFO
  2  (
  3    group_id     VARCHAR2(32) not null,
  4    upgrade_info NVARCHAR2(500),
  5    info_stage   NVARCHAR2(2000),
  6    group_stage  NVARCHAR2(100),
  7    oper_num     NVARCHAR2(1000),
  8    create_time  DATE
  9  )
 10  tablespace HIATMPTS
 11    pctfree 10
 12    initrans 1
 13    maxtrans 255
 14    storage
 15    (
 16      initial 64K
 17      next 1M
 18      minextents 1
 19      maxextents unlimited
 20    );
Table created
SQL> -- Add comments to the table
SQL> comment on table PIS_DISPATCH_INFO
  2    is '情报派发信息记录表';
Comment added
SQL> -- Add comments to the columns
SQL> comment on column PIS_DISPATCH_INFO.group_id
  2    is '情报组编号';
Comment added
SQL> comment on column PIS_DISPATCH_INFO.upgrade_info
  2    is '升级信息：未升级-0；升级-1|原级别|升级后的级别|升级原因';
Comment added
SQL> comment on column PIS_DISPATCH_INFO.info_stage
  2    is '派发前的情报组中各个情报的状态：infoid-02.infoid-03,infoid-03';
Comment added
SQL> comment on column PIS_DISPATCH_INFO.group_stage
  2    is '派发前的情报组状态';
Comment added
SQL> comment on column PIS_DISPATCH_INFO.oper_num
  2    is '派发在时间轴中生成的记录oper_num';
Comment added
SQL> comment on column PIS_DISPATCH_INFO.create_time
  2    is '添加时间';
Comment added
SQL> -- Create/Recreate primary, unique and foreign key constraints
SQL> alter table PIS_DISPATCH_INFO
  2    add constraint PRIMART_KEY primary key (GROUP_ID)
  3    using index
  4    tablespace HIATMPTS
  5    pctfree 10
  6    initrans 2
  7    maxtrans 255
  8    storage
  9    (
 10      initial 64K
 11      next 1M
 12      minextents 1
 13      maxextents unlimited
 14    );
Table altered
SQL> create global temporary table tmp_groupid(gid varchar2(50), ordernum int)on commit delete rows;
Table created
SQL> create or replace view pis_info_dispatch as
  2  select substr(g.group_id,0,16)
  3  group_id,g.group_id groupid_del,l.oper_time,l.oper_account,i."INFO_ID",i."INFO_CHANNEL",i."INFO_SOURCE",i."INFO_FEATURE",i."INFO_LEVEL",i."INFO_TYPE",i."INFO_SUBTYPE",i."INFO_TIME",i."CREATE_TIME",i."INFO_STAGE",i."DISPATCH_TIME",i."SIGN_TIME",i."THIRDSYSCODE",i."SIMHASHCODE",i."INFO_COORDINATE",i."INFO_ADDRESS",i."CONFIRM_TIME",i."CONFIRM_USERID",i."CLOSE_TIME",i."INFO_DEPTID",i."INFO_DESC",i."INFO_CONTENT",i."INFO_TOPIC"
  4    from pis_group g, pis_info_base i, pis_info_group_relation r, pis_oper_log l
  5   where g.group_id like '%_del%'
  6     and i.info_id = r.info_id
  7     and r.group_id = g.group_id
  8     and l.oper_code='21' and r.group_id=l.group_id and i.info_id=l.oper_target_id
  9  union all
 10  select to_char(l.oper_target_id)
 11  group_id,l.group_id group_del,l.oper_time,l.oper_account,i."INFO_ID",i."INFO_CHANNEL",i."INFO_SOURCE",i."INFO_FEATURE",i."INFO_LEVEL",i."INFO_TYPE",i."INFO_SUBTYPE",i."INFO_TIME",i."CREATE_TIME",i."INFO_STAGE",i."DISPATCH_TIME",i."SIGN_TIME",i."THIRDSYSCODE",i."SIMHASHCODE",i."INFO_COORDINATE",i."INFO_ADDRESS",i."CONFIRM_TIME",i."CONFIRM_USERID",i."CLOSE_TIME",i."INFO_DEPTID",i."INFO_DESC",i."INFO_CONTENT",i."INFO_TOPIC" from pis_oper_log l,pis_info_group_relation r,pis_info_base i,pis_group g
 12  where l.oper_code='27' and i.info_id=r.info_id and r.group_id=l.group_id and g.group_id=r.group_id and g.group_id like '%_del%'
 13  union all
 14  select g.group_id,g.group_id groupid_del,g.dispatch_time oper_time,g.sorter_userid oper_account ,i."INFO_ID",i."INFO_CHANNEL",i."INFO_SOURCE",i."INFO_FEATURE",i."INFO_LEVEL",i."INFO_TYPE",i."INFO_SUBTYPE",i."INFO_TIME",i."CREATE_TIME",i."INFO_STAGE",i."DISPATCH_TIME",i."SIGN_TIME",i."THIRDSYSCODE",i."SIMHASHCODE",i."INFO_COORDINATE",i."INFO_ADDRESS",i."CONFIRM_TIME",i."CONFIRM_USERID",i."CLOSE_TIME",i."INFO_DEPTID",i."INFO_DESC",i."INFO_CONTENT",i."INFO_TOPIC"
 15  from pis_group g, pis_info_group_relation r, pis_info_base i
 16    where i.info_id = r.info_id and r.group_id = g.group_id  and g.dispatch_time is not null and i.dispatch_time is not null and i.info_stage in ('03','04','05');
View created
SQL> /
View created
SQL> create or replace function pis_groupclosetime(time    in date,
  2                                                limit   in varchar2,
  3                                                recall  in varchar2,
  4                                                status  in varchar2)
  5  return date is
  6    Result date;
  7    status1 varchar2(10);
  8    status2 varchar2(10);
  9    len1    int;
 10    len2    int;
 11  begin
 12    len1 := 0;
 13    len2 := 0;
 14    status1 := splitstr(status,1,',');
 15    status2 := splitstr(status,2,',');
 16    if status1='1' then
 17      len1 := to_number(nvl(splitstr(recall,1,','),'0'));
 18    end if;
 19    if status2='1' then
 20      len2 := to_number(nvl(splitstr(recall,2,','),'0'));
 21    end if;
 22  
 23    Result := time+limit/(24*60)+len1+len2;
 24  
 25    return(Result);
 26  end pis_groupclosetime;
 27  /
Warning: Function created with compilation errors
SQL> --------------------------------QD-PIS.A3 END-----------------------------
SQL> --------------------------------QD-PIS.A4 START-----------------------------
SQL> -- Add/modify columns
SQL> alter table PIS_DISPATCH_INFO add dept_id nvarchar2(2000);
Table altered
SQL> -- Add comments to the columns
SQL> comment on column PIS_DISPATCH_INFO.dept_id
  2    is '派发时选择的办理部门';
Comment added
SQL> create or replace function belongRoad(longitude in varchar2,latitude in varchar2) return varchar2 is
  2    t_str  varchar2(4000);
  3  begin
  4    select t.sectionid into t_str from (
  5    select m.sectionid,SDO_GEOM.SDO_DISTANCE(G.GEOMETRY,
  6                                  MDSYS.SDO_GEOMETRY(2001,
  7                                                     8307,
  8                                                     MDSYS.SDO_POINT_TYPE(to_number(longitude), to_number(latitude), 0),
  9                                                     NULL,
 10                                                     NULL),1) distance from monitor_section_positions g left join monitor_section m on g.sectionid = m.sectionid
 11   WHERE SDO_WITHIN_DISTANCE(G.GEOMETRY,
 12                             MDSYS.SDO_GEOMETRY(2001,/*点类型*/
 13                                                8307,
 14                                                MDSYS.SDO_POINT_TYPE(to_number(longitude), to_number(latitude), 0),
 15                                                NULL,
 16                                                NULL),
 17                             'distance=200 querytype=WINDOW') = 'TRUE'
 18     AND G.ZOOMLEVEL = '0' order by distance) t where rownum=1;
 19  
 20    return t_str;
 21  end belongRoad;
 22  /
Warning: Function created with compilation errors
SQL> create or replace function pis_groupclosetime(time    in date,
  2                                                limit   in varchar2,
  3                                                recall  in varchar2,
  4                                                status  in varchar2)
  5  return date is
  6    Result date;
  7    status1 varchar2(10);
  8    status2 varchar2(10);
  9    len1    int;
 10    len2    int;
 11  begin
 12    len1 := 0;
 13    len2 := 0;
 14    status1 := splitstr(status,1,',');
 15    status2 := splitstr(status,2,',');
 16    if status1='1' then
 17      len1 := to_number(nvl(splitstr(recall,1,','),'0'));
 18    end if;
 19    if status2='1' then
 20      len2 := to_number(nvl(splitstr(recall,2,','),'0'));
 21    end if;
 22  
 23    Result := time+limit/(24*60)+len1+len2;
 24  
 25    return(Result);
 26  end pis_groupclosetime;
 27  /
Warning: Function created with compilation errors
SQL> --------------------------------QD-PIS.A4 END-----------------------------
SQL> --------------------------------QD-PIS.A5 START-----------------------------
SQL> -- Add/modify columns
SQL> alter table PIS_INFO_DEPT_PROCESS modify deptid VARCHAR2(50);
Table altered
SQL> -- Add/modify columns
SQL> alter table PIS_DISPATCH_INFO add group_info nvarchar2(2000);
Table altered
SQL> -- Add comments to the columns
SQL> comment on column PIS_DISPATCH_INFO.group_info
  2    is '派发前的情报组信息（上次派发时间，签收时间，办结时间）';
Comment added
SQL> --------------------------------QD-PIS.A5 END-----------------------------

SQL> 